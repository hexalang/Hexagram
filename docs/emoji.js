;
(function() {
	"use strict"

	window.countryEmoji = function(code) {
		return String.fromCodePoint(code[0].charCodeAt(0) + 127397, code[1].charCodeAt(0) + 127397)
	}

	var emojiTable = [
		//[0xD83D, 0xDE03], 0, 1,
		//[0xD83D, 0xDD28], 2, 3,
		//[0xD83D, 0xDE15], 0,0,
		////[0xde15, 0xd83d]

		// 1

		[0xD83D, 0xDE00], 0, 0,
		[0xD83D, 0xDE03], 0, 0,
		[0xD83D, 0xDE04], 0, 0,
		[0xD83D, 0xDE01], 0, 0,
		[0xD83D, 0xDE06], 0, 0,
		[0xD83D, 0xDE05], 0, 0,
		[0xD83D, 0xDE02], 0, 0,
		[0xD83E, 0xDD23], 0, 0,
		[0x263A, 0xFE0F], 0, 0,
		[0xD83D, 0xDE0A], 0, 0,
		[0xD83D, 0xDE07], 0, 0,
		[0xD83D, 0xDE42], 0, 0,
		[0xD83D, 0xDE43], 0, 0,
		[0xD83D, 0xDE09], 0, 0,
		[0xD83D, 0xDE0C], 0, 0,
		[0xD83D, 0xDE0D], 0, 0,
		[0xD83D, 0xDE18], 0, 0,
		[0xD83D, 0xDE17], 0, 0,
		[0xD83D, 0xDE19], 0, 0,
		[0xD83D, 0xDE1A], 0, 0,
		[0xD83D, 0xDE0B], 0, 0,
		[0xD83D, 0xDE1C], 0, 0,
		[0xD83D, 0xDE1D], 0, 0,
		[0xD83D, 0xDE1B], 0, 0,
		[0xD83E, 0xDD11], 0, 0,
		[0xD83E, 0xDD17], 0, 0,
		[0xD83E, 0xDD13], 0, 0,
		[0xD83D, 0xDE0E], 0, 0,
		[0xD83E, 0xDD21], 0, 0,
		[0xD83E, 0xDD20], 0, 0,
		[0xD83D, 0xDE0F], 0, 0,
		[0xD83D, 0xDE12], 0, 0,
		[0xD83D, 0xDE1E], 0, 0,
		[0xD83D, 0xDE14], 0, 0,
		[0xD83D, 0xDE1F], 0, 0,
		[0xD83D, 0xDE15], 0, 0,
		[0xD83D, 0xDE41], 0, 0,
		[0x2639, 0xFE0F], 0, 0,
		[0xD83D, 0xDE23], 0, 0,
		[0xD83D, 0xDE16], 0, 0,
		[0xD83D, 0xDE2B], 0, 0,
		[0xD83D, 0xDE29], 0, 0,
		[0xD83D, 0xDE24], 0, 0,
		[0xD83D, 0xDE20], 0, 0,
		[0xD83D, 0xDE21], 0, 0,
		[0xD83D, 0xDE36], 0, 0,
		[0xD83D, 0xDE10], 0, 0,
		[0xD83D, 0xDE11], 0, 0,
		[0xD83D, 0xDE2F], 0, 0,
		[0xD83D, 0xDE26], 0, 0,
		[0xD83D, 0xDE27], 0, 0,
		[0xD83D, 0xDE2E], 0, 0,
		[0xD83D, 0xDE32], 0, 0,
		[0xD83D, 0xDE35], 0, 0,
		[0xD83D, 0xDE33], 0, 0,
		[0xD83D, 0xDE31], 0, 0,
		[0xD83D, 0xDE28], 0, 0,
		[0xD83D, 0xDE30], 0, 0,
		[0xD83D, 0xDE22], 0, 0,
		[0xD83D, 0xDE25], 0, 0,
		[0xD83E, 0xDD24], 0, 0,
		[0xD83D, 0xDE2D], 0, 0,
		[0xD83D, 0xDE13], 0, 0,
		[0xD83D, 0xDE2A], 0, 0,
		[0xD83D, 0xDE34], 0, 0,
		[0xD83D, 0xDE44], 0, 0,
		[0xD83E, 0xDD14], 0, 0,
		[0xD83E, 0xDD25], 0, 0,
		[0xD83D, 0xDE2C], 0, 0,
		[0xD83E, 0xDD10], 0, 0,
		[0xD83E, 0xDD22], 0, 0,
		[0xD83E, 0xDD27], 0, 0,
		[0xD83D, 0xDE37], 0, 0,
		[0xD83E, 0xDD12], 0, 0,
		[0xD83E, 0xDD15], 0, 0,
		[0xD83D, 0xDE08], 0, 0,
		[0xD83D, 0xDC7F], 0, 0,
		[0xD83D, 0xDC79], 0, 0,
		[0xD83D, 0xDC7A], 0, 0,
		[0xD83D, 0xDCA9], 0, 0,
		[0xD83D, 0xDC7B], 0, 0,
		[0xD83D, 0xDC80], 0, 0,
		[0x2620, 0xFE0F], 0, 0,
		[0xD83D, 0xDC7D], 0, 0,
		[0xD83D, 0xDC7E], 0, 0,
		[0xD83E, 0xDD16], 0, 0,
		[0xD83C, 0xDF83], 0, 0,
		[0xD83D, 0xDE3A], 0, 0,
		[0xD83D, 0xDE38], 0, 0,
		[0xD83D, 0xDE39], 0, 0,
		[0xD83D, 0xDE3B], 0, 0,
		[0xD83D, 0xDE3C], 0, 0,
		[0xD83D, 0xDE3D], 0, 0,
		[0xD83D, 0xDE40], 0, 0,
		[0xD83D, 0xDE3F], 0, 0,
		[0xD83D, 0xDE3E], 0, 0,
		[0xD83D, 0xDC50], 0, 0,
		[0xD83D, 0xDE4C], 0, 0,
		[0xD83D, 0xDC4F], 0, 0,
		[0xD83D, 0xDE4F], 0, 0,
		[0xD83E, 0xDD1D], 0, 0,
		[0xD83D, 0xDC4D], 0, 0,
		[0xD83D, 0xDC4E], 0, 0,
		[0xD83D, 0xDC4A], 0, 0,
		[0x270A, 0xFE0F], 0, 0,
		[0xD83E, 0xDD1B], 0, 0,
		[0xD83E, 0xDD1C], 0, 0,
		[0xD83E, 0xDD1E], 0, 0,
		[0x270C, 0xFE0F], 0, 0,
		[0xD83E, 0xDD18], 0, 0,
		[0xD83D, 0xDC4C], 0, 0,
		[0xD83D, 0xDC48], 0, 0,
		[0xD83D, 0xDC49], 0, 0,
		[0xD83D, 0xDC46], 0, 0,
		[0xD83D, 0xDC47], 0, 0,
		[0x261D, 0xFE0F], 0, 0,
		[0x270B, 0xFE0F], 0, 0,
		[0xD83E, 0xDD1A], 0, 0,
		[0xD83D, 0xDD90], 0, 0,
		[0xD83D, 0xDD96], 0, 0,
		[0xD83D, 0xDC4B], 0, 0,
		[0xD83E, 0xDD19], 0, 0,
		[0xD83D, 0xDCAA], 0, 0,
		[0xD83D, 0xDD95], 0, 0,
		[0x270D, 0xFE0F], 0, 0,
		[0xD83E, 0xDD33], 0, 0,
		[0xD83D, 0xDC85], 0, 0,
		[0xD83D, 0xDC8D], 0, 0,
		[0xD83D, 0xDC84], 0, 0,
		[0xD83D, 0xDC8B], 0, 0,
		[0xD83D, 0xDC44], 0, 0,
		[0xD83D, 0xDC45], 0, 0,
		[0xD83D, 0xDC42], 0, 0,
		[0xD83D, 0xDC43], 0, 0,
		[0xD83D, 0xDC63], 0, 0,
		[0xD83D, 0xDC41], 0, 0,
		[0xD83D, 0xDC40], 0, 0,
		[0xD83D, 0xDDE3], 0, 0,
		[0xD83D, 0xDC64], 0, 0,
		[0xD83D, 0xDC65], 0, 0,
		[0xD83D, 0xDC76], 0, 0,
		[0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC68], 0, 0,
		[0xD83D, 0xDC69], 0, 0,
		[0xD83D, 0xDC71, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDC71], 0, 0,
		[0xD83D, 0xDC74], 0, 0,
		[0xD83D, 0xDC75], 0, 0,
		[0xD83D, 0xDC72], 0, 0,
		[0xD83D, 0xDC73, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDC73], 0, 0,
		[0xD83D, 0xDC6E, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDC6E], 0, 0,
		[0xD83D, 0xDC77, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDC77], 0, 0,
		[0xD83D, 0xDC82, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDC82], 0, 0,
		[0xD83D, 0xDD75, 0xFE0F, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDD75, 0xFE0F], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0x2695, 0xFE0F], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0x2695, 0xFE0F], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDF3E], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDF3E], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDF73], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDF73], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDF93], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDF93], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFA4], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFA4], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFEB], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFEB], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFED], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFED], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDCBB], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDCBB], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDCBC], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDCBC], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDD27], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDD27], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDD2C], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDD2C], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFA8], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFA8], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDE92], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDE92], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0x2708, 0xFE0F], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0x2708, 0xFE0F], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDE80], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDE80], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0x2696, 0xFE0F], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0x2696, 0xFE0F], 0, 0,
		[0xD83E, 0xDD36], 0, 0,
		[0xD83C, 0xDF85], 0, 0,
		[0xD83D, 0xDC78], 0, 0,
		[0xD83E, 0xDD34], 0, 0,
		[0xD83D, 0xDC70], 0, 0,
		[0xD83E, 0xDD35], 0, 0,
		[0xD83D, 0xDC7C], 0, 0,
		[0xD83E, 0xDD30], 0, 0,
		[0xD83D, 0xDE47, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDE47], 0, 0,
		[0xD83D, 0xDC81], 0, 0,
		[0xD83D, 0xDC81, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDE45], 0, 0,
		[0xD83D, 0xDE45, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDE46], 0, 0,
		[0xD83D, 0xDE46, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDE4B], 0, 0,
		[0xD83D, 0xDE4B, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83E, 0xDD26, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD26, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83E, 0xDD37, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD37, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDE4E], 0, 0,
		[0xD83D, 0xDE4E, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDE4D], 0, 0,
		[0xD83D, 0xDE4D, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDC87], 0, 0,
		[0xD83D, 0xDC87, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDC86], 0, 0,
		[0xD83D, 0xDC86, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDD74], 0, 0,
		[0xD83D, 0xDC83], 0, 0,
		[0xD83D, 0xDD7A], 0, 0,
		[0xD83D, 0xDC6F], 0, 0,
		[0xD83D, 0xDC6F, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDEB6, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDEB6], 0, 0,
		[0xD83C, 0xDFC3, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83C, 0xDFC3], 0, 0,
		[0xD83D, 0xDC6B], 0, 0,
		[0xD83D, 0xDC6D], 0, 0,
		[0xD83D, 0xDC6C], 0, 0,
		[0xD83D, 0xDC91], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0x2764, 0xFE0F, 0x200D, 0xD83D, 0xDC69], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0x2764, 0xFE0F, 0x200D, 0xD83D, 0xDC68], 0, 0,
		[0xD83D, 0xDC8F], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0x2764, 0xFE0F, 0x200D, 0xD83D, 0xDC8B, 0x200D, 0xD83D, 0xDC69], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0x2764, 0xFE0F, 0x200D, 0xD83D, 0xDC8B, 0x200D, 0xD83D, 0xDC68], 0, 0,
		[0xD83D, 0xDC6A], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC66, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC66, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC66, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC66, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC66, 0x200D, 0xD83D, 0xDC66], 0, 0,
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDC67, 0x200D, 0xD83D, 0xDC67], 0, 0,
		[0xD83D, 0xDC5A], 0, 0,
		[0xD83D, 0xDC55], 0, 0,
		[0xD83D, 0xDC56], 0, 0,
		[0xD83D, 0xDC54], 0, 0,
		[0xD83D, 0xDC57], 0, 0,
		[0xD83D, 0xDC59], 0, 0,
		[0xD83D, 0xDC58], 0, 0,
		[0xD83D, 0xDC60], 0, 0,
		[0xD83D, 0xDC61], 0, 0,
		[0xD83D, 0xDC62], 0, 0,
		[0xD83D, 0xDC5E], 0, 0,
		[0xD83D, 0xDC5F], 0, 0,
		[0xD83D, 0xDC52], 0, 0,
		[0xD83C, 0xDFA9], 0, 0,
		[0xD83C, 0xDF93], 0, 0,
		[0xD83D, 0xDC51], 0, 0,
		[0x26D1], 0, 0,
		[0xD83C, 0xDF92], 0, 0,
		[0xD83D, 0xDC5D], 0, 0,
		[0xD83D, 0xDC5B], 0, 0,
		[0xD83D, 0xDC5C], 0, 0,
		[0xD83D, 0xDCBC], 0, 0,
		[0xD83D, 0xDC53], 0, 0,
		[0xD83D, 0xDD76], 0, 0,
		[0xD83C, 0xDF02], 0, 0,
		[0x2602, 0xFE0F], 0, 0,

		// 2


		// 2

		[0xD83D, 0xDC36], 0, 0,
		[0xD83D, 0xDC31], 0, 0,
		[0xD83D, 0xDC2D], 0, 0,
		[0xD83D, 0xDC39], 0, 0,
		[0xD83D, 0xDC30], 0, 0,
		[0xD83E, 0xDD8A], 0, 0,
		[0xD83D, 0xDC3B], 0, 0,
		[0xD83D, 0xDC3C], 0, 0,
		[0xD83D, 0xDC28], 0, 0,
		[0xD83D, 0xDC2F], 0, 0,
		[0xD83E, 0xDD81], 0, 0,
		[0xD83D, 0xDC2E], 0, 0,
		[0xD83D, 0xDC37], 0, 0,
		[0xD83D, 0xDC3D], 0, 0,
		[0xD83D, 0xDC38], 0, 0,
		[0xD83D, 0xDC35], 0, 0,
		[0xD83D, 0xDE48], 0, 0,
		[0xD83D, 0xDE49], 0, 0,
		[0xD83D, 0xDE4A], 0, 0,
		[0xD83D, 0xDC12], 0, 0,
		[0xD83D, 0xDC14], 0, 0,
		[0xD83D, 0xDC27], 0, 0,
		[0xD83D, 0xDC26], 0, 0,
		[0xD83D, 0xDC24], 0, 0,
		[0xD83D, 0xDC23], 0, 0,
		[0xD83D, 0xDC25], 0, 0,
		[0xD83E, 0xDD86], 0, 0,
		[0xD83E, 0xDD85], 0, 0,
		[0xD83E, 0xDD89], 0, 0,
		[0xD83E, 0xDD87], 0, 0,
		[0xD83D, 0xDC3A], 0, 0,
		[0xD83D, 0xDC17], 0, 0,
		[0xD83D, 0xDC34], 0, 0,
		[0xD83E, 0xDD84], 0, 0,
		[0xD83D, 0xDC1D], 0, 0,
		[0xD83D, 0xDC1B], 0, 0,
		[0xD83E, 0xDD8B], 0, 0,
		[0xD83D, 0xDC0C], 0, 0,
		[0xD83D, 0xDC1A], 0, 0,
		[0xD83D, 0xDC1E], 0, 0,
		[0xD83D, 0xDC1C], 0, 0,
		[0xD83D, 0xDD77], 0, 0,
		[0xD83D, 0xDD78], 0, 0,
		[0xD83D, 0xDC22], 0, 0,
		[0xD83D, 0xDC0D], 0, 0,
		[0xD83E, 0xDD8E], 0, 0,
		[0xD83E, 0xDD82], 0, 0,
		[0xD83E, 0xDD80], 0, 0,
		[0xD83E, 0xDD91], 0, 0,
		[0xD83D, 0xDC19], 0, 0,
		[0xD83E, 0xDD90], 0, 0,
		[0xD83D, 0xDC20], 0, 0,
		[0xD83D, 0xDC1F], 0, 0,
		[0xD83D, 0xDC21], 0, 0,
		[0xD83D, 0xDC2C], 0, 0,
		[0xD83E, 0xDD88], 0, 0,
		[0xD83D, 0xDC33], 0, 0,
		[0xD83D, 0xDC0B], 0, 0,
		[0xD83D, 0xDC0A], 0, 0,
		[0xD83D, 0xDC06], 0, 0,
		[0xD83D, 0xDC05], 0, 0,
		[0xD83D, 0xDC03], 0, 0,
		[0xD83D, 0xDC02], 0, 0,
		[0xD83D, 0xDC04], 0, 0,
		[0xD83E, 0xDD8C], 0, 0,
		[0xD83D, 0xDC2A], 0, 0,
		[0xD83D, 0xDC2B], 0, 0,
		[0xD83D, 0xDC18], 0, 0,
		[0xD83E, 0xDD8F], 0, 0,
		[0xD83E, 0xDD8D], 0, 0,
		[0xD83D, 0xDC0E], 0, 0,
		[0xD83D, 0xDC16], 0, 0,
		[0xD83D, 0xDC10], 0, 0,
		[0xD83D, 0xDC0F], 0, 0,
		[0xD83D, 0xDC11], 0, 0,
		[0xD83D, 0xDC15], 0, 0,
		[0xD83D, 0xDC29], 0, 0,
		[0xD83D, 0xDC08], 0, 0,
		[0xD83D, 0xDC13], 0, 0,
		[0xD83E, 0xDD83], 0, 0,
		[0xD83D, 0xDD4A], 0, 0,
		[0xD83D, 0xDC07], 0, 0,
		[0xD83D, 0xDC01], 0, 0,
		[0xD83D, 0xDC00], 0, 0,
		[0xD83D, 0xDC3F], 0, 0,
		[0xD83D, 0xDC3E], 0, 0,
		[0xD83D, 0xDC09], 0, 0,
		[0xD83D, 0xDC32], 0, 0,
		[0xD83C, 0xDF35], 0, 0,
		[0xD83C, 0xDF84], 0, 0,
		[0xD83C, 0xDF32], 0, 0,
		[0xD83C, 0xDF33], 0, 0,
		[0xD83C, 0xDF34], 0, 0,
		[0xD83C, 0xDF31], 0, 0,
		[0xD83C, 0xDF3F], 0, 0,
		[0x2618, 0xFE0F], 0, 0,
		[0xD83C, 0xDF40], 0, 0,
		[0xD83C, 0xDF8D], 0, 0,
		[0xD83C, 0xDF8B], 0, 0,
		[0xD83C, 0xDF43], 0, 0,
		[0xD83C, 0xDF42], 0, 0,
		[0xD83C, 0xDF41], 0, 0,
		[0xD83C, 0xDF44], 0, 0,
		[0xD83C, 0xDF3E], 0, 0,
		[0xD83D, 0xDC90], 0, 0,
		[0xD83C, 0xDF37], 0, 0,
		[0xD83C, 0xDF39], 0, 0,
		[0xD83E, 0xDD40], 0, 0,
		[0xD83C, 0xDF3B], 0, 0,
		[0xD83C, 0xDF3C], 0, 0,
		[0xD83C, 0xDF38], 0, 0,
		[0xD83C, 0xDF3A], 0, 0,
		[0xD83C, 0xDF0E], 0, 0,
		[0xD83C, 0xDF0D], 0, 0,
		[0xD83C, 0xDF0F], 0, 0,
		[0xD83C, 0xDF15], 0, 0,
		[0xD83C, 0xDF16], 0, 0,
		[0xD83C, 0xDF17], 0, 0,
		[0xD83C, 0xDF18], 0, 0,
		[0xD83C, 0xDF11], 0, 0,
		[0xD83C, 0xDF12], 0, 0,
		[0xD83C, 0xDF13], 0, 0,
		[0xD83C, 0xDF14], 0, 0,
		[0xD83C, 0xDF1A], 0, 0,
		[0xD83C, 0xDF1D], 0, 0,
		[0xD83C, 0xDF1E], 0, 0,
		[0xD83C, 0xDF1B], 0, 0,
		[0xD83C, 0xDF1C], 0, 0,
		[0xD83C, 0xDF19], 0, 0,
		[0xD83D, 0xDCAB], 0, 0,
		[0x2B50, 0xFE0F], 0, 0,
		[0xD83C, 0xDF1F], 0, 0,
		[0x2728], 0, 0,
		[0x26A1, 0xFE0F], 0, 0,
		[0xD83D, 0xDD25], 0, 0,
		[0xD83D, 0xDCA5], 0, 0,
		[0x2604, 0xFE0F], 0, 0,
		[0x2600, 0xFE0F], 0, 0,
		[0xD83C, 0xDF24], 0, 0,
		[0x26C5, 0xFE0F], 0, 0,
		[0xD83C, 0xDF25], 0, 0,
		[0xD83C, 0xDF26], 0, 0,
		[0xD83C, 0xDF08], 0, 0,
		[0x2601, 0xFE0F], 0, 0,
		[0xD83C, 0xDF27], 0, 0,
		[0x26C8], 0, 0,
		[0xD83C, 0xDF29], 0, 0,
		[0xD83C, 0xDF28], 0, 0,
		[0x2603, 0xFE0F], 0, 0,
		[0x26C4, 0xFE0F], 0, 0,
		[0x2744, 0xFE0F], 0, 0,
		[0xD83C, 0xDF2C], 0, 0,
		[0xD83D, 0xDCA8], 0, 0,
		[0xD83C, 0xDF2A], 0, 0,
		[0xD83C, 0xDF2B], 0, 0,
		[0xD83C, 0xDF0A], 0, 0,
		[0xD83D, 0xDCA7], 0, 0,
		[0xD83D, 0xDCA6], 0, 0,
		[0x2614, 0xFE0F], 0, 0,

		// 3

		[0xD83C, 0xDF4F], 0, 0,
		[0xD83C, 0xDF4E], 0, 0,
		[0xD83C, 0xDF50], 0, 0,
		[0xD83C, 0xDF4A], 0, 0,
		[0xD83C, 0xDF4B], 0, 0,
		[0xD83C, 0xDF4C], 0, 0,
		[0xD83C, 0xDF49], 0, 0,
		[0xD83C, 0xDF47], 0, 0,
		[0xD83C, 0xDF53], 0, 0,
		[0xD83C, 0xDF48], 0, 0,
		[0xD83C, 0xDF52], 0, 0,
		[0xD83C, 0xDF51], 0, 0,
		[0xD83C, 0xDF4D], 0, 0,
		[0xD83E, 0xDD5D], 0, 0,
		[0xD83E, 0xDD51], 0, 0,
		[0xD83C, 0xDF45], 0, 0,
		[0xD83C, 0xDF46], 0, 0,
		[0xD83E, 0xDD52], 0, 0,
		[0xD83E, 0xDD55], 0, 0,
		[0xD83C, 0xDF3D], 0, 0,
		[0xD83C, 0xDF36], 0, 0,
		[0xD83E, 0xDD54], 0, 0,
		[0xD83C, 0xDF60], 0, 0,
		[0xD83C, 0xDF30], 0, 0,
		[0xD83E, 0xDD5C], 0, 0,
		[0xD83C, 0xDF6F], 0, 0,
		[0xD83E, 0xDD50], 0, 0,
		[0xD83C, 0xDF5E], 0, 0,
		[0xD83E, 0xDD56], 0, 0,
		[0xD83E, 0xDDC0], 0, 0,
		[0xD83E, 0xDD5A], 0, 0,
		[0xD83C, 0xDF73], 0, 0,
		[0xD83E, 0xDD53], 0, 0,
		[0xD83E, 0xDD5E], 0, 0,
		[0xD83C, 0xDF64], 0, 0,
		[0xD83C, 0xDF57], 0, 0,
		[0xD83C, 0xDF56], 0, 0,
		[0xD83C, 0xDF55], 0, 0,
		[0xD83C, 0xDF2D], 0, 0,
		[0xD83C, 0xDF54], 0, 0,
		[0xD83C, 0xDF5F], 0, 0,
		[0xD83E, 0xDD59], 0, 0,
		[0xD83C, 0xDF2E], 0, 0,
		[0xD83C, 0xDF2F], 0, 0,
		[0xD83E, 0xDD57], 0, 0,
		[0xD83E, 0xDD58], 0, 0,
		[0xD83C, 0xDF5D], 0, 0,
		[0xD83C, 0xDF5C], 0, 0,
		[0xD83C, 0xDF72], 0, 0,
		[0xD83C, 0xDF65], 0, 0,
		[0xD83C, 0xDF63], 0, 0,
		[0xD83C, 0xDF71], 0, 0,
		[0xD83C, 0xDF5B], 0, 0,
		[0xD83C, 0xDF59], 0, 0,
		[0xD83C, 0xDF5A], 0, 0,
		[0xD83C, 0xDF58], 0, 0,
		[0xD83C, 0xDF62], 0, 0,
		[0xD83C, 0xDF61], 0, 0,
		[0xD83C, 0xDF67], 0, 0,
		[0xD83C, 0xDF68], 0, 0,
		[0xD83C, 0xDF66], 0, 0,
		[0xD83C, 0xDF70], 0, 0,
		[0xD83C, 0xDF82], 0, 0,
		[0xD83C, 0xDF6E], 0, 0,
		[0xD83C, 0xDF6D], 0, 0,
		[0xD83C, 0xDF6C], 0, 0,
		[0xD83C, 0xDF6B], 0, 0,
		[0xD83C, 0xDF7F], 0, 0,
		[0xD83C, 0xDF69], 0, 0,
		[0xD83C, 0xDF6A], 0, 0,
		[0xD83E, 0xDD5B], 0, 0,
		[0xD83C, 0xDF7C], 0, 0,
		[0x2615, 0xFE0F], 0, 0,
		[0xD83C, 0xDF75], 0, 0,
		[0xD83C, 0xDF76], 0, 0,
		[0xD83C, 0xDF7A], 0, 0,
		[0xD83C, 0xDF7B], 0, 0,
		[0xD83E, 0xDD42], 0, 0,
		[0xD83C, 0xDF77], 0, 0,
		[0xD83E, 0xDD43], 0, 0,
		[0xD83C, 0xDF78], 0, 0,
		[0xD83C, 0xDF79], 0, 0,
		[0xD83C, 0xDF7E], 0, 0,
		[0xD83E, 0xDD44], 0, 0,
		[0xD83C, 0xDF74], 0, 0,
		[0xD83C, 0xDF7D], 0, 0,

		// 4

		[0x26BD, 0xFE0F], 0, 0,
		[0xD83C, 0xDFC0], 0, 0,
		[0xD83C, 0xDFC8], 0, 0,
		[0x26BE, 0xFE0F], 0, 0,
		[0xD83C, 0xDFBE], 0, 0,
		[0xD83C, 0xDFD0], 0, 0,
		[0xD83C, 0xDFC9], 0, 0,
		[0xD83C, 0xDFB1], 0, 0,
		[0xD83C, 0xDFD3], 0, 0,
		[0xD83C, 0xDFF8], 0, 0,
		[0xD83E, 0xDD45], 0, 0,
		[0xD83C, 0xDFD2], 0, 0,
		[0xD83C, 0xDFD1], 0, 0,
		[0xD83C, 0xDFCF], 0, 0,
		[0x26F3, 0xFE0F], 0, 0,
		[0xD83C, 0xDFF9], 0, 0,
		[0xD83C, 0xDFA3], 0, 0,
		[0xD83E, 0xDD4A], 0, 0,
		[0xD83E, 0xDD4B], 0, 0,
		[0x26F8], 0, 0,
		[0xD83C, 0xDFBF], 0, 0,
		[0x26F7], 0, 0,
		[0xD83C, 0xDFC2], 0, 0,
		[0xD83C, 0xDFCB, 0xFE0F, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83C, 0xDFCB, 0xFE0F], 0, 0,
		[0xD83E, 0xDD3A], 0, 0,
		[0xD83E, 0xDD3C, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD3C, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83E, 0xDD38, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD38, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0x26F9, 0xFE0F, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0x26F9, 0xFE0F], 0, 0,
		[0xD83E, 0xDD3E, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD3E, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83C, 0xDFCC, 0xFE0F, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83C, 0xDFCC, 0xFE0F], 0, 0,
		[0xD83C, 0xDFC4, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83C, 0xDFC4], 0, 0,
		[0xD83C, 0xDFCA, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83C, 0xDFCA], 0, 0,
		[0xD83E, 0xDD3D, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD3D, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83D, 0xDEA3, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDEA3], 0, 0,
		[0xD83C, 0xDFC7], 0, 0,
		[0xD83D, 0xDEB4, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDEB4], 0, 0,
		[0xD83D, 0xDEB5, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83D, 0xDEB5], 0, 0,
		[0xD83C, 0xDFBD], 0, 0,
		[0xD83C, 0xDFC5], 0, 0,
		[0xD83C, 0xDF96], 0, 0,
		[0xD83E, 0xDD47], 0, 0,
		[0xD83E, 0xDD48], 0, 0,
		[0xD83E, 0xDD49], 0, 0,
		[0xD83C, 0xDFC6], 0, 0,
		[0xD83C, 0xDFF5], 0, 0,
		[0xD83C, 0xDF97], 0, 0,
		[0xD83C, 0xDFAB], 0, 0,
		[0xD83C, 0xDF9F], 0, 0,
		[0xD83C, 0xDFAA], 0, 0,
		[0xD83E, 0xDD39, 0x200D, 0x2640, 0xFE0F], 0, 0,
		[0xD83E, 0xDD39, 0x200D, 0x2642, 0xFE0F], 0, 0,
		[0xD83C, 0xDFAD], 0, 0,
		[0xD83C, 0xDFA8], 0, 0,
		[0xD83C, 0xDFAC], 0, 0,
		[0xD83C, 0xDFA4], 0, 0,
		[0xD83C, 0xDFA7], 0, 0,
		[0xD83C, 0xDFBC], 0, 0,
		[0xD83C, 0xDFB9], 0, 0,
		[0xD83E, 0xDD41], 0, 0,
		[0xD83C, 0xDFB7], 0, 0,
		[0xD83C, 0xDFBA], 0, 0,
		[0xD83C, 0xDFB8], 0, 0,
		[0xD83C, 0xDFBB], 0, 0,
		[0xD83C, 0xDFB2], 0, 0,
		[0xD83C, 0xDFAF], 0, 0,
		[0xD83C, 0xDFB3], 0, 0,
		[0xD83C, 0xDFAE], 0, 0,
		[0xD83C, 0xDFB0], 0, 0,

		// 5

		[0xD83D, 0xDE97], 0, 0,
		[0xD83D, 0xDE95], 0, 0,
		[0xD83D, 0xDE99], 0, 0,
		[0xD83D, 0xDE8C], 0, 0,
		[0xD83D, 0xDE8E], 0, 0,
		[0xD83C, 0xDFCE], 0, 0,
		[0xD83D, 0xDE93], 0, 0,
		[0xD83D, 0xDE91], 0, 0,
		[0xD83D, 0xDE92], 0, 0,
		[0xD83D, 0xDE90], 0, 0,
		[0xD83D, 0xDE9A], 0, 0,
		[0xD83D, 0xDE9B], 0, 0,
		[0xD83D, 0xDE9C], 0, 0,
		[0xD83D, 0xDEF4], 0, 0,
		[0xD83D, 0xDEB2], 0, 0,
		[0xD83D, 0xDEF5], 0, 0,
		[0xD83C, 0xDFCD], 0, 0,
		[0xD83D, 0xDEA8], 0, 0,
		[0xD83D, 0xDE94], 0, 0,
		[0xD83D, 0xDE8D], 0, 0,
		[0xD83D, 0xDE98], 0, 0,
		[0xD83D, 0xDE96], 0, 0,
		[0xD83D, 0xDEA1], 0, 0,
		[0xD83D, 0xDEA0], 0, 0,
		[0xD83D, 0xDE9F], 0, 0,
		[0xD83D, 0xDE83], 0, 0,
		[0xD83D, 0xDE8B], 0, 0,
		[0xD83D, 0xDE9E], 0, 0,
		[0xD83D, 0xDE9D], 0, 0,
		[0xD83D, 0xDE84], 0, 0,
		[0xD83D, 0xDE85], 0, 0,
		[0xD83D, 0xDE88], 0, 0,
		[0xD83D, 0xDE82], 0, 0,
		[0xD83D, 0xDE86], 0, 0,
		[0xD83D, 0xDE87], 0, 0,
		[0xD83D, 0xDE8A], 0, 0,
		[0xD83D, 0xDE89], 0, 0,
		[0xD83D, 0xDE81], 0, 0,
		[0xD83D, 0xDEE9], 0, 0,
		[0x2708, 0xFE0F], 0, 0,
		[0xD83D, 0xDEEB], 0, 0,
		[0xD83D, 0xDEEC], 0, 0,
		[0xD83D, 0xDE80], 0, 0,
		[0xD83D, 0xDEF0], 0, 0,
		[0xD83D, 0xDCBA], 0, 0,
		[0xD83D, 0xDEF6], 0, 0,
		[0x26F5, 0xFE0F], 0, 0,
		[0xD83D, 0xDEE5], 0, 0,
		[0xD83D, 0xDEA4], 0, 0,
		[0xD83D, 0xDEF3], 0, 0,
		[0x26F4], 0, 0,
		[0xD83D, 0xDEA2], 0, 0,
		[0x2693, 0xFE0F], 0, 0,
		[0xD83D, 0xDEA7], 0, 0,
		[0x26FD, 0xFE0F], 0, 0,
		[0xD83D, 0xDE8F], 0, 0,
		[0xD83D, 0xDEA6], 0, 0,
		[0xD83D, 0xDEA5], 0, 0,
		[0xD83D, 0xDDFA], 0, 0,
		[0xD83D, 0xDDFF], 0, 0,
		[0xD83D, 0xDDFD], 0, 0,
		[0x26F2, 0xFE0F], 0, 0,
		[0xD83D, 0xDDFC], 0, 0,
		[0xD83C, 0xDFF0], 0, 0,
		[0xD83C, 0xDFEF], 0, 0,
		[0xD83C, 0xDFDF], 0, 0,
		[0xD83C, 0xDFA1], 0, 0,
		[0xD83C, 0xDFA2], 0, 0,
		[0xD83C, 0xDFA0], 0, 0,
		[0x26F1], 0, 0,
		[0xD83C, 0xDFD6], 0, 0,
		[0xD83C, 0xDFDD], 0, 0,
		[0x26F0], 0, 0,
		[0xD83C, 0xDFD4], 0, 0,
		[0xD83D, 0xDDFB], 0, 0,
		[0xD83C, 0xDF0B], 0, 0,
		[0xD83C, 0xDFDC], 0, 0,
		[0xD83C, 0xDFD5], 0, 0,
		[0x26FA, 0xFE0F], 0, 0,
		[0xD83D, 0xDEE4], 0, 0,
		[0xD83D, 0xDEE3], 0, 0,
		[0xD83C, 0xDFD7], 0, 0,
		[0xD83C, 0xDFED], 0, 0,
		[0xD83C, 0xDFE0], 0, 0,
		[0xD83C, 0xDFE1], 0, 0,
		[0xD83C, 0xDFD8], 0, 0,
		[0xD83C, 0xDFDA], 0, 0,
		[0xD83C, 0xDFE2], 0, 0,
		[0xD83C, 0xDFEC], 0, 0,
		[0xD83C, 0xDFE3], 0, 0,
		[0xD83C, 0xDFE4], 0, 0,
		[0xD83C, 0xDFE5], 0, 0,
		[0xD83C, 0xDFE6], 0, 0,
		[0xD83C, 0xDFE8], 0, 0,
		[0xD83C, 0xDFEA], 0, 0,
		[0xD83C, 0xDFEB], 0, 0,
		[0xD83C, 0xDFE9], 0, 0,
		[0xD83D, 0xDC92], 0, 0,
		[0xD83C, 0xDFDB], 0, 0,
		[0x26EA, 0xFE0F], 0, 0,
		[0xD83D, 0xDD4C], 0, 0,
		[0xD83D, 0xDD4D], 0, 0,
		[0xD83D, 0xDD4B], 0, 0,
		[0x26E9], 0, 0,
		[0xD83D, 0xDDFE], 0, 0,
		[0xD83C, 0xDF91], 0, 0,
		[0xD83C, 0xDFDE], 0, 0,
		[0xD83C, 0xDF05], 0, 0,
		[0xD83C, 0xDF04], 0, 0,
		[0xD83C, 0xDF20], 0, 0,
		[0xD83C, 0xDF87], 0, 0,
		[0xD83C, 0xDF86], 0, 0,
		[0xD83C, 0xDF07], 0, 0,
		[0xD83C, 0xDF06], 0, 0,
		[0xD83C, 0xDFD9], 0, 0,
		[0xD83C, 0xDF03], 0, 0,
		[0xD83C, 0xDF0C], 0, 0,
		[0xD83C, 0xDF09], 0, 0,
		[0xD83C, 0xDF01], 0, 0,

		// 6

		[0x231A, 0xFE0F], 0, 0,
		[0xD83D, 0xDCF1], 0, 0,
		[0xD83D, 0xDCF2], 0, 0,
		[0xD83D, 0xDCBB], 0, 0,
		[0x2328, 0xFE0F], 0, 0,
		[0xD83D, 0xDDA5], 0, 0,
		[0xD83D, 0xDDA8], 0, 0,
		[0xD83D, 0xDDB1], 0, 0,
		[0xD83D, 0xDDB2], 0, 0,
		[0xD83D, 0xDD79], 0, 0,
		[0xD83D, 0xDDDC], 0, 0,
		[0xD83D, 0xDCBD], 0, 0,
		[0xD83D, 0xDCBE], 0, 0,
		[0xD83D, 0xDCBF], 0, 0,
		[0xD83D, 0xDCC0], 0, 0,
		[0xD83D, 0xDCFC], 0, 0,
		[0xD83D, 0xDCF7], 0, 0,
		[0xD83D, 0xDCF8], 0, 0,
		[0xD83D, 0xDCF9], 0, 0,
		[0xD83C, 0xDFA5], 0, 0,
		[0xD83D, 0xDCFD], 0, 0,
		[0xD83C, 0xDF9E], 0, 0,
		[0xD83D, 0xDCDE], 0, 0,
		[0x260E, 0xFE0F], 0, 0,
		[0xD83D, 0xDCDF], 0, 0,
		[0xD83D, 0xDCE0], 0, 0,
		[0xD83D, 0xDCFA], 0, 0,
		[0xD83D, 0xDCFB], 0, 0,
		[0xD83C, 0xDF99], 0, 0,
		[0xD83C, 0xDF9A], 0, 0,
		[0xD83C, 0xDF9B], 0, 0,
		[0x23F1], 0, 0,
		[0x23F2], 0, 0,
		[0x23F0], 0, 0,
		[0xD83D, 0xDD70], 0, 0,
		[0x231B, 0xFE0F], 0, 0,
		[0x23F3], 0, 0,
		[0xD83D, 0xDCE1], 0, 0,
		[0xD83D, 0xDD0B], 0, 0,
		[0xD83D, 0xDD0C], 0, 0,
		[0xD83D, 0xDCA1], 0, 0,
		[0xD83D, 0xDD26], 0, 0,
		[0xD83D, 0xDD6F], 0, 0,
		[0xD83D, 0xDDD1], 0, 0,
		[0xD83D, 0xDEE2], 0, 0,
		[0xD83D, 0xDCB8], 0, 0,
		[0xD83D, 0xDCB5], 0, 0,
		[0xD83D, 0xDCB4], 0, 0,
		[0xD83D, 0xDCB6], 0, 0,
		[0xD83D, 0xDCB7], 0, 0,
		[0xD83D, 0xDCB0], 0, 0,
		[0xD83D, 0xDCB3], 0, 0,
		[0xD83D, 0xDC8E], 0, 0,
		[0x2696, 0xFE0F], 0, 0,
		[0xD83D, 0xDD27], 0, 0,
		[0xD83D, 0xDD28], 0, 0,
		[0x2692], 0, 0,
		[0xD83D, 0xDEE0], 0, 0,
		[0x26CF], 0, 0,
		[0xD83D, 0xDD29], 0, 0,
		[0x2699, 0xFE0F], 0, 0,
		[0x26D3], 0, 0,
		[0xD83D, 0xDD2B], 0, 0,
		[0xD83D, 0xDCA3], 0, 0,
		[0xD83D, 0xDD2A], 0, 0,
		[0xD83D, 0xDDE1], 0, 0,
		[0x2694, 0xFE0F], 0, 0,
		[0xD83D, 0xDEE1], 0, 0,
		[0xD83D, 0xDEAC], 0, 0,
		[0x26B0, 0xFE0F], 0, 0,
		[0x26B1, 0xFE0F], 0, 0,
		[0xD83C, 0xDFFA], 0, 0,
		[0xD83D, 0xDD2E], 0, 0,
		[0xD83D, 0xDCFF], 0, 0,
		[0xD83D, 0xDC88], 0, 0,
		[0x2697, 0xFE0F], 0, 0,
		[0xD83D, 0xDD2D], 0, 0,
		[0xD83D, 0xDD2C], 0, 0,
		[0xD83D, 0xDD73], 0, 0,
		[0xD83D, 0xDC8A], 0, 0,
		[0xD83D, 0xDC89], 0, 0,
		[0xD83C, 0xDF21], 0, 0,
		[0xD83D, 0xDEBD], 0, 0,
		[0xD83D, 0xDEB0], 0, 0,
		[0xD83D, 0xDEBF], 0, 0,
		[0xD83D, 0xDEC1], 0, 0,
		[0xD83D, 0xDEC0], 0, 0,
		[0xD83D, 0xDECE], 0, 0,
		[0xD83D, 0xDD11], 0, 0,
		[0xD83D, 0xDDDD], 0, 0,
		[0xD83D, 0xDEAA], 0, 0,
		[0xD83D, 0xDECB], 0, 0,
		[0xD83D, 0xDECF], 0, 0,
		[0xD83D, 0xDECC], 0, 0,
		[0xD83D, 0xDDBC], 0, 0,
		[0xD83D, 0xDECD], 0, 0,
		[0xD83D, 0xDED2], 0, 0,
		[0xD83C, 0xDF81], 0, 0,
		[0xD83C, 0xDF88], 0, 0,
		[0xD83C, 0xDF8F], 0, 0,
		[0xD83C, 0xDF80], 0, 0,
		[0xD83C, 0xDF8A], 0, 0,
		[0xD83C, 0xDF89], 0, 0,
		[0xD83C, 0xDF8E], 0, 0,
		[0xD83C, 0xDFEE], 0, 0,
		[0xD83C, 0xDF90], 0, 0,
		[0x2709, 0xFE0F], 0, 0,
		[0xD83D, 0xDCE9], 0, 0,
		[0xD83D, 0xDCE8], 0, 0,
		[0xD83D, 0xDCE7], 0, 0,
		[0xD83D, 0xDC8C], 0, 0,
		[0xD83D, 0xDCE5], 0, 0,
		[0xD83D, 0xDCE4], 0, 0,
		[0xD83D, 0xDCE6], 0, 0,
		[0xD83C, 0xDFF7], 0, 0,
		[0xD83D, 0xDCEA], 0, 0,
		[0xD83D, 0xDCEB], 0, 0,
		[0xD83D, 0xDCEC], 0, 0,
		[0xD83D, 0xDCED], 0, 0,
		[0xD83D, 0xDCEE], 0, 0,
		[0xD83D, 0xDCEF], 0, 0,
		[0xD83D, 0xDCDC], 0, 0,
		[0xD83D, 0xDCC3], 0, 0,
		[0xD83D, 0xDCC4], 0, 0,
		[0xD83D, 0xDCD1], 0, 0,
		[0xD83D, 0xDCCA], 0, 0,
		[0xD83D, 0xDCC8], 0, 0,
		[0xD83D, 0xDCC9], 0, 0,
		[0xD83D, 0xDDD2], 0, 0,
		[0xD83D, 0xDDD3], 0, 0,
		[0xD83D, 0xDCC6], 0, 0,
		[0xD83D, 0xDCC5], 0, 0,
		[0xD83D, 0xDCC7], 0, 0,
		[0xD83D, 0xDDC3], 0, 0,
		[0xD83D, 0xDDF3], 0, 0,
		[0xD83D, 0xDDC4], 0, 0,
		[0xD83D, 0xDCCB], 0, 0,
		[0xD83D, 0xDCC1], 0, 0,
		[0xD83D, 0xDCC2], 0, 0,
		[0xD83D, 0xDDC2], 0, 0,
		[0xD83D, 0xDDDE], 0, 0,
		[0xD83D, 0xDCF0], 0, 0,
		[0xD83D, 0xDCD3], 0, 0,
		[0xD83D, 0xDCD4], 0, 0,
		[0xD83D, 0xDCD2], 0, 0,
		[0xD83D, 0xDCD5], 0, 0,
		[0xD83D, 0xDCD7], 0, 0,
		[0xD83D, 0xDCD8], 0, 0,
		[0xD83D, 0xDCD9], 0, 0,
		[0xD83D, 0xDCDA], 0, 0,
		[0xD83D, 0xDCD6], 0, 0,
		[0xD83D, 0xDD16], 0, 0,
		[0xD83D, 0xDD17], 0, 0,
		[0xD83D, 0xDCCE], 0, 0,
		[0xD83D, 0xDD87], 0, 0,
		[0xD83D, 0xDCD0], 0, 0,
		[0xD83D, 0xDCCF], 0, 0,
		[0xD83D, 0xDCCC], 0, 0,
		[0xD83D, 0xDCCD], 0, 0,
		[0x2702, 0xFE0F], 0, 0,
		[0xD83D, 0xDD8A], 0, 0,
		[0xD83D, 0xDD8B], 0, 0,
		[0x2712, 0xFE0F], 0, 0,
		[0xD83D, 0xDD8C], 0, 0,
		[0xD83D, 0xDD8D], 0, 0,
		[0xD83D, 0xDCDD], 0, 0,
		[0x270F, 0xFE0F], 0, 0,
		[0xD83D, 0xDD0D], 0, 0,
		[0xD83D, 0xDD0E], 0, 0,
		[0xD83D, 0xDD0F], 0, 0,
		[0xD83D, 0xDD10], 0, 0,
		[0xD83D, 0xDD12], 0, 0,
		[0xD83D, 0xDD13], 0, 0,

		// 7

		[0x2764, 0xFE0F], 0, 0,
		[0xD83D, 0xDC9B], 0, 0,
		[0xD83D, 0xDC9A], 0, 0,
		[0xD83D, 0xDC99], 0, 0,
		[0xD83D, 0xDC9C], 0, 0,
		[0xD83D, 0xDDA4], 0, 0,
		[0xD83D, 0xDC94], 0, 0,
		[0x2763, 0xFE0F], 0, 0,
		[0xD83D, 0xDC95], 0, 0,
		[0xD83D, 0xDC9E], 0, 0,
		[0xD83D, 0xDC93], 0, 0,
		[0xD83D, 0xDC97], 0, 0,
		[0xD83D, 0xDC96], 0, 0,
		[0xD83D, 0xDC98], 0, 0,
		[0xD83D, 0xDC9D], 0, 0,
		[0xD83D, 0xDC9F], 0, 0,
		[0x262E, 0xFE0F], 0, 0,
		[0x271D, 0xFE0F], 0, 0,
		[0x262A, 0xFE0F], 0, 0,
		[0xD83D, 0xDD49], 0, 0,
		[0x2638, 0xFE0F], 0, 0,
		[0x2721, 0xFE0F], 0, 0,
		[0xD83D, 0xDD2F], 0, 0,
		[0xD83D, 0xDD4E], 0, 0,
		[0x262F, 0xFE0F], 0, 0,
		[0x2626, 0xFE0F], 0, 0,
		[0xD83D, 0xDED0], 0, 0,
		[0x26CE], 0, 0,
		[0x2648, 0xFE0F], 0, 0,
		[0x2649, 0xFE0F], 0, 0,
		[0x264A, 0xFE0F], 0, 0,
		[0x264B, 0xFE0F], 0, 0,
		[0x264C, 0xFE0F], 0, 0,
		[0x264D, 0xFE0F], 0, 0,
		[0x264E, 0xFE0F], 0, 0,
		[0x264F, 0xFE0F], 0, 0,
		[0x2650, 0xFE0F], 0, 0,
		[0x2651, 0xFE0F], 0, 0,
		[0x2652, 0xFE0F], 0, 0,
		[0x2653, 0xFE0F], 0, 0,
		[0xD83C, 0xDD94], 0, 0,
		[0x269B, 0xFE0F], 0, 0,
		[0xD83C, 0xDE51], 0, 0,
		[0x2622, 0xFE0F], 0, 0,
		[0x2623, 0xFE0F], 0, 0,
		[0xD83D, 0xDCF4], 0, 0,
		[0xD83D, 0xDCF3], 0, 0,
		[0xD83C, 0xDE36], 0, 0,
		[0xD83C, 0xDE1A, 0xFE0F], 0, 0,
		[0xD83C, 0xDE38], 0, 0,
		[0xD83C, 0xDE3A], 0, 0,
		[0xD83C, 0xDE37], 0, 0,
		[0x2734, 0xFE0F], 0, 0,
		[0xD83C, 0xDD9A], 0, 0,
		[0xD83D, 0xDCAE], 0, 0,
		[0xD83C, 0xDE50], 0, 0,
		[0x3299, 0xFE0F], 0, 0,
		[0x3297, 0xFE0F], 0, 0,
		[0xD83C, 0xDE34], 0, 0,
		[0xD83C, 0xDE35], 0, 0,
		[0xD83C, 0xDE39], 0, 0,
		[0xD83C, 0xDE32], 0, 0,
		[0xD83C, 0xDD70, 0xFE0F], 0, 0,
		[0xD83C, 0xDD71, 0xFE0F], 0, 0,
		[0xD83C, 0xDD8E], 0, 0,
		[0xD83C, 0xDD91], 0, 0,
		[0xD83C, 0xDD7E, 0xFE0F], 0, 0,
		[0xD83C, 0xDD98], 0, 0,
		[0x274C], 0, 0,
		[0x2B55, 0xFE0F], 0, 0,
		[0xD83D, 0xDED1], 0, 0,
		[0x26D4, 0xFE0F], 0, 0,
		[0xD83D, 0xDCDB], 0, 0,
		[0xD83D, 0xDEAB], 0, 0,
		[0xD83D, 0xDCAF], 0, 0,
		[0xD83D, 0xDCA2], 0, 0,
		[0x2668, 0xFE0F], 0, 0,
		[0xD83D, 0xDEB7], 0, 0,
		[0xD83D, 0xDEAF], 0, 0,
		[0xD83D, 0xDEB3], 0, 0,
		[0xD83D, 0xDEB1], 0, 0,
		[0xD83D, 0xDD1E], 0, 0,
		[0xD83D, 0xDCF5], 0, 0,
		[0xD83D, 0xDEAD], 0, 0,
		[0x2757, 0xFE0F], 0, 0,
		[0x2755], 0, 0,
		[0x2753], 0, 0,
		[0x2754], 0, 0,
		[0x203C, 0xFE0F], 0, 0,
		[0x2049, 0xFE0F], 0, 0,
		[0xD83D, 0xDD05], 0, 0,
		[0xD83D, 0xDD06], 0, 0,
		[0x303D, 0xFE0F], 0, 0,
		[0x26A0, 0xFE0F], 0, 0,
		[0xD83D, 0xDEB8], 0, 0,
		[0xD83D, 0xDD31], 0, 0,
		[0x269C, 0xFE0F], 0, 0,
		[0xD83D, 0xDD30], 0, 0,
		[0x267B, 0xFE0F], 0, 0,
		[0x2705], 0, 0,
		[0xD83C, 0xDE2F, 0xFE0F], 0, 0,
		[0xD83D, 0xDCB9], 0, 0,
		[0x2747, 0xFE0F], 0, 0,
		[0x2733, 0xFE0F], 0, 0,
		[0x274E], 0, 0,
		[0xD83C, 0xDF10], 0, 0,
		[0xD83D, 0xDCA0], 0, 0,
		[0x24C2, 0xFE0F], 0, 0,
		[0xD83C, 0xDF00], 0, 0,
		[0xD83D, 0xDCA4], 0, 0,
		[0xD83C, 0xDFE7], 0, 0,
		[0xD83D, 0xDEBE], 0, 0,
		[0x267F, 0xFE0F], 0, 0,
		[0xD83C, 0xDD7F, 0xFE0F], 0, 0,
		[0xD83C, 0xDE33], 0, 0,
		[0xD83C, 0xDE02], 0, 0,
		[0xD83D, 0xDEC2], 0, 0,
		[0xD83D, 0xDEC3], 0, 0,
		[0xD83D, 0xDEC4], 0, 0,
		[0xD83D, 0xDEC5], 0, 0,
		[0xD83D, 0xDEB9], 0, 0,
		[0xD83D, 0xDEBA], 0, 0,
		[0xD83D, 0xDEBC], 0, 0,
		[0xD83D, 0xDEBB], 0, 0,
		[0xD83D, 0xDEAE], 0, 0,
		[0xD83C, 0xDFA6], 0, 0,
		[0xD83D, 0xDCF6], 0, 0,
		[0xD83C, 0xDE01], 0, 0,
		[0xD83D, 0xDD23], 0, 0,
		[0x2139, 0xFE0F], 0, 0,
		[0xD83D, 0xDD24], 0, 0,
		[0xD83D, 0xDD21], 0, 0,
		[0xD83D, 0xDD20], 0, 0,
		[0xD83C, 0xDD96], 0, 0,
		[0xD83C, 0xDD97], 0, 0,
		[0xD83C, 0xDD99], 0, 0,
		[0xD83C, 0xDD92], 0, 0,
		[0xD83C, 0xDD95], 0, 0,
		[0xD83C, 0xDD93], 0, 0,
		[0x30, 0xFE0F, 0x20E3], 0, 0,
		[0x31, 0xFE0F, 0x20E3], 0, 0,
		[0x32, 0xFE0F, 0x20E3], 0, 0,
		[0x33, 0xFE0F, 0x20E3], 0, 0,
		[0x34, 0xFE0F, 0x20E3], 0, 0,
		[0x35, 0xFE0F, 0x20E3], 0, 0,
		[0x36, 0xFE0F, 0x20E3], 0, 0,
		[0x37, 0xFE0F, 0x20E3], 0, 0,
		[0x38, 0xFE0F, 0x20E3], 0, 0,
		[0x39, 0xFE0F, 0x20E3], 0, 0,
		[0xD83D, 0xDD1F], 0, 0,
		[0xD83D, 0xDD22], 0, 0,
		[0x23, 0xFE0F, 0x20E3], 0, 0,
		[0x2A, 0xFE0F, 0x20E3], 0, 0,
		[0x25B6, 0xFE0F], 0, 0,
		[0x23F8], 0, 0,
		[0x23EF], 0, 0,
		[0x23F9], 0, 0,
		[0x23FA], 0, 0,
		[0x23ED], 0, 0,
		[0x23EE], 0, 0,
		[0x23E9], 0, 0,
		[0x23EA], 0, 0,
		[0x23EB], 0, 0,
		[0x23EC], 0, 0,
		[0x25C0, 0xFE0F], 0, 0,
		[0xD83D, 0xDD3C], 0, 0,
		[0xD83D, 0xDD3D], 0, 0,
		[0x27A1, 0xFE0F], 0, 0,
		[0x2B05, 0xFE0F], 0, 0,
		[0x2B06, 0xFE0F], 0, 0,
		[0x2B07, 0xFE0F], 0, 0,
		[0x2197, 0xFE0F], 0, 0,
		[0x2198, 0xFE0F], 0, 0,
		[0x2199, 0xFE0F], 0, 0,
		[0x2196, 0xFE0F], 0, 0,
		[0x2195, 0xFE0F], 0, 0,
		[0x2194, 0xFE0F], 0, 0,
		[0x21AA, 0xFE0F], 0, 0,
		[0x21A9, 0xFE0F], 0, 0,
		[0x2934, 0xFE0F], 0, 0,
		[0x2935, 0xFE0F], 0, 0,
		[0xD83D, 0xDD00], 0, 0,
		[0xD83D, 0xDD01], 0, 0,
		[0xD83D, 0xDD02], 0, 0,
		[0xD83D, 0xDD04], 0, 0,
		[0xD83D, 0xDD03], 0, 0,
		[0xD83C, 0xDFB5], 0, 0,
		[0xD83C, 0xDFB6], 0, 0,
		[0x2795], 0, 0,
		[0x2796], 0, 0,
		[0x2797], 0, 0,
		[0x2716, 0xFE0F], 0, 0,
		[0xD83D, 0xDCB2], 0, 0,
		[0xD83D, 0xDCB1], 0, 0,
		[0x2122], 0, 0,
		[0xA9], 0, 0,
		[0xAE], 0, 0,
		[0x3030], 0, 0,
		[0x27B0], 0, 0,
		[0x27BF], 0, 0,
		[0xD83D, 0xDD1A], 0, 0,
		[0xD83D, 0xDD19], 0, 0,
		[0xD83D, 0xDD1B], 0, 0,
		[0xD83D, 0xDD1D], 0, 0,
		[0xD83D, 0xDD1C], 0, 0,
		[0x2714, 0xFE0F], 0, 0,
		[0x2611, 0xFE0F], 0, 0,
		[0xD83D, 0xDD18], 0, 0,
		[0x26AA, 0xFE0F], 0, 0,
		[0x26AB, 0xFE0F], 0, 0,
		[0xD83D, 0xDD34], 0, 0,
		[0xD83D, 0xDD35], 0, 0,
		[0xD83D, 0xDD3A], 0, 0,
		[0xD83D, 0xDD3B], 0, 0,
		[0xD83D, 0xDD38], 0, 0,
		[0xD83D, 0xDD39], 0, 0,
		[0xD83D, 0xDD36], 0, 0,
		[0xD83D, 0xDD37], 0, 0,
		[0xD83D, 0xDD33], 0, 0,
		[0xD83D, 0xDD32], 0, 0,
		[0x25AA, 0xFE0F], 0, 0,
		[0x25AB, 0xFE0F], 0, 0,
		[0x25FE, 0xFE0F], 0, 0,
		[0x25FD, 0xFE0F], 0, 0,
		[0x25FC, 0xFE0F], 0, 0,
		[0x25FB, 0xFE0F], 0, 0,
		[0x2B1B, 0xFE0F], 0, 0,
		[0x2B1C, 0xFE0F], 0, 0,
		[0xD83D, 0xDD08], 0, 0,
		[0xD83D, 0xDD07], 0, 0,
		[0xD83D, 0xDD09], 0, 0,
		[0xD83D, 0xDD0A], 0, 0,
		[0xD83D, 0xDD14], 0, 0,
		[0xD83D, 0xDD15], 0, 0,
		[0xD83D, 0xDCE3], 0, 0,
		[0xD83D, 0xDCE2], 0, 0,
		[0xD83D, 0xDC41, 0x200D, 0xD83D, 0xDDE8], 0, 0,
		[0xD83D, 0xDCAC], 0, 0,
		[0xD83D, 0xDCAD], 0, 0,
		[0xD83D, 0xDDEF], 0, 0,
		[0x2660, 0xFE0F], 0, 0,
		[0x2663, 0xFE0F], 0, 0,
		[0x2665, 0xFE0F], 0, 0,
		[0x2666, 0xFE0F], 0, 0,
		[0xD83C, 0xDCCF], 0, 0,
		[0xD83C, 0xDFB4], 0, 0,
		[0xD83C, 0xDC04, 0xFE0F], 0, 0,
		[0xD83D, 0xDD50], 0, 0,
		[0xD83D, 0xDD51], 0, 0,
		[0xD83D, 0xDD52], 0, 0,
		[0xD83D, 0xDD53], 0, 0,
		[0xD83D, 0xDD54], 0, 0,
		[0xD83D, 0xDD55], 0, 0,
		[0xD83D, 0xDD56], 0, 0,
		[0xD83D, 0xDD57], 0, 0,
		[0xD83D, 0xDD58], 0, 0,
		[0xD83D, 0xDD59], 0, 0,
		[0xD83D, 0xDD5A], 0, 0,
		[0xD83D, 0xDD5B], 0, 0,
		[0xD83D, 0xDD5C], 0, 0,
		[0xD83D, 0xDD5D], 0, 0,
		[0xD83D, 0xDD5E], 0, 0,
		[0xD83D, 0xDD5F], 0, 0,
		[0xD83D, 0xDD60], 0, 0,
		[0xD83D, 0xDD61], 0, 0,
		[0xD83D, 0xDD62], 0, 0,
		[0xD83D, 0xDD63], 0, 0,
		[0xD83D, 0xDD64], 0, 0,
		[0xD83D, 0xDD65], 0, 0,
		[0xD83D, 0xDD66], 0, 0,
		[0xD83D, 0xDD67], 0, 0,

		// 8 Country Flags

		[0xD83C, 0xDFF3], 0, 0,
		[0xD83C, 0xDFF4], 0, 0,
		[0xD83C, 0xDFC1], 0, 0,
		[0xD83D, 0xDEA9], 0, 0,
		[0xD83C, 0xDFF3, 0xFE0F, 0x200D, 0xD83C, 0xDF08], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDFD], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDE9, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF6], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDE7], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDEF], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDFB], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF6], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDFD], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDED, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDE9, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDE9, 0xD83C, 0xDDEF], 0, 0,
		[0xD83C, 0xDDE9, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDE9, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDFB], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF6], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDEB, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDEB, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDEB, 0xD83C, 0xDDEF], 0, 0,
		[0xD83C, 0xDDEB, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDEB, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDE9, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF5], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDED, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDED, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDED, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDED, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF6], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDEE, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDEF, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDEF, 0xD83C, 0xDDF5], 0, 0,
		[0xD83C, 0xDF8C], 0, 0,
		[0xD83C, 0xDDEF, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDEF, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDFD, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDFB], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDE7], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDFB], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF6], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDFE, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDFD], 0, 0,
		[0xD83C, 0xDDEB, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDF5], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDF5], 0, 0,
		[0xD83C, 0xDDF2, 0xD83C, 0xDDF5], 0, 0,
		[0xD83C, 0xDDF3, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDF4, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF6, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF7, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDF7, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDF7, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDF7, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDFC, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDF7, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDFD], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDE7], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDFF, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDE7, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDF0, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDF1, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDF5, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDE9], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDE8, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDF8, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDFC], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDEF], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF1], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF0], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF4], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF9], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF7], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDE8], 0, 0,
		[0xD83C, 0xDDF9, 0xD83C, 0xDDFB], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDEE], 0, 0,
		[0xD83C, 0xDDFA, 0xD83C, 0xDDEC], 0, 0,
		[0xD83C, 0xDDFA, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDE6, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDEC, 0xD83C, 0xDDE7], 0, 0,
		[0xD83C, 0xDDFA, 0xD83C, 0xDDF8], 0, 0,
		[0xD83C, 0xDDFA, 0xD83C, 0xDDFE], 0, 0,
		[0xD83C, 0xDDFA, 0xD83C, 0xDDFF], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDFA], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDE6], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDFB, 0xD83C, 0xDDF3], 0, 0,
		[0xD83C, 0xDDFC, 0xD83C, 0xDDEB], 0, 0,
		[0xD83C, 0xDDEA, 0xD83C, 0xDDED], 0, 0,
		[0xD83C, 0xDDFE, 0xD83C, 0xDDEA], 0, 0,
		[0xD83C, 0xDDFF, 0xD83C, 0xDDF2], 0, 0,
		[0xD83C, 0xDDFF, 0xD83C, 0xDDFC], 0, 0

	]

	const coloredEmoji = [
		[0xD83D, 0xDC50],
		[0xD83D, 0xDE4C],
		[0xD83D, 0xDC4F],
		[0xD83D, 0xDE4F],
		[0xD83D, 0xDC4D],
		[0xD83D, 0xDC4E],
		[0xD83D, 0xDC4A],
		[0x270A, /**/ 0xFE0F],
		[0xD83E, 0xDD1B],
		[0xD83E, 0xDD1C],
		[0xD83E, 0xDD1E],
		[0x270C, /**/ 0xFE0F],
		[0xD83E, 0xDD18],
		[0xD83D, 0xDC4C],
		[0xD83D, 0xDC48],
		[0xD83D, 0xDC49],
		[0xD83D, 0xDC46],
		[0xD83D, 0xDC47],
		[0x261D, /**/ 0xFE0F],
		[0x270B, /**/ 0xFE0F],
		[0xD83E, 0xDD1A],
		[0xD83D, 0xDD90],
		[0xD83D, 0xDD96],
		[0xD83D, 0xDC4B],
		[0xD83E, 0xDD19],
		[0xD83D, 0xDCAA],
		[0xD83D, 0xDD95],
		[0x270D, /**/ 0xFE0F],
		[0xD83E, 0xDD33],
		[0xD83D, 0xDC85],
		[0xD83D, 0xDC42],
		[0xD83D, 0xDC43],
		[0xD83D, 0xDC76],
		[0xD83D, 0xDC66],
		[0xD83D, 0xDC67],
		[0xD83D, 0xDC68],
		[0xD83D, 0xDC69],
		[0xD83D, 0xDC71, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDC71],
		[0xD83D, 0xDC74],
		[0xD83D, 0xDC75],
		[0xD83D, 0xDC72],
		[0xD83D, 0xDC73, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDC73],
		[0xD83D, 0xDC6E, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDC6E],
		[0xD83D, 0xDC77, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDC77],
		[0xD83D, 0xDC82, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDC82],
		[0xD83D, 0xDD75, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDD75],
		[0xD83D, 0xDC69, 0x200D, 0x2695, 0xFE0F],
		[0xD83D, 0xDC68, 0x200D, 0x2695, 0xFE0F],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDF3E],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDF3E],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDF73],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDF73],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDF93],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDF93],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFA4],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFA4],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFEB],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFEB],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFED],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFED],
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDCBB],
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDCBB],
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDCBC],
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDCBC],
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDD27],
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDD27],
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDD2C],
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDD2C],
		[0xD83D, 0xDC69, 0x200D, 0xD83C, 0xDFA8],
		[0xD83D, 0xDC68, 0x200D, 0xD83C, 0xDFA8],
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDE92],
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDE92],
		[0xD83D, 0xDC69, 0x200D, 0x2708, 0xFE0F],
		[0xD83D, 0xDC68, 0x200D, 0x2708, 0xFE0F],
		[0xD83D, 0xDC69, 0x200D, 0xD83D, 0xDE80],
		[0xD83D, 0xDC68, 0x200D, 0xD83D, 0xDE80],
		[0xD83D, 0xDC69, 0x200D, 0x2696, 0xFE0F],
		[0xD83D, 0xDC68, 0x200D, 0x2696, 0xFE0F],
		[0xD83E, 0xDD36],
		[0xD83C, 0xDF85],
		[0xD83D, 0xDC78],
		[0xD83E, 0xDD34],
		[0xD83D, 0xDC70],
		[0xD83E, 0xDD35],
		[0xD83D, 0xDC7C],
		[0xD83E, 0xDD30],
		[0xD83D, 0xDE47, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDE47],
		[0xD83D, 0xDC81],
		[0xD83D, 0xDC81, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDE45],
		[0xD83D, 0xDE45, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDE46],
		[0xD83D, 0xDE46, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDE4B],
		[0xD83D, 0xDE4B, 0x200D, 0x2642, 0xFE0F],
		[0xD83E, 0xDD26, 0x200D, 0x2640, 0xFE0F],
		[0xD83E, 0xDD26, 0x200D, 0x2642, 0xFE0F],
		[0xD83E, 0xDD37, 0x200D, 0x2640, 0xFE0F],
		[0xD83E, 0xDD37, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDE4E],
		[0xD83D, 0xDE4E, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDE4D],
		[0xD83D, 0xDE4D, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDC87],
		[0xD83D, 0xDC87, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDC86],
		[0xD83D, 0xDC86, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDD74],
		[0xD83D, 0xDC83],
		[0xD83D, 0xDD7A],
		[0xD83D, 0xDEB6, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDEB6],
		[0xD83C, 0xDFC3, 0x200D, 0x2640, 0xFE0F],
		[0xD83C, 0xDFC3],
		[0xD83C, 0xDFCB, 0x200D, 0x2640, 0xFE0F],
		[0xD83C, 0xDFCB],
		[0xD83E, 0xDD38, 0x200D, 0x2640, 0xFE0F],
		[0xD83E, 0xDD38, 0x200D, 0x2642, 0xFE0F],
		[0x26F9, 0x200D, 0x2640, 0xFE0F],
		[0x26F9, /**/ 0xFE0F],
		[0xD83E, 0xDD3E, 0x200D, 0x2640, 0xFE0F],
		[0xD83E, 0xDD3E, 0x200D, 0x2642, 0xFE0F],
		[0xD83C, 0xDFCC, 0x200D, 0x2640, 0xFE0F],
		[0xD83C, 0xDFCC],
		[0xD83C, 0xDFC4, 0x200D, 0x2640, 0xFE0F],
		[0xD83C, 0xDFC4],
		[0xD83C, 0xDFCA, 0x200D, 0x2640, 0xFE0F],
		[0xD83C, 0xDFCA],
		[0xD83E, 0xDD3D, 0x200D, 0x2640, 0xFE0F],
		[0xD83E, 0xDD3D, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDEA3, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDEA3],
		[0xD83C, 0xDFC7],
		[0xD83D, 0xDEB4, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDEB4],
		[0xD83D, 0xDEB5, 0x200D, 0x2640, 0xFE0F],
		[0xD83D, 0xDEB5],
		[0xD83E, 0xDD39, 0x200D, 0x2640, 0xFE0F],
		[0xD83E, 0xDD39, 0x200D, 0x2642, 0xFE0F],
		[0xD83D, 0xDEC0],
	];

	var colors_end = [
		0xDFFB,
		0xDFFC,
		0xDFFD,
		0xDFFE,
		0xDFFF
	]

	{
		const colors = [
			[0xD83C, 0xDFFB],
			[0xD83C, 0xDFFC],
			[0xD83C, 0xDFFD],
			[0xD83C, 0xDFFE],
			[0xD83C, 0xDFFF]
		]

		//const colors_end = colors_end
		var emojis = emojiTable
		console.log('emojiTable length', emojiTable.length)
		//const coloredEmoji = exports.coloredEmoji

		{
			//let i = 0
			let j = 0
			let k = 0
			//let row = 0
			const row_size = 880 / 22
			while ((j) * 3 < emojis.length) {

				const code = emojis[(j) * 3 + 0]
				//if (!code) break
				emojis[(j) * 3 + 1] = k - Math.floor(k / row_size) * row_size //i
				emojis[(j) * 3 + 2] = Math.floor(k / row_size) //row


				function next() {
					//k++
					//i++
					//if(i == row_size) {
					//    row++
					//    i=0
					//}

					//emojis[(i+row*row_size)*3 + 1] = i
					//emojis[(i+row*row_size)*3 + 2] = row
				}

				let col = false
				for (const colored of coloredEmoji) {
					if (colored.length != code.length) continue

					if (colored[0] == code[0])
						if (colored[1] == code[1])
							if (colored[2] == code[2])
								if (colored[3] == code[3])
									if (colored[4] == code[4]) col = true

					if (col) break
					//if (colored[0] !== code[0]) col = false
					//if (colored.length > 1) if (colored[1] !== code[1]) col = false
					//if (colored.length > 2) if (colored[2] !== code[2]) col = false
					//if (colored.length > 3) if (colored[3] !== code[3]) col = false
					//if (colored.length > 4) if (colored[4] !== code[4]) col = false
				}

				//if (
				//    (colored[0] === code[0]) &&
				//    ((colored[1] === code[1]) || (colored.length <= 1)) &&
				//    ((colored[2] === code[2]) || (colored.length <= 2)) &&
				//    ((colored[3] === code[3]) || (colored.length <= 3)) &&
				//    ((colored[4] === code[4]) || (colored.length <= 4))
				if (col) {
					console.log("colored " + String.fromCodePoint(code[0], code[1]) + ' ' + code[0].toString(16) + ' ' + code[1].toString(16)) //, code[2], code[3]))
					k += 6
					//next()
					//next()
					//next()
					//next()
					//next()
					//break
				} else {
					//i++
					//if(i == row_size) {
					//    row++
					//    i=0
					//}
					//next()
					k++
				}

				j++
			}
		}
	}
		var flags = [
			//[0xD83C, 0xDFF3],
			//[0xD83C, 0xDFF4],
			//[0xD83C, 0xDFC1],
			//[0xD83D, 0xDEA9],
			//[0xD83C, 0xDFF3, 0xFE0F, 0x200D, 0xD83C, 0xDF08],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDFD],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDE9, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF6],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDED],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDE7],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDEF],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDED],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDFB],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF6],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDFD],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDED, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDE9, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDE9, 0xD83C, 0xDDEF],
			[0xD83C, 0xDDE9, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDE9, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDFB],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF6],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDEB, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDEB, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDEB, 0xD83C, 0xDDEF],
			[0xD83C, 0xDDEB, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDEB, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDE9, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDED],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF5],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDED, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDED, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDED, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDED, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF6],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDEE, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDEF, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDEF, 0xD83C, 0xDDF5],
			[0xD83C, 0xDF8C],
			[0xD83C, 0xDDEF, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDEF, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDFD, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDFB],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDE7],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDFB],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDED],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF6],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDFE, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDFD],
			[0xD83C, 0xDDEB, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDF5],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDF5],
			[0xD83C, 0xDDF2, 0xD83C, 0xDDF5],
			[0xD83C, 0xDDF3, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDF4, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDED],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF6, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF7, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDF7, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDF7, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDF7, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDFC, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDF7, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDFD],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDE7],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDFF, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDE7, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDED],
			[0xD83C, 0xDDF0, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDF1, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDF5, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDE9],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDE8, 0xD83C, 0xDDED],
			[0xD83C, 0xDDF8, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDFC],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDEF],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDED],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF1],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF0],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF4],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF9],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF7],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDE8],
			[0xD83C, 0xDDF9, 0xD83C, 0xDDFB],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDEE],
			[0xD83C, 0xDDFA, 0xD83C, 0xDDEC],
			[0xD83C, 0xDDFA, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDE6, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDEC, 0xD83C, 0xDDE7],
			[0xD83C, 0xDDFA, 0xD83C, 0xDDF8],
			[0xD83C, 0xDDFA, 0xD83C, 0xDDFE],
			[0xD83C, 0xDDFA, 0xD83C, 0xDDFF],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDFA],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDE6],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDFB, 0xD83C, 0xDDF3],
			[0xD83C, 0xDDFC, 0xD83C, 0xDDEB],
			[0xD83C, 0xDDEA, 0xD83C, 0xDDED],
			[0xD83C, 0xDDFE, 0xD83C, 0xDDEA],
			[0xD83C, 0xDDFF, 0xD83C, 0xDDF2],
			[0xD83C, 0xDDFF, 0xD83C, 0xDDFC],
		]

	window.unicodeEmoji = function(text) {

		//		for (let i = 0; i < flags.length; i++) {
		//			flags[i] = String.fromCharCode.apply(null, flags[i])
		//		}
		//
		//		//console.log(flags)
		//
		//		text = text.split('')
		//		console.log(text)
		//
		//		for (let i = 0; i < text.length; i++) {
		//			let id = flags.indexOf(text[i])
		//		 	if (id != -1) text[i] = '!'
		//		 }
		//
		//		return text.join('');
		{
			const codes = []
			let i = 0
			while (i < text.length) {
				codes.push(text.charCodeAt(i))
				i++
			}

			i = 0
			const out = []

			while (i < codes.length) {

				let flag = 0
				let found = false
				while (flag < flags.length) {
					let f = flag
					flag++
					if (flags[f].length >= 1)
						if (flags[f][0] != codes[i + 0]) continue
					if (flags[f].length >= 2)
						if (flags[f][1] != codes[i + 1]) continue
					if (flags[f].length >= 3)
						if (flags[f][2] != codes[i + 2]) continue
					if (flags[f].length == 4)
						if (flags[f][3] != codes[i + 3]) continue

					i += flags[f].length
					found = true
					let emox = f// - 5
					let emoy = 0

					while (emox > 40) {
						emox -= 40
						emoy++
					}

					emox *= 22
					emoy *= 22
					emoy += 1056
					out.push(`<span class="emoji" style="background-position: -${emox}px -${emoy}px;"></span>`)
					break
				}

				if (found) { i++; continue }
				out.push(String.fromCharCode(codes[i]))
				i++
			}

			//out.push(String.fromCharCode(codes[i]))
			text = out.join('')
		}

		//return text

		const codes = []
		let i = 0
		while (i < text.length) {
			//codes.push(text.codePointAt(i))
			codes.push(text.charCodeAt(i))
			i++
		}

		i = 0
		const out = []
		while (i < codes.length) {
			if (codes[i] === 0xD83C && colors_end.indexOf(codes[i + 1]) !== -1) {
				i++
				i++
				continue;
			}

			let over = false
			let j = 0
			while (j * 3 < emojis.length) {
				const e = emojis[j * 3]
				let found = true

				//if(e.length )

				//if (codes[i] === e[0] && ((codes[i + 1] === e[1]) || (e[1] == 0xFE0F))) {
				//    found = true
				//}

				let jj = 0
				while (jj < e.length) {
					if (e[jj] !== codes[i + jj]) {
						found = false
						break
					}
					jj++
				}

				if (found) {
					//String.fromCodePoint(0xD83D, 0xDD28)
					const emox = 22 * emojis[j * 3 + 1]
					const emoy = 22 * emojis[j * 3 + 2]
					out.push(`<span class="emoji" style="background-position: -${emox}px -${emoy}px;"></span>`)
					over = true
					i += e.length
					if (e[e.length - 1] == 0xFE0F) i--
					break
				}
				j++
			}

			if (over) continue;
			out.push(String.fromCharCode(codes[i]))
			i++
		}

		return out.join('')
	}

	let test = '<'
	let ii = 0
	for (var i = 0; i < flags.length; i++) {
		test += String.fromCharCode.apply(null, flags[i])
		if (ii == 54) {
			test = test + '>\n<'
			ii = 0
		}
		ii++
	}
	console.log(test+'>')

})();
