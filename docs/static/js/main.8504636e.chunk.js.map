{"version":3,"sources":["components/preview.svg","tdlib/tdapi.ts","tdlib/tdlib.ts","utils/UserInfo.ts","components/messages/MessageTypes.tsx","components/history/Input.tsx","components/history/Top.tsx","tdlib/loader.ts","components/history/CurrentChatPanel.tsx","components/chats/Footer.tsx","components/chats/Header.tsx","components/chats/ChatListElement.tsx","utils/Time.ts","components/chats/ChatList.tsx","components/chats/ChatsPanel.tsx","components/panels/SidePanel.tsx","redux/store.ts","redux/converters.ts","components/login/LoginForm.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TD","client","this","send","parameters","encryption_key","phone_number","settings","code","other_user_ids","first_name","last_name","password","recovery_code","token","link","new_encryption_key","old_password","new_password","new_hint","set_recovery_email_address","new_recovery_email_address","valid_for","user_id","basic_group_id","supergroup_id","secret_chat_id","chat_id","message_id","message_ids","file_id","remote_file_id","file_type","chat_list","offset_order","offset_chat_id","limit","username","query","location","category","type","from_message_id","offset","only_local","remove_from_chat_list","revoke","sender_user_id","filter","offset_date","offset_message_id","from_search_id","only_missed","date","return_local","notification_group_id","notification_id","max_notification_id","for_album","url","reply_to_message_id","options","reply_markup","input_message_content","input_message_contents","bot_user_id","parameter","query_id","result_id","hide_via_bot","from_chat_id","as_album","send_copy","remove_caption","ttl","disable_notification","caption","inline_message_id","scheduling_state","text","parse_mode","file_name","mime_type","language_pack_database_path","localization_target","language_pack_id","key","json","json_value","option_ids","option_id","button_id","allow_write_access","user_location","inline_query_id","is_personal","results","cache_time","next_offset","switch_pm_text","switch_pm_parameter","payload","callback_query_id","show_alert","shipping_query_id","shipping_options","error_message","pre_checkout_query_id","edit_message","score","force","action","force_read","user_ids","title","is_channel","description","photo","permissions","draft_message","notification_settings","is_pinned","is_marked_as_unread","default_disable_notification","client_data","discussion_chat_id","slow_mode_delay","forward_limit","status","exclude_secret_chats","scope","compare_sound","chat_ids","priority","synchronous","only_if_pending","file","generation_id","data","expected_size","local_prefix_size","error","count","invite_link","protocol","call_id","is_disconnected","duration","connection_id","rating","comment","problems","debug_information","contact","share_phone_number","contacts","emoji","is_masks","offset_sticker_set_id","set_id","name","is_installed","is_archived","sticker_set_ids","is_attached","sticker","exact_match","input_language_code","language_code","animation","prefix","hashtag","force_full","profile_photo_id","bio","session_id","website_id","sticker_set_id","sign_messages","is_all_history_available","from_event_id","filters","order_info","allow_save","order_info_id","shipping_option_id","credentials","for_dark_theme","background","background_id","keys","info","strings","new_string","device_token","referrer","setting","rules","value","reason","is_dark","chat_limit","size","immunity_delay","file_types","exclude_chat_ids","only_current","entry","element","errors","country_code","email_address","public_key","nonce","autorization_form_id","types","hash","pending_update_count","png_sticker","stickers","position","zoom","width","height","scale","terms_of_service_id","method","custom_query_id","seconds","server","port","enable","proxy_id","log_stream","new_verbosity_level","tag","verbosity_level","x","dc_id","timeout","dispatchTelegramEventHandler","handle","downloadFileHandler","onUpdate","update","a","dispatchTelegramEvent","console","log","authorization_state","td","use_test_dc","api_id","api_hash","system_language_code","navigator","language","device_model","system_version","application_version","use_secret_chats","use_message_database","use_file_database","database_directory","files_directory","instanceName","logVerbosityLevel","jsLogVerbosityLevel","useDatabase","readOnly","mode","TdClient","tg","TL","nameToInitials","nameCombined","length","toUpperCase","indexOf","split","substr","CenterSystemMessage","className","StickerMy","src","time","state","downloadFile","srcAva","fileURL","id","style","backgroundImage","MessageMy","reactions","MessageTheirs","author","views","avatar","MessageSameSender","children","MessageSameSenderTheirs","senderUserId","saveFileUrl","user","users","chat","chats","currentChatId","small","firstName","lastName","trim","MessagePhotoTheirs","sized","StickerOnMessage","senderName","pos","Input","useState","setValue","messagesEndRef","useRef","useEffect","current","el","target","document","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","window","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","HTMLElement","focus","replaceCaret","draft","draftText","supergroups","isChannel","ref","contentEditable","onKeyDown","e","parseTextEntities","version","then","sendMessage","from_background","disable_web_page_preview","clear_draft","preventDefault","onInput","innerHTML","dangerouslySetInnerHTML","__html","Top","savedMessages","myId","larger","summary","supergroup","memberCount","onlineMemberCount","was_online","diff","Date","now","Math","round","hour","day","week","moth","busyConverting","idOrFile","dispatch","getState","files","fileLoads","local","can_be_downloaded","is_downloading_completed","is_downloading_active","loads","Promise","resolve","setTimeout","readFilePart","filePart","blobURL","URL","createObjectURL","History","saveChatHistory","dragging","setDragging","setPosition","lastPosition","setLastPosition","progress","setProgress","chatListScrollBar","chatListScrollPane","sliderMaxY","offsetHeight","sliderY","min","max","onMouseMove","positionNew","pageY","progressNew","onMouseUp","addEventListener","removeEventListener","messages","random","lastMessage","history","getChatHistory","destination","lastSender","lastMessageId","mergeDestination","push","updateDestination","slice","reverse","messageId","messageState","toLocaleTimeString","minute","content","messageChatUpgradeFrom","messagePhoto","sizes","reduce","prev","curr","messageSticker","is_animated","thumbnail","lines","includes","parts","line","what","entities","lastOffset","lastLength","entity","string","href","onClick","_","open","message","replyToMessageId","warn","onWheel","deltaY","progressClamp","_progress","paneH","paneY","top","onMouseDown","stopPropagation","CurrentChatPanelConnected","connect","ownProps","chatSelected","chatIds","Footer","Header","showSidePanel","ChatListElement","chatId","selectChat","chatMemberStatus","unread","unreadCount","dateTime","getTime","toLocaleDateString","dateStyle","getDay","replace","formatTime","dateHint","preview","tl","textPreview","systemPreview","messageContentToPreview","system","who","sender","pinned","isPinned","verified","channel","bot","active","order","ChatList","left","pageX","sortedChats","sort","b","ordera","BigInt","orderb","map","ChatsPanelConnected","openChat","showSideBar","$downloadFile","LoginState","SidePanelConnected","logOut","reload","hideSidePanel","phone","confirm","chatToState","unread_count","replyToMessageIdDraft","input_message_text","userToState","is_verified","profile_photo","supergroupToState","isVerified","member_count","messageToState","initialState","loaded","loginState","WaitTDLib","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","chatPhoto","big","profilePhoto","updateAuthorizationState","WaitPhoneNumber","WaitCode","WaitRegistration","WaitPassword","Ready","updateOption","updateNewChat","updateChatLastMessage","last_message","updateChatOrder","updateNewMessage","updateDeleteMessages","is_permanent","from_cache","updateChatReadInbox","updateChatDraftMessage","updateChatOnlineMemberCount","online_member_count","updateMessageContent","new_content","updateSupergroup","updateFile","updateUser","updateUserStatus","messagesHolder","result","applyMiddleware","thunkMiddleware","cleanPhoneNumber","startsWith","join","isCorrectPhoneNumber","char","LoginFormConnected","setAuthenticationPhoneNumber","allow_flash_call","is_current_phone_number","allow_sms_retriever_api","checkAuthenticationCode","checkAuthenticationPassword","setPhone","setCode","secret","setSecret","blur","transform","onChange","placeholder","mapDispatchToProps","dispatchTelegramEventFunction","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8504636e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preview.944731cf.svg\";","// Hexagram\n// Copyright (C) 2020  Oleg Petrenko\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, version 3 of the License.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport TdClient, { TdObject } from 'tdweb'\n\nexport interface TLObject {\n\treadonly \"@type\": \"error\" |\n\t\"ok\" |\n\t\"tdlibParameters\" |\n\t\"authenticationCodeTypeTelegramMessage\" |\n\t\"authenticationCodeTypeSms\" |\n\t\"authenticationCodeTypeCall\" |\n\t\"authenticationCodeTypeFlashCall\" |\n\t\"authenticationCodeInfo\" |\n\t\"emailAddressAuthenticationCodeInfo\" |\n\t\"textEntity\" |\n\t\"textEntities\" |\n\t\"formattedText\" |\n\t\"termsOfService\" |\n\t\"authorizationStateWaitTdlibParameters\" |\n\t\"authorizationStateWaitEncryptionKey\" |\n\t\"authorizationStateWaitPhoneNumber\" |\n\t\"authorizationStateWaitCode\" |\n\t\"authorizationStateWaitOtherDeviceConfirmation\" |\n\t\"authorizationStateWaitRegistration\" |\n\t\"authorizationStateWaitPassword\" |\n\t\"authorizationStateReady\" |\n\t\"authorizationStateLoggingOut\" |\n\t\"authorizationStateClosing\" |\n\t\"authorizationStateClosed\" |\n\t\"passwordState\" |\n\t\"recoveryEmailAddress\" |\n\t\"temporaryPasswordState\" |\n\t\"localFile\" |\n\t\"remoteFile\" |\n\t\"file\" |\n\t\"inputFileId\" |\n\t\"inputFileRemote\" |\n\t\"inputFileLocal\" |\n\t\"inputFileGenerated\" |\n\t\"photoSize\" |\n\t\"minithumbnail\" |\n\t\"maskPointForehead\" |\n\t\"maskPointEyes\" |\n\t\"maskPointMouth\" |\n\t\"maskPointChin\" |\n\t\"maskPosition\" |\n\t\"pollOption\" |\n\t\"pollTypeRegular\" |\n\t\"pollTypeQuiz\" |\n\t\"animation\" |\n\t\"audio\" |\n\t\"document\" |\n\t\"photo\" |\n\t\"sticker\" |\n\t\"video\" |\n\t\"videoNote\" |\n\t\"voiceNote\" |\n\t\"contact\" |\n\t\"location\" |\n\t\"venue\" |\n\t\"game\" |\n\t\"poll\" |\n\t\"profilePhoto\" |\n\t\"chatPhoto\" |\n\t\"userTypeRegular\" |\n\t\"userTypeDeleted\" |\n\t\"userTypeBot\" |\n\t\"userTypeUnknown\" |\n\t\"botCommand\" |\n\t\"botInfo\" |\n\t\"chatLocation\" |\n\t\"user\" |\n\t\"userFullInfo\" |\n\t\"userProfilePhoto\" |\n\t\"userProfilePhotos\" |\n\t\"users\" |\n\t\"chatAdministrator\" |\n\t\"chatAdministrators\" |\n\t\"chatPermissions\" |\n\t\"chatMemberStatusCreator\" |\n\t\"chatMemberStatusAdministrator\" |\n\t\"chatMemberStatusMember\" |\n\t\"chatMemberStatusRestricted\" |\n\t\"chatMemberStatusLeft\" |\n\t\"chatMemberStatusBanned\" |\n\t\"chatMember\" |\n\t\"chatMembers\" |\n\t\"chatMembersFilterContacts\" |\n\t\"chatMembersFilterAdministrators\" |\n\t\"chatMembersFilterMembers\" |\n\t\"chatMembersFilterRestricted\" |\n\t\"chatMembersFilterBanned\" |\n\t\"chatMembersFilterBots\" |\n\t\"supergroupMembersFilterRecent\" |\n\t\"supergroupMembersFilterContacts\" |\n\t\"supergroupMembersFilterAdministrators\" |\n\t\"supergroupMembersFilterSearch\" |\n\t\"supergroupMembersFilterRestricted\" |\n\t\"supergroupMembersFilterBanned\" |\n\t\"supergroupMembersFilterBots\" |\n\t\"basicGroup\" |\n\t\"basicGroupFullInfo\" |\n\t\"supergroup\" |\n\t\"supergroupFullInfo\" |\n\t\"secretChatStatePending\" |\n\t\"secretChatStateReady\" |\n\t\"secretChatStateClosed\" |\n\t\"secretChat\" |\n\t\"messageForwardOriginUser\" |\n\t\"messageForwardOriginHiddenUser\" |\n\t\"messageForwardOriginChannel\" |\n\t\"messageForwardInfo\" |\n\t\"messageSendingStatePending\" |\n\t\"messageSendingStateFailed\" |\n\t\"message\" |\n\t\"messages\" |\n\t\"foundMessages\" |\n\t\"notificationSettingsScopePrivateChats\" |\n\t\"notificationSettingsScopeGroupChats\" |\n\t\"notificationSettingsScopeChannelChats\" |\n\t\"chatNotificationSettings\" |\n\t\"scopeNotificationSettings\" |\n\t\"draftMessage\" |\n\t\"chatTypePrivate\" |\n\t\"chatTypeBasicGroup\" |\n\t\"chatTypeSupergroup\" |\n\t\"chatTypeSecret\" |\n\t\"chatListMain\" |\n\t\"chatListArchive\" |\n\t\"chat\" |\n\t\"chats\" |\n\t\"chatNearby\" |\n\t\"chatsNearby\" |\n\t\"chatInviteLink\" |\n\t\"chatInviteLinkInfo\" |\n\t\"publicChatTypeHasUsername\" |\n\t\"publicChatTypeIsLocationBased\" |\n\t\"chatActionBarReportSpam\" |\n\t\"chatActionBarReportUnrelatedLocation\" |\n\t\"chatActionBarReportAddBlock\" |\n\t\"chatActionBarAddContact\" |\n\t\"chatActionBarSharePhoneNumber\" |\n\t\"keyboardButtonTypeText\" |\n\t\"keyboardButtonTypeRequestPhoneNumber\" |\n\t\"keyboardButtonTypeRequestLocation\" |\n\t\"keyboardButtonTypeRequestPoll\" |\n\t\"keyboardButton\" |\n\t\"inlineKeyboardButtonTypeUrl\" |\n\t\"inlineKeyboardButtonTypeLoginUrl\" |\n\t\"inlineKeyboardButtonTypeCallback\" |\n\t\"inlineKeyboardButtonTypeCallbackGame\" |\n\t\"inlineKeyboardButtonTypeSwitchInline\" |\n\t\"inlineKeyboardButtonTypeBuy\" |\n\t\"inlineKeyboardButton\" |\n\t\"replyMarkupRemoveKeyboard\" |\n\t\"replyMarkupForceReply\" |\n\t\"replyMarkupShowKeyboard\" |\n\t\"replyMarkupInlineKeyboard\" |\n\t\"loginUrlInfoOpen\" |\n\t\"loginUrlInfoRequestConfirmation\" |\n\t\"richTextPlain\" |\n\t\"richTextBold\" |\n\t\"richTextItalic\" |\n\t\"richTextUnderline\" |\n\t\"richTextStrikethrough\" |\n\t\"richTextFixed\" |\n\t\"richTextUrl\" |\n\t\"richTextEmailAddress\" |\n\t\"richTextSubscript\" |\n\t\"richTextSuperscript\" |\n\t\"richTextMarked\" |\n\t\"richTextPhoneNumber\" |\n\t\"richTextIcon\" |\n\t\"richTextAnchor\" |\n\t\"richTexts\" |\n\t\"pageBlockCaption\" |\n\t\"pageBlockListItem\" |\n\t\"pageBlockHorizontalAlignmentLeft\" |\n\t\"pageBlockHorizontalAlignmentCenter\" |\n\t\"pageBlockHorizontalAlignmentRight\" |\n\t\"pageBlockVerticalAlignmentTop\" |\n\t\"pageBlockVerticalAlignmentMiddle\" |\n\t\"pageBlockVerticalAlignmentBottom\" |\n\t\"pageBlockTableCell\" |\n\t\"pageBlockRelatedArticle\" |\n\t\"pageBlockTitle\" |\n\t\"pageBlockSubtitle\" |\n\t\"pageBlockAuthorDate\" |\n\t\"pageBlockHeader\" |\n\t\"pageBlockSubheader\" |\n\t\"pageBlockKicker\" |\n\t\"pageBlockParagraph\" |\n\t\"pageBlockPreformatted\" |\n\t\"pageBlockFooter\" |\n\t\"pageBlockDivider\" |\n\t\"pageBlockAnchor\" |\n\t\"pageBlockList\" |\n\t\"pageBlockBlockQuote\" |\n\t\"pageBlockPullQuote\" |\n\t\"pageBlockAnimation\" |\n\t\"pageBlockAudio\" |\n\t\"pageBlockPhoto\" |\n\t\"pageBlockVideo\" |\n\t\"pageBlockVoiceNote\" |\n\t\"pageBlockCover\" |\n\t\"pageBlockEmbedded\" |\n\t\"pageBlockEmbeddedPost\" |\n\t\"pageBlockCollage\" |\n\t\"pageBlockSlideshow\" |\n\t\"pageBlockChatLink\" |\n\t\"pageBlockTable\" |\n\t\"pageBlockDetails\" |\n\t\"pageBlockRelatedArticles\" |\n\t\"pageBlockMap\" |\n\t\"webPageInstantView\" |\n\t\"webPage\" |\n\t\"address\" |\n\t\"labeledPricePart\" |\n\t\"invoice\" |\n\t\"orderInfo\" |\n\t\"shippingOption\" |\n\t\"savedCredentials\" |\n\t\"inputCredentialsSaved\" |\n\t\"inputCredentialsNew\" |\n\t\"inputCredentialsAndroidPay\" |\n\t\"inputCredentialsApplePay\" |\n\t\"paymentsProviderStripe\" |\n\t\"paymentForm\" |\n\t\"validatedOrderInfo\" |\n\t\"paymentResult\" |\n\t\"paymentReceipt\" |\n\t\"datedFile\" |\n\t\"passportElementTypePersonalDetails\" |\n\t\"passportElementTypePassport\" |\n\t\"passportElementTypeDriverLicense\" |\n\t\"passportElementTypeIdentityCard\" |\n\t\"passportElementTypeInternalPassport\" |\n\t\"passportElementTypeAddress\" |\n\t\"passportElementTypeUtilityBill\" |\n\t\"passportElementTypeBankStatement\" |\n\t\"passportElementTypeRentalAgreement\" |\n\t\"passportElementTypePassportRegistration\" |\n\t\"passportElementTypeTemporaryRegistration\" |\n\t\"passportElementTypePhoneNumber\" |\n\t\"passportElementTypeEmailAddress\" |\n\t\"date\" |\n\t\"personalDetails\" |\n\t\"identityDocument\" |\n\t\"inputIdentityDocument\" |\n\t\"personalDocument\" |\n\t\"inputPersonalDocument\" |\n\t\"passportElementPersonalDetails\" |\n\t\"passportElementPassport\" |\n\t\"passportElementDriverLicense\" |\n\t\"passportElementIdentityCard\" |\n\t\"passportElementInternalPassport\" |\n\t\"passportElementAddress\" |\n\t\"passportElementUtilityBill\" |\n\t\"passportElementBankStatement\" |\n\t\"passportElementRentalAgreement\" |\n\t\"passportElementPassportRegistration\" |\n\t\"passportElementTemporaryRegistration\" |\n\t\"passportElementPhoneNumber\" |\n\t\"passportElementEmailAddress\" |\n\t\"inputPassportElementPersonalDetails\" |\n\t\"inputPassportElementPassport\" |\n\t\"inputPassportElementDriverLicense\" |\n\t\"inputPassportElementIdentityCard\" |\n\t\"inputPassportElementInternalPassport\" |\n\t\"inputPassportElementAddress\" |\n\t\"inputPassportElementUtilityBill\" |\n\t\"inputPassportElementBankStatement\" |\n\t\"inputPassportElementRentalAgreement\" |\n\t\"inputPassportElementPassportRegistration\" |\n\t\"inputPassportElementTemporaryRegistration\" |\n\t\"inputPassportElementPhoneNumber\" |\n\t\"inputPassportElementEmailAddress\" |\n\t\"passportElements\" |\n\t\"passportElementErrorSourceUnspecified\" |\n\t\"passportElementErrorSourceDataField\" |\n\t\"passportElementErrorSourceFrontSide\" |\n\t\"passportElementErrorSourceReverseSide\" |\n\t\"passportElementErrorSourceSelfie\" |\n\t\"passportElementErrorSourceTranslationFile\" |\n\t\"passportElementErrorSourceTranslationFiles\" |\n\t\"passportElementErrorSourceFile\" |\n\t\"passportElementErrorSourceFiles\" |\n\t\"passportElementError\" |\n\t\"passportSuitableElement\" |\n\t\"passportRequiredElement\" |\n\t\"passportAuthorizationForm\" |\n\t\"passportElementsWithErrors\" |\n\t\"encryptedCredentials\" |\n\t\"encryptedPassportElement\" |\n\t\"inputPassportElementErrorSourceUnspecified\" |\n\t\"inputPassportElementErrorSourceDataField\" |\n\t\"inputPassportElementErrorSourceFrontSide\" |\n\t\"inputPassportElementErrorSourceReverseSide\" |\n\t\"inputPassportElementErrorSourceSelfie\" |\n\t\"inputPassportElementErrorSourceTranslationFile\" |\n\t\"inputPassportElementErrorSourceTranslationFiles\" |\n\t\"inputPassportElementErrorSourceFile\" |\n\t\"inputPassportElementErrorSourceFiles\" |\n\t\"inputPassportElementError\" |\n\t\"messageText\" |\n\t\"messageAnimation\" |\n\t\"messageAudio\" |\n\t\"messageDocument\" |\n\t\"messagePhoto\" |\n\t\"messageExpiredPhoto\" |\n\t\"messageSticker\" |\n\t\"messageVideo\" |\n\t\"messageExpiredVideo\" |\n\t\"messageVideoNote\" |\n\t\"messageVoiceNote\" |\n\t\"messageLocation\" |\n\t\"messageVenue\" |\n\t\"messageContact\" |\n\t\"messageGame\" |\n\t\"messagePoll\" |\n\t\"messageInvoice\" |\n\t\"messageCall\" |\n\t\"messageBasicGroupChatCreate\" |\n\t\"messageSupergroupChatCreate\" |\n\t\"messageChatChangeTitle\" |\n\t\"messageChatChangePhoto\" |\n\t\"messageChatDeletePhoto\" |\n\t\"messageChatAddMembers\" |\n\t\"messageChatJoinByLink\" |\n\t\"messageChatDeleteMember\" |\n\t\"messageChatUpgradeTo\" |\n\t\"messageChatUpgradeFrom\" |\n\t\"messagePinMessage\" |\n\t\"messageScreenshotTaken\" |\n\t\"messageChatSetTtl\" |\n\t\"messageCustomServiceAction\" |\n\t\"messageGameScore\" |\n\t\"messagePaymentSuccessful\" |\n\t\"messagePaymentSuccessfulBot\" |\n\t\"messageContactRegistered\" |\n\t\"messageWebsiteConnected\" |\n\t\"messagePassportDataSent\" |\n\t\"messagePassportDataReceived\" |\n\t\"messageUnsupported\" |\n\t\"textEntityTypeMention\" |\n\t\"textEntityTypeHashtag\" |\n\t\"textEntityTypeCashtag\" |\n\t\"textEntityTypeBotCommand\" |\n\t\"textEntityTypeUrl\" |\n\t\"textEntityTypeEmailAddress\" |\n\t\"textEntityTypePhoneNumber\" |\n\t\"textEntityTypeBold\" |\n\t\"textEntityTypeItalic\" |\n\t\"textEntityTypeUnderline\" |\n\t\"textEntityTypeStrikethrough\" |\n\t\"textEntityTypeCode\" |\n\t\"textEntityTypePre\" |\n\t\"textEntityTypePreCode\" |\n\t\"textEntityTypeTextUrl\" |\n\t\"textEntityTypeMentionName\" |\n\t\"inputThumbnail\" |\n\t\"messageSchedulingStateSendAtDate\" |\n\t\"messageSchedulingStateSendWhenOnline\" |\n\t\"sendMessageOptions\" |\n\t\"inputMessageText\" |\n\t\"inputMessageAnimation\" |\n\t\"inputMessageAudio\" |\n\t\"inputMessageDocument\" |\n\t\"inputMessagePhoto\" |\n\t\"inputMessageSticker\" |\n\t\"inputMessageVideo\" |\n\t\"inputMessageVideoNote\" |\n\t\"inputMessageVoiceNote\" |\n\t\"inputMessageLocation\" |\n\t\"inputMessageVenue\" |\n\t\"inputMessageContact\" |\n\t\"inputMessageGame\" |\n\t\"inputMessageInvoice\" |\n\t\"inputMessagePoll\" |\n\t\"inputMessageForwarded\" |\n\t\"searchMessagesFilterEmpty\" |\n\t\"searchMessagesFilterAnimation\" |\n\t\"searchMessagesFilterAudio\" |\n\t\"searchMessagesFilterDocument\" |\n\t\"searchMessagesFilterPhoto\" |\n\t\"searchMessagesFilterVideo\" |\n\t\"searchMessagesFilterVoiceNote\" |\n\t\"searchMessagesFilterPhotoAndVideo\" |\n\t\"searchMessagesFilterUrl\" |\n\t\"searchMessagesFilterChatPhoto\" |\n\t\"searchMessagesFilterCall\" |\n\t\"searchMessagesFilterMissedCall\" |\n\t\"searchMessagesFilterVideoNote\" |\n\t\"searchMessagesFilterVoiceAndVideoNote\" |\n\t\"searchMessagesFilterMention\" |\n\t\"searchMessagesFilterUnreadMention\" |\n\t\"chatActionTyping\" |\n\t\"chatActionRecordingVideo\" |\n\t\"chatActionUploadingVideo\" |\n\t\"chatActionRecordingVoiceNote\" |\n\t\"chatActionUploadingVoiceNote\" |\n\t\"chatActionUploadingPhoto\" |\n\t\"chatActionUploadingDocument\" |\n\t\"chatActionChoosingLocation\" |\n\t\"chatActionChoosingContact\" |\n\t\"chatActionStartPlayingGame\" |\n\t\"chatActionRecordingVideoNote\" |\n\t\"chatActionUploadingVideoNote\" |\n\t\"chatActionCancel\" |\n\t\"userStatusEmpty\" |\n\t\"userStatusOnline\" |\n\t\"userStatusOffline\" |\n\t\"userStatusRecently\" |\n\t\"userStatusLastWeek\" |\n\t\"userStatusLastMonth\" |\n\t\"stickers\" |\n\t\"emojis\" |\n\t\"stickerSet\" |\n\t\"stickerSetInfo\" |\n\t\"stickerSets\" |\n\t\"callDiscardReasonEmpty\" |\n\t\"callDiscardReasonMissed\" |\n\t\"callDiscardReasonDeclined\" |\n\t\"callDiscardReasonDisconnected\" |\n\t\"callDiscardReasonHungUp\" |\n\t\"callProtocol\" |\n\t\"callConnection\" |\n\t\"callId\" |\n\t\"callStatePending\" |\n\t\"callStateExchangingKeys\" |\n\t\"callStateReady\" |\n\t\"callStateHangingUp\" |\n\t\"callStateDiscarded\" |\n\t\"callStateError\" |\n\t\"callProblemEcho\" |\n\t\"callProblemNoise\" |\n\t\"callProblemInterruptions\" |\n\t\"callProblemDistortedSpeech\" |\n\t\"callProblemSilentLocal\" |\n\t\"callProblemSilentRemote\" |\n\t\"callProblemDropped\" |\n\t\"call\" |\n\t\"phoneNumberAuthenticationSettings\" |\n\t\"animations\" |\n\t\"importedContacts\" |\n\t\"httpUrl\" |\n\t\"inputInlineQueryResultAnimatedGif\" |\n\t\"inputInlineQueryResultAnimatedMpeg4\" |\n\t\"inputInlineQueryResultArticle\" |\n\t\"inputInlineQueryResultAudio\" |\n\t\"inputInlineQueryResultContact\" |\n\t\"inputInlineQueryResultDocument\" |\n\t\"inputInlineQueryResultGame\" |\n\t\"inputInlineQueryResultLocation\" |\n\t\"inputInlineQueryResultPhoto\" |\n\t\"inputInlineQueryResultSticker\" |\n\t\"inputInlineQueryResultVenue\" |\n\t\"inputInlineQueryResultVideo\" |\n\t\"inputInlineQueryResultVoiceNote\" |\n\t\"inlineQueryResultArticle\" |\n\t\"inlineQueryResultContact\" |\n\t\"inlineQueryResultLocation\" |\n\t\"inlineQueryResultVenue\" |\n\t\"inlineQueryResultGame\" |\n\t\"inlineQueryResultAnimation\" |\n\t\"inlineQueryResultAudio\" |\n\t\"inlineQueryResultDocument\" |\n\t\"inlineQueryResultPhoto\" |\n\t\"inlineQueryResultSticker\" |\n\t\"inlineQueryResultVideo\" |\n\t\"inlineQueryResultVoiceNote\" |\n\t\"inlineQueryResults\" |\n\t\"callbackQueryPayloadData\" |\n\t\"callbackQueryPayloadGame\" |\n\t\"callbackQueryAnswer\" |\n\t\"customRequestResult\" |\n\t\"gameHighScore\" |\n\t\"gameHighScores\" |\n\t\"chatEventMessageEdited\" |\n\t\"chatEventMessageDeleted\" |\n\t\"chatEventPollStopped\" |\n\t\"chatEventMessagePinned\" |\n\t\"chatEventMessageUnpinned\" |\n\t\"chatEventMemberJoined\" |\n\t\"chatEventMemberLeft\" |\n\t\"chatEventMemberInvited\" |\n\t\"chatEventMemberPromoted\" |\n\t\"chatEventMemberRestricted\" |\n\t\"chatEventTitleChanged\" |\n\t\"chatEventPermissionsChanged\" |\n\t\"chatEventDescriptionChanged\" |\n\t\"chatEventUsernameChanged\" |\n\t\"chatEventPhotoChanged\" |\n\t\"chatEventInvitesToggled\" |\n\t\"chatEventLinkedChatChanged\" |\n\t\"chatEventSlowModeDelayChanged\" |\n\t\"chatEventSignMessagesToggled\" |\n\t\"chatEventStickerSetChanged\" |\n\t\"chatEventLocationChanged\" |\n\t\"chatEventIsAllHistoryAvailableToggled\" |\n\t\"chatEvent\" |\n\t\"chatEvents\" |\n\t\"chatEventLogFilters\" |\n\t\"languagePackStringValueOrdinary\" |\n\t\"languagePackStringValuePluralized\" |\n\t\"languagePackStringValueDeleted\" |\n\t\"languagePackString\" |\n\t\"languagePackStrings\" |\n\t\"languagePackInfo\" |\n\t\"localizationTargetInfo\" |\n\t\"deviceTokenFirebaseCloudMessaging\" |\n\t\"deviceTokenApplePush\" |\n\t\"deviceTokenApplePushVoIP\" |\n\t\"deviceTokenWindowsPush\" |\n\t\"deviceTokenMicrosoftPush\" |\n\t\"deviceTokenMicrosoftPushVoIP\" |\n\t\"deviceTokenWebPush\" |\n\t\"deviceTokenSimplePush\" |\n\t\"deviceTokenUbuntuPush\" |\n\t\"deviceTokenBlackBerryPush\" |\n\t\"deviceTokenTizenPush\" |\n\t\"pushReceiverId\" |\n\t\"backgroundFillSolid\" |\n\t\"backgroundFillGradient\" |\n\t\"backgroundTypeWallpaper\" |\n\t\"backgroundTypePattern\" |\n\t\"backgroundTypeFill\" |\n\t\"background\" |\n\t\"backgrounds\" |\n\t\"inputBackgroundLocal\" |\n\t\"inputBackgroundRemote\" |\n\t\"hashtags\" |\n\t\"canTransferOwnershipResultOk\" |\n\t\"canTransferOwnershipResultPasswordNeeded\" |\n\t\"canTransferOwnershipResultPasswordTooFresh\" |\n\t\"canTransferOwnershipResultSessionTooFresh\" |\n\t\"checkChatUsernameResultOk\" |\n\t\"checkChatUsernameResultUsernameInvalid\" |\n\t\"checkChatUsernameResultUsernameOccupied\" |\n\t\"checkChatUsernameResultPublicChatsTooMuch\" |\n\t\"checkChatUsernameResultPublicGroupsUnavailable\" |\n\t\"pushMessageContentHidden\" |\n\t\"pushMessageContentAnimation\" |\n\t\"pushMessageContentAudio\" |\n\t\"pushMessageContentContact\" |\n\t\"pushMessageContentContactRegistered\" |\n\t\"pushMessageContentDocument\" |\n\t\"pushMessageContentGame\" |\n\t\"pushMessageContentGameScore\" |\n\t\"pushMessageContentInvoice\" |\n\t\"pushMessageContentLocation\" |\n\t\"pushMessageContentPhoto\" |\n\t\"pushMessageContentPoll\" |\n\t\"pushMessageContentScreenshotTaken\" |\n\t\"pushMessageContentSticker\" |\n\t\"pushMessageContentText\" |\n\t\"pushMessageContentVideo\" |\n\t\"pushMessageContentVideoNote\" |\n\t\"pushMessageContentVoiceNote\" |\n\t\"pushMessageContentBasicGroupChatCreate\" |\n\t\"pushMessageContentChatAddMembers\" |\n\t\"pushMessageContentChatChangePhoto\" |\n\t\"pushMessageContentChatChangeTitle\" |\n\t\"pushMessageContentChatDeleteMember\" |\n\t\"pushMessageContentChatJoinByLink\" |\n\t\"pushMessageContentMessageForwards\" |\n\t\"pushMessageContentMediaAlbum\" |\n\t\"notificationTypeNewMessage\" |\n\t\"notificationTypeNewSecretChat\" |\n\t\"notificationTypeNewCall\" |\n\t\"notificationTypeNewPushMessage\" |\n\t\"notificationGroupTypeMessages\" |\n\t\"notificationGroupTypeMentions\" |\n\t\"notificationGroupTypeSecretChat\" |\n\t\"notificationGroupTypeCalls\" |\n\t\"notification\" |\n\t\"notificationGroup\" |\n\t\"optionValueBoolean\" |\n\t\"optionValueEmpty\" |\n\t\"optionValueInteger\" |\n\t\"optionValueString\" |\n\t\"jsonObjectMember\" |\n\t\"jsonValueNull\" |\n\t\"jsonValueBoolean\" |\n\t\"jsonValueNumber\" |\n\t\"jsonValueString\" |\n\t\"jsonValueArray\" |\n\t\"jsonValueObject\" |\n\t\"userPrivacySettingRuleAllowAll\" |\n\t\"userPrivacySettingRuleAllowContacts\" |\n\t\"userPrivacySettingRuleAllowUsers\" |\n\t\"userPrivacySettingRuleAllowChatMembers\" |\n\t\"userPrivacySettingRuleRestrictAll\" |\n\t\"userPrivacySettingRuleRestrictContacts\" |\n\t\"userPrivacySettingRuleRestrictUsers\" |\n\t\"userPrivacySettingRuleRestrictChatMembers\" |\n\t\"userPrivacySettingRules\" |\n\t\"userPrivacySettingShowStatus\" |\n\t\"userPrivacySettingShowProfilePhoto\" |\n\t\"userPrivacySettingShowLinkInForwardedMessages\" |\n\t\"userPrivacySettingShowPhoneNumber\" |\n\t\"userPrivacySettingAllowChatInvites\" |\n\t\"userPrivacySettingAllowCalls\" |\n\t\"userPrivacySettingAllowPeerToPeerCalls\" |\n\t\"userPrivacySettingAllowFindingByPhoneNumber\" |\n\t\"accountTtl\" |\n\t\"session\" |\n\t\"sessions\" |\n\t\"connectedWebsite\" |\n\t\"connectedWebsites\" |\n\t\"chatReportReasonSpam\" |\n\t\"chatReportReasonViolence\" |\n\t\"chatReportReasonPornography\" |\n\t\"chatReportReasonChildAbuse\" |\n\t\"chatReportReasonCopyright\" |\n\t\"chatReportReasonUnrelatedLocation\" |\n\t\"chatReportReasonCustom\" |\n\t\"publicMessageLink\" |\n\t\"messageLinkInfo\" |\n\t\"filePart\" |\n\t\"fileTypeNone\" |\n\t\"fileTypeAnimation\" |\n\t\"fileTypeAudio\" |\n\t\"fileTypeDocument\" |\n\t\"fileTypePhoto\" |\n\t\"fileTypeProfilePhoto\" |\n\t\"fileTypeSecret\" |\n\t\"fileTypeSecretThumbnail\" |\n\t\"fileTypeSecure\" |\n\t\"fileTypeSticker\" |\n\t\"fileTypeThumbnail\" |\n\t\"fileTypeUnknown\" |\n\t\"fileTypeVideo\" |\n\t\"fileTypeVideoNote\" |\n\t\"fileTypeVoiceNote\" |\n\t\"fileTypeWallpaper\" |\n\t\"storageStatisticsByFileType\" |\n\t\"storageStatisticsByChat\" |\n\t\"storageStatistics\" |\n\t\"storageStatisticsFast\" |\n\t\"databaseStatistics\" |\n\t\"networkTypeNone\" |\n\t\"networkTypeMobile\" |\n\t\"networkTypeMobileRoaming\" |\n\t\"networkTypeWiFi\" |\n\t\"networkTypeOther\" |\n\t\"networkStatisticsEntryFile\" |\n\t\"networkStatisticsEntryCall\" |\n\t\"networkStatistics\" |\n\t\"autoDownloadSettings\" |\n\t\"autoDownloadSettingsPresets\" |\n\t\"connectionStateWaitingForNetwork\" |\n\t\"connectionStateConnectingToProxy\" |\n\t\"connectionStateConnecting\" |\n\t\"connectionStateUpdating\" |\n\t\"connectionStateReady\" |\n\t\"topChatCategoryUsers\" |\n\t\"topChatCategoryBots\" |\n\t\"topChatCategoryGroups\" |\n\t\"topChatCategoryChannels\" |\n\t\"topChatCategoryInlineBots\" |\n\t\"topChatCategoryCalls\" |\n\t\"topChatCategoryForwardChats\" |\n\t\"tMeUrlTypeUser\" |\n\t\"tMeUrlTypeSupergroup\" |\n\t\"tMeUrlTypeChatInvite\" |\n\t\"tMeUrlTypeStickerSet\" |\n\t\"tMeUrl\" |\n\t\"tMeUrls\" |\n\t\"count\" |\n\t\"text\" |\n\t\"seconds\" |\n\t\"deepLinkInfo\" |\n\t\"textParseModeMarkdown\" |\n\t\"textParseModeHTML\" |\n\t\"proxyTypeSocks5\" |\n\t\"proxyTypeHttp\" |\n\t\"proxyTypeMtproto\" |\n\t\"proxy\" |\n\t\"proxies\" |\n\t\"inputSticker\" |\n\t\"updateAuthorizationState\" |\n\t\"updateNewMessage\" |\n\t\"updateMessageSendAcknowledged\" |\n\t\"updateMessageSendSucceeded\" |\n\t\"updateMessageSendFailed\" |\n\t\"updateMessageContent\" |\n\t\"updateMessageEdited\" |\n\t\"updateMessageViews\" |\n\t\"updateMessageContentOpened\" |\n\t\"updateMessageMentionRead\" |\n\t\"updateMessageLiveLocationViewed\" |\n\t\"updateNewChat\" |\n\t\"updateChatChatList\" |\n\t\"updateChatTitle\" |\n\t\"updateChatPhoto\" |\n\t\"updateChatPermissions\" |\n\t\"updateChatLastMessage\" |\n\t\"updateChatOrder\" |\n\t\"updateChatIsPinned\" |\n\t\"updateChatIsMarkedAsUnread\" |\n\t\"updateChatIsSponsored\" |\n\t\"updateChatHasScheduledMessages\" |\n\t\"updateChatDefaultDisableNotification\" |\n\t\"updateChatReadInbox\" |\n\t\"updateChatReadOutbox\" |\n\t\"updateChatUnreadMentionCount\" |\n\t\"updateChatNotificationSettings\" |\n\t\"updateScopeNotificationSettings\" |\n\t\"updateChatActionBar\" |\n\t\"updateChatPinnedMessage\" |\n\t\"updateChatReplyMarkup\" |\n\t\"updateChatDraftMessage\" |\n\t\"updateChatOnlineMemberCount\" |\n\t\"updateNotification\" |\n\t\"updateNotificationGroup\" |\n\t\"updateActiveNotifications\" |\n\t\"updateHavePendingNotifications\" |\n\t\"updateDeleteMessages\" |\n\t\"updateUserChatAction\" |\n\t\"updateUserStatus\" |\n\t\"updateUser\" |\n\t\"updateBasicGroup\" |\n\t\"updateSupergroup\" |\n\t\"updateSecretChat\" |\n\t\"updateUserFullInfo\" |\n\t\"updateBasicGroupFullInfo\" |\n\t\"updateSupergroupFullInfo\" |\n\t\"updateServiceNotification\" |\n\t\"updateFile\" |\n\t\"updateFileGenerationStart\" |\n\t\"updateFileGenerationStop\" |\n\t\"updateCall\" |\n\t\"updateUserPrivacySettingRules\" |\n\t\"updateUnreadMessageCount\" |\n\t\"updateUnreadChatCount\" |\n\t\"updateOption\" |\n\t\"updateInstalledStickerSets\" |\n\t\"updateTrendingStickerSets\" |\n\t\"updateRecentStickers\" |\n\t\"updateFavoriteStickers\" |\n\t\"updateSavedAnimations\" |\n\t\"updateSelectedBackground\" |\n\t\"updateLanguagePackStrings\" |\n\t\"updateConnectionState\" |\n\t\"updateTermsOfService\" |\n\t\"updateUsersNearby\" |\n\t\"updateNewInlineQuery\" |\n\t\"updateNewChosenInlineResult\" |\n\t\"updateNewCallbackQuery\" |\n\t\"updateNewInlineCallbackQuery\" |\n\t\"updateNewShippingQuery\" |\n\t\"updateNewPreCheckoutQuery\" |\n\t\"updateNewCustomEvent\" |\n\t\"updateNewCustomQuery\" |\n\t\"updatePoll\" |\n\t\"updatePollAnswer\" |\n\t\"updates\" |\n\t\"logStreamDefault\" |\n\t\"logStreamFile\" |\n\t\"logStreamEmpty\" |\n\t\"logVerbosityLevel\" |\n\t\"logTags\" |\n\t\"testInt\" |\n\t\"testString\" |\n\t\"testBytes\" |\n\t\"testVectorInt\" |\n\t\"testVectorIntObject\" |\n\t\"testVectorString\" |\n\t\"testVectorStringObject\"\n}\n// TDLib\nexport interface TLError extends TLObject {\n\treadonly \"@type\": \"error\"\n\treadonly code: number\n\treadonly message: string\n}\nexport function error(object: TLObject): TLError { return object as TLError }\nexport interface TLOk extends TLObject {\n\treadonly \"@type\": \"ok\"\n}\nexport function ok(object: TLObject): TLOk { return object as TLOk }\nexport interface TLTdlibParameters extends TLObject {\n\treadonly \"@type\": \"tdlibParameters\"\n\treadonly use_test_dc: boolean\n\treadonly database_directory: string\n\treadonly files_directory: string\n\treadonly use_file_database: boolean\n\treadonly use_chat_info_database: boolean\n\treadonly use_message_database: boolean\n\treadonly use_secret_chats: boolean\n\treadonly api_id: number\n\treadonly api_hash: string\n\treadonly system_language_code: string\n\treadonly device_model: string\n\treadonly system_version: string\n\treadonly application_version: string\n\treadonly enable_storage_optimizer: boolean\n\treadonly ignore_file_names: boolean\n}\nexport function tdlibParameters(object: TLObject): TLTdlibParameters { return object as TLTdlibParameters }\nexport interface TLAuthenticationCodeTypeTelegramMessage extends TLObject {\n\treadonly \"@type\": \"authenticationCodeTypeTelegramMessage\"\n\treadonly length: number\n}\nexport function authenticationCodeTypeTelegramMessage(object: TLObject): TLAuthenticationCodeTypeTelegramMessage { return object as TLAuthenticationCodeTypeTelegramMessage }\nexport interface TLAuthenticationCodeTypeSms extends TLObject {\n\treadonly \"@type\": \"authenticationCodeTypeSms\"\n\treadonly length: number\n}\nexport function authenticationCodeTypeSms(object: TLObject): TLAuthenticationCodeTypeSms { return object as TLAuthenticationCodeTypeSms }\nexport interface TLAuthenticationCodeTypeCall extends TLObject {\n\treadonly \"@type\": \"authenticationCodeTypeCall\"\n\treadonly length: number\n}\nexport function authenticationCodeTypeCall(object: TLObject): TLAuthenticationCodeTypeCall { return object as TLAuthenticationCodeTypeCall }\nexport interface TLAuthenticationCodeTypeFlashCall extends TLObject {\n\treadonly \"@type\": \"authenticationCodeTypeFlashCall\"\n\treadonly pattern: string\n}\nexport function authenticationCodeTypeFlashCall(object: TLObject): TLAuthenticationCodeTypeFlashCall { return object as TLAuthenticationCodeTypeFlashCall }\nexport type TLAuthenticationCodeType = TLAuthenticationCodeTypeTelegramMessage | TLAuthenticationCodeTypeSms | TLAuthenticationCodeTypeCall | TLAuthenticationCodeTypeFlashCall\nexport interface TLAuthenticationCodeInfo extends TLObject {\n\treadonly \"@type\": \"authenticationCodeInfo\"\n\treadonly phone_number: string\n\treadonly type: TLAuthenticationCodeType\n\treadonly next_type: TLAuthenticationCodeType\n\treadonly timeout: number\n}\nexport function authenticationCodeInfo(object: TLObject): TLAuthenticationCodeInfo { return object as TLAuthenticationCodeInfo }\nexport interface TLEmailAddressAuthenticationCodeInfo extends TLObject {\n\treadonly \"@type\": \"emailAddressAuthenticationCodeInfo\"\n\treadonly email_address_pattern: string\n\treadonly length: number\n}\nexport function emailAddressAuthenticationCodeInfo(object: TLObject): TLEmailAddressAuthenticationCodeInfo { return object as TLEmailAddressAuthenticationCodeInfo }\nexport interface TLTextEntity extends TLObject {\n\treadonly \"@type\": \"textEntity\"\n\treadonly offset: number\n\treadonly length: number\n\treadonly type: TLTextEntityType\n}\nexport function textEntity(object: TLObject): TLTextEntity { return object as TLTextEntity }\nexport interface TLTextEntities extends TLObject {\n\treadonly \"@type\": \"textEntities\"\n\treadonly entities: ReadonlyArray<TLTextEntity>\n}\nexport function textEntities(object: TLObject): TLTextEntities { return object as TLTextEntities }\nexport interface TLFormattedText extends TLObject {\n\treadonly \"@type\": \"formattedText\"\n\treadonly text: string\n\treadonly entities: ReadonlyArray<TLTextEntity>\n}\nexport function formattedText(object: TLObject): TLFormattedText { return object as TLFormattedText }\nexport interface TLTermsOfService extends TLObject {\n\treadonly \"@type\": \"termsOfService\"\n\treadonly text: TLFormattedText\n\treadonly min_user_age: number\n\treadonly show_popup: boolean\n}\nexport function termsOfService(object: TLObject): TLTermsOfService { return object as TLTermsOfService }\nexport interface TLAuthorizationStateWaitTdlibParameters extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitTdlibParameters\"\n}\nexport function authorizationStateWaitTdlibParameters(object: TLObject): TLAuthorizationStateWaitTdlibParameters { return object as TLAuthorizationStateWaitTdlibParameters }\nexport interface TLAuthorizationStateWaitEncryptionKey extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitEncryptionKey\"\n\treadonly is_encrypted: boolean\n}\nexport function authorizationStateWaitEncryptionKey(object: TLObject): TLAuthorizationStateWaitEncryptionKey { return object as TLAuthorizationStateWaitEncryptionKey }\nexport interface TLAuthorizationStateWaitPhoneNumber extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitPhoneNumber\"\n}\nexport function authorizationStateWaitPhoneNumber(object: TLObject): TLAuthorizationStateWaitPhoneNumber { return object as TLAuthorizationStateWaitPhoneNumber }\nexport interface TLAuthorizationStateWaitCode extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitCode\"\n\treadonly code_info: TLAuthenticationCodeInfo\n}\nexport function authorizationStateWaitCode(object: TLObject): TLAuthorizationStateWaitCode { return object as TLAuthorizationStateWaitCode }\nexport interface TLAuthorizationStateWaitOtherDeviceConfirmation extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitOtherDeviceConfirmation\"\n\treadonly link: string\n}\nexport function authorizationStateWaitOtherDeviceConfirmation(object: TLObject): TLAuthorizationStateWaitOtherDeviceConfirmation { return object as TLAuthorizationStateWaitOtherDeviceConfirmation }\nexport interface TLAuthorizationStateWaitRegistration extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitRegistration\"\n\treadonly terms_of_service: TLTermsOfService\n}\nexport function authorizationStateWaitRegistration(object: TLObject): TLAuthorizationStateWaitRegistration { return object as TLAuthorizationStateWaitRegistration }\nexport interface TLAuthorizationStateWaitPassword extends TLObject {\n\treadonly \"@type\": \"authorizationStateWaitPassword\"\n\treadonly password_hint: string\n\treadonly has_recovery_email_address: boolean\n\treadonly recovery_email_address_pattern: string\n}\nexport function authorizationStateWaitPassword(object: TLObject): TLAuthorizationStateWaitPassword { return object as TLAuthorizationStateWaitPassword }\nexport interface TLAuthorizationStateReady extends TLObject {\n\treadonly \"@type\": \"authorizationStateReady\"\n}\nexport function authorizationStateReady(object: TLObject): TLAuthorizationStateReady { return object as TLAuthorizationStateReady }\nexport interface TLAuthorizationStateLoggingOut extends TLObject {\n\treadonly \"@type\": \"authorizationStateLoggingOut\"\n}\nexport function authorizationStateLoggingOut(object: TLObject): TLAuthorizationStateLoggingOut { return object as TLAuthorizationStateLoggingOut }\nexport interface TLAuthorizationStateClosing extends TLObject {\n\treadonly \"@type\": \"authorizationStateClosing\"\n}\nexport function authorizationStateClosing(object: TLObject): TLAuthorizationStateClosing { return object as TLAuthorizationStateClosing }\nexport interface TLAuthorizationStateClosed extends TLObject {\n\treadonly \"@type\": \"authorizationStateClosed\"\n}\nexport function authorizationStateClosed(object: TLObject): TLAuthorizationStateClosed { return object as TLAuthorizationStateClosed }\nexport type TLAuthorizationState = TLAuthorizationStateWaitTdlibParameters | TLAuthorizationStateWaitEncryptionKey | TLAuthorizationStateWaitPhoneNumber | TLAuthorizationStateWaitCode | TLAuthorizationStateWaitOtherDeviceConfirmation | TLAuthorizationStateWaitRegistration | TLAuthorizationStateWaitPassword | TLAuthorizationStateReady | TLAuthorizationStateLoggingOut | TLAuthorizationStateClosing | TLAuthorizationStateClosed\nexport interface TLPasswordState extends TLObject {\n\treadonly \"@type\": \"passwordState\"\n\treadonly has_password: boolean\n\treadonly password_hint: string\n\treadonly has_recovery_email_address: boolean\n\treadonly has_passport_data: boolean\n\treadonly recovery_email_address_code_info: TLEmailAddressAuthenticationCodeInfo\n}\nexport function passwordState(object: TLObject): TLPasswordState { return object as TLPasswordState }\nexport interface TLRecoveryEmailAddress extends TLObject {\n\treadonly \"@type\": \"recoveryEmailAddress\"\n\treadonly recovery_email_address: string\n}\nexport function recoveryEmailAddress(object: TLObject): TLRecoveryEmailAddress { return object as TLRecoveryEmailAddress }\nexport interface TLTemporaryPasswordState extends TLObject {\n\treadonly \"@type\": \"temporaryPasswordState\"\n\treadonly has_password: boolean\n\treadonly valid_for: number\n}\nexport function temporaryPasswordState(object: TLObject): TLTemporaryPasswordState { return object as TLTemporaryPasswordState }\nexport interface TLLocalFile extends TLObject {\n\treadonly \"@type\": \"localFile\"\n\treadonly path: string\n\treadonly can_be_downloaded: boolean\n\treadonly can_be_deleted: boolean\n\treadonly is_downloading_active: boolean\n\treadonly is_downloading_completed: boolean\n\treadonly download_offset: number\n\treadonly downloaded_prefix_size: number\n\treadonly downloaded_size: number\n}\nexport function localFile(object: TLObject): TLLocalFile { return object as TLLocalFile }\nexport interface TLRemoteFile extends TLObject {\n\treadonly \"@type\": \"remoteFile\"\n\treadonly id: string\n\treadonly unique_id: string\n\treadonly is_uploading_active: boolean\n\treadonly is_uploading_completed: boolean\n\treadonly uploaded_size: number\n}\nexport function remoteFile(object: TLObject): TLRemoteFile { return object as TLRemoteFile }\nexport interface TLFile extends TLObject {\n\treadonly \"@type\": \"file\"\n\treadonly id: number\n\treadonly size: number\n\treadonly expected_size: number\n\treadonly local: TLLocalFile\n\treadonly remote: TLRemoteFile\n}\nexport function file(object: TLObject): TLFile { return object as TLFile }\nexport interface TLInputFileId extends TLObject {\n\treadonly \"@type\": \"inputFileId\"\n\treadonly id: number\n}\nexport function inputFileId(object: TLObject): TLInputFileId { return object as TLInputFileId }\nexport interface TLInputFileRemote extends TLObject {\n\treadonly \"@type\": \"inputFileRemote\"\n\treadonly id: string\n}\nexport function inputFileRemote(object: TLObject): TLInputFileRemote { return object as TLInputFileRemote }\nexport interface TLInputFileLocal extends TLObject {\n\treadonly \"@type\": \"inputFileLocal\"\n\treadonly path: string\n}\nexport function inputFileLocal(object: TLObject): TLInputFileLocal { return object as TLInputFileLocal }\nexport interface TLInputFileGenerated extends TLObject {\n\treadonly \"@type\": \"inputFileGenerated\"\n\treadonly original_path: string\n\treadonly conversion: string\n\treadonly expected_size: number\n}\nexport function inputFileGenerated(object: TLObject): TLInputFileGenerated { return object as TLInputFileGenerated }\nexport type TLInputFile = TLInputFileId | TLInputFileRemote | TLInputFileLocal | TLInputFileGenerated\nexport interface TLPhotoSize extends TLObject {\n\treadonly \"@type\": \"photoSize\"\n\treadonly type: string\n\treadonly photo: TLFile\n\treadonly width: number\n\treadonly height: number\n}\nexport function photoSize(object: TLObject): TLPhotoSize { return object as TLPhotoSize }\nexport interface TLMinithumbnail extends TLObject {\n\treadonly \"@type\": \"minithumbnail\"\n\treadonly width: number\n\treadonly height: number\n\treadonly data: Uint8Array\n}\nexport function minithumbnail(object: TLObject): TLMinithumbnail { return object as TLMinithumbnail }\nexport interface TLMaskPointForehead extends TLObject {\n\treadonly \"@type\": \"maskPointForehead\"\n}\nexport function maskPointForehead(object: TLObject): TLMaskPointForehead { return object as TLMaskPointForehead }\nexport interface TLMaskPointEyes extends TLObject {\n\treadonly \"@type\": \"maskPointEyes\"\n}\nexport function maskPointEyes(object: TLObject): TLMaskPointEyes { return object as TLMaskPointEyes }\nexport interface TLMaskPointMouth extends TLObject {\n\treadonly \"@type\": \"maskPointMouth\"\n}\nexport function maskPointMouth(object: TLObject): TLMaskPointMouth { return object as TLMaskPointMouth }\nexport interface TLMaskPointChin extends TLObject {\n\treadonly \"@type\": \"maskPointChin\"\n}\nexport function maskPointChin(object: TLObject): TLMaskPointChin { return object as TLMaskPointChin }\nexport type TLMaskPoint = TLMaskPointForehead | TLMaskPointEyes | TLMaskPointMouth | TLMaskPointChin\nexport interface TLMaskPosition extends TLObject {\n\treadonly \"@type\": \"maskPosition\"\n\treadonly point: TLMaskPoint\n\treadonly x_shift: number\n\treadonly y_shift: number\n\treadonly scale: number\n}\nexport function maskPosition(object: TLObject): TLMaskPosition { return object as TLMaskPosition }\nexport interface TLPollOption extends TLObject {\n\treadonly \"@type\": \"pollOption\"\n\treadonly text: string\n\treadonly voter_count: number\n\treadonly vote_percentage: number\n\treadonly is_chosen: boolean\n\treadonly is_being_chosen: boolean\n}\nexport function pollOption(object: TLObject): TLPollOption { return object as TLPollOption }\nexport interface TLPollTypeRegular extends TLObject {\n\treadonly \"@type\": \"pollTypeRegular\"\n\treadonly allow_multiple_answers: boolean\n}\nexport function pollTypeRegular(object: TLObject): TLPollTypeRegular { return object as TLPollTypeRegular }\nexport interface TLPollTypeQuiz extends TLObject {\n\treadonly \"@type\": \"pollTypeQuiz\"\n\treadonly correct_option_id: number\n}\nexport function pollTypeQuiz(object: TLObject): TLPollTypeQuiz { return object as TLPollTypeQuiz }\nexport type TLPollType = TLPollTypeRegular | TLPollTypeQuiz\nexport interface TLAnimation extends TLObject {\n\treadonly \"@type\": \"animation\"\n\treadonly duration: number\n\treadonly width: number\n\treadonly height: number\n\treadonly file_name: string\n\treadonly mime_type: string\n\treadonly minithumbnail: TLMinithumbnail\n\treadonly thumbnail: TLPhotoSize\n\treadonly animation: TLFile\n}\nexport function animation(object: TLObject): TLAnimation { return object as TLAnimation }\nexport interface TLAudio extends TLObject {\n\treadonly \"@type\": \"audio\"\n\treadonly duration: number\n\treadonly title: string\n\treadonly performer: string\n\treadonly file_name: string\n\treadonly mime_type: string\n\treadonly album_cover_minithumbnail: TLMinithumbnail\n\treadonly album_cover_thumbnail: TLPhotoSize\n\treadonly audio: TLFile\n}\nexport function audio(object: TLObject): TLAudio { return object as TLAudio }\nexport interface TLDocument extends TLObject {\n\treadonly \"@type\": \"document\"\n\treadonly file_name: string\n\treadonly mime_type: string\n\treadonly minithumbnail: TLMinithumbnail\n\treadonly thumbnail: TLPhotoSize\n\treadonly document: TLFile\n}\nexport function document(object: TLObject): TLDocument { return object as TLDocument }\nexport interface TLPhoto extends TLObject {\n\treadonly \"@type\": \"photo\"\n\treadonly has_stickers: boolean\n\treadonly minithumbnail: TLMinithumbnail\n\treadonly sizes: ReadonlyArray<TLPhotoSize>\n}\nexport function photo(object: TLObject): TLPhoto { return object as TLPhoto }\nexport interface TLSticker extends TLObject {\n\treadonly \"@type\": \"sticker\"\n\treadonly set_id: string\n\treadonly width: number\n\treadonly height: number\n\treadonly emoji: string\n\treadonly is_animated: boolean\n\treadonly is_mask: boolean\n\treadonly mask_position: TLMaskPosition\n\treadonly thumbnail: TLPhotoSize\n\treadonly sticker: TLFile\n}\nexport function sticker(object: TLObject): TLSticker { return object as TLSticker }\nexport interface TLVideo extends TLObject {\n\treadonly \"@type\": \"video\"\n\treadonly duration: number\n\treadonly width: number\n\treadonly height: number\n\treadonly file_name: string\n\treadonly mime_type: string\n\treadonly has_stickers: boolean\n\treadonly supports_streaming: boolean\n\treadonly minithumbnail: TLMinithumbnail\n\treadonly thumbnail: TLPhotoSize\n\treadonly video: TLFile\n}\nexport function video(object: TLObject): TLVideo { return object as TLVideo }\nexport interface TLVideoNote extends TLObject {\n\treadonly \"@type\": \"videoNote\"\n\treadonly duration: number\n\treadonly length: number\n\treadonly minithumbnail: TLMinithumbnail\n\treadonly thumbnail: TLPhotoSize\n\treadonly video: TLFile\n}\nexport function videoNote(object: TLObject): TLVideoNote { return object as TLVideoNote }\nexport interface TLVoiceNote extends TLObject {\n\treadonly \"@type\": \"voiceNote\"\n\treadonly duration: number\n\treadonly waveform: Uint8Array\n\treadonly mime_type: string\n\treadonly voice: TLFile\n}\nexport function voiceNote(object: TLObject): TLVoiceNote { return object as TLVoiceNote }\nexport interface TLContact extends TLObject {\n\treadonly \"@type\": \"contact\"\n\treadonly phone_number: string\n\treadonly first_name: string\n\treadonly last_name: string\n\treadonly vcard: string\n\treadonly user_id: number\n}\nexport function contact(object: TLObject): TLContact { return object as TLContact }\nexport interface TLLocation extends TLObject {\n\treadonly \"@type\": \"location\"\n\treadonly latitude: number\n\treadonly longitude: number\n}\nexport function location(object: TLObject): TLLocation { return object as TLLocation }\nexport interface TLVenue extends TLObject {\n\treadonly \"@type\": \"venue\"\n\treadonly location: TLLocation\n\treadonly title: string\n\treadonly address: string\n\treadonly provider: string\n\treadonly id: string\n\treadonly type: string\n}\nexport function venue(object: TLObject): TLVenue { return object as TLVenue }\nexport interface TLGame extends TLObject {\n\treadonly \"@type\": \"game\"\n\treadonly id: string\n\treadonly short_name: string\n\treadonly title: string\n\treadonly text: TLFormattedText\n\treadonly description: string\n\treadonly photo: TLPhoto\n\treadonly animation: TLAnimation\n}\nexport function game(object: TLObject): TLGame { return object as TLGame }\nexport interface TLPoll extends TLObject {\n\treadonly \"@type\": \"poll\"\n\treadonly id: string\n\treadonly question: string\n\treadonly options: ReadonlyArray<TLPollOption>\n\treadonly total_voter_count: number\n\treadonly recent_voter_user_ids: ReadonlyArray<number>\n\treadonly is_anonymous: boolean\n\treadonly type: TLPollType\n\treadonly is_closed: boolean\n}\nexport function poll(object: TLObject): TLPoll { return object as TLPoll }\nexport interface TLProfilePhoto extends TLObject {\n\treadonly \"@type\": \"profilePhoto\"\n\treadonly id: string\n\treadonly small: TLFile\n\treadonly big: TLFile\n}\nexport function profilePhoto(object: TLObject): TLProfilePhoto { return object as TLProfilePhoto }\nexport interface TLChatPhoto extends TLObject {\n\treadonly \"@type\": \"chatPhoto\"\n\treadonly small: TLFile\n\treadonly big: TLFile\n}\nexport function chatPhoto(object: TLObject): TLChatPhoto { return object as TLChatPhoto }\nexport interface TLUserTypeRegular extends TLObject {\n\treadonly \"@type\": \"userTypeRegular\"\n}\nexport function userTypeRegular(object: TLObject): TLUserTypeRegular { return object as TLUserTypeRegular }\nexport interface TLUserTypeDeleted extends TLObject {\n\treadonly \"@type\": \"userTypeDeleted\"\n}\nexport function userTypeDeleted(object: TLObject): TLUserTypeDeleted { return object as TLUserTypeDeleted }\nexport interface TLUserTypeBot extends TLObject {\n\treadonly \"@type\": \"userTypeBot\"\n\treadonly can_join_groups: boolean\n\treadonly can_read_all_group_messages: boolean\n\treadonly is_inline: boolean\n\treadonly inline_query_placeholder: string\n\treadonly need_location: boolean\n}\nexport function userTypeBot(object: TLObject): TLUserTypeBot { return object as TLUserTypeBot }\nexport interface TLUserTypeUnknown extends TLObject {\n\treadonly \"@type\": \"userTypeUnknown\"\n}\nexport function userTypeUnknown(object: TLObject): TLUserTypeUnknown { return object as TLUserTypeUnknown }\nexport type TLUserType = TLUserTypeRegular | TLUserTypeDeleted | TLUserTypeBot | TLUserTypeUnknown\nexport interface TLBotCommand extends TLObject {\n\treadonly \"@type\": \"botCommand\"\n\treadonly command: string\n\treadonly description: string\n}\nexport function botCommand(object: TLObject): TLBotCommand { return object as TLBotCommand }\nexport interface TLBotInfo extends TLObject {\n\treadonly \"@type\": \"botInfo\"\n\treadonly description: string\n\treadonly commands: ReadonlyArray<TLBotCommand>\n}\nexport function botInfo(object: TLObject): TLBotInfo { return object as TLBotInfo }\nexport interface TLChatLocation extends TLObject {\n\treadonly \"@type\": \"chatLocation\"\n\treadonly location: TLLocation\n\treadonly address: string\n}\nexport function chatLocation(object: TLObject): TLChatLocation { return object as TLChatLocation }\nexport interface TLUser extends TLObject {\n\treadonly \"@type\": \"user\"\n\treadonly id: number\n\treadonly first_name: string\n\treadonly last_name: string\n\treadonly username: string\n\treadonly phone_number: string\n\treadonly status: TLUserStatus\n\treadonly profile_photo: TLProfilePhoto\n\treadonly is_contact: boolean\n\treadonly is_mutual_contact: boolean\n\treadonly is_verified: boolean\n\treadonly is_support: boolean\n\treadonly restriction_reason: string\n\treadonly is_scam: boolean\n\treadonly have_access: boolean\n\treadonly type: TLUserType\n\treadonly language_code: string\n}\nexport function user(object: TLObject): TLUser { return object as TLUser }\nexport interface TLUserFullInfo extends TLObject {\n\treadonly \"@type\": \"userFullInfo\"\n\treadonly is_blocked: boolean\n\treadonly can_be_called: boolean\n\treadonly has_private_calls: boolean\n\treadonly need_phone_number_privacy_exception: boolean\n\treadonly bio: string\n\treadonly share_text: string\n\treadonly group_in_common_count: number\n\treadonly bot_info: TLBotInfo\n}\nexport function userFullInfo(object: TLObject): TLUserFullInfo { return object as TLUserFullInfo }\nexport interface TLUserProfilePhoto extends TLObject {\n\treadonly \"@type\": \"userProfilePhoto\"\n\treadonly id: string\n\treadonly added_date: number\n\treadonly sizes: ReadonlyArray<TLPhotoSize>\n}\nexport function userProfilePhoto(object: TLObject): TLUserProfilePhoto { return object as TLUserProfilePhoto }\nexport interface TLUserProfilePhotos extends TLObject {\n\treadonly \"@type\": \"userProfilePhotos\"\n\treadonly total_count: number\n\treadonly photos: ReadonlyArray<TLUserProfilePhoto>\n}\nexport function userProfilePhotos(object: TLObject): TLUserProfilePhotos { return object as TLUserProfilePhotos }\nexport interface TLUsers extends TLObject {\n\treadonly \"@type\": \"users\"\n\treadonly total_count: number\n\treadonly user_ids: ReadonlyArray<number>\n}\nexport function users(object: TLObject): TLUsers { return object as TLUsers }\nexport interface TLChatAdministrator extends TLObject {\n\treadonly \"@type\": \"chatAdministrator\"\n\treadonly user_id: number\n\treadonly custom_title: string\n\treadonly is_owner: boolean\n}\nexport function chatAdministrator(object: TLObject): TLChatAdministrator { return object as TLChatAdministrator }\nexport interface TLChatAdministrators extends TLObject {\n\treadonly \"@type\": \"chatAdministrators\"\n\treadonly administrators: ReadonlyArray<TLChatAdministrator>\n}\nexport function chatAdministrators(object: TLObject): TLChatAdministrators { return object as TLChatAdministrators }\nexport interface TLChatPermissions extends TLObject {\n\treadonly \"@type\": \"chatPermissions\"\n\treadonly can_send_messages: boolean\n\treadonly can_send_media_messages: boolean\n\treadonly can_send_polls: boolean\n\treadonly can_send_other_messages: boolean\n\treadonly can_add_web_page_previews: boolean\n\treadonly can_change_info: boolean\n\treadonly can_invite_users: boolean\n\treadonly can_pin_messages: boolean\n}\nexport function chatPermissions(object: TLObject): TLChatPermissions { return object as TLChatPermissions }\nexport interface TLChatMemberStatusCreator extends TLObject {\n\treadonly \"@type\": \"chatMemberStatusCreator\"\n\treadonly custom_title: string\n\treadonly is_member: boolean\n}\nexport function chatMemberStatusCreator(object: TLObject): TLChatMemberStatusCreator { return object as TLChatMemberStatusCreator }\nexport interface TLChatMemberStatusAdministrator extends TLObject {\n\treadonly \"@type\": \"chatMemberStatusAdministrator\"\n\treadonly custom_title: string\n\treadonly can_be_edited: boolean\n\treadonly can_change_info: boolean\n\treadonly can_post_messages: boolean\n\treadonly can_edit_messages: boolean\n\treadonly can_delete_messages: boolean\n\treadonly can_invite_users: boolean\n\treadonly can_restrict_members: boolean\n\treadonly can_pin_messages: boolean\n\treadonly can_promote_members: boolean\n}\nexport function chatMemberStatusAdministrator(object: TLObject): TLChatMemberStatusAdministrator { return object as TLChatMemberStatusAdministrator }\nexport interface TLChatMemberStatusMember extends TLObject {\n\treadonly \"@type\": \"chatMemberStatusMember\"\n}\nexport function chatMemberStatusMember(object: TLObject): TLChatMemberStatusMember { return object as TLChatMemberStatusMember }\nexport interface TLChatMemberStatusRestricted extends TLObject {\n\treadonly \"@type\": \"chatMemberStatusRestricted\"\n\treadonly is_member: boolean\n\treadonly restricted_until_date: number\n\treadonly permissions: TLChatPermissions\n}\nexport function chatMemberStatusRestricted(object: TLObject): TLChatMemberStatusRestricted { return object as TLChatMemberStatusRestricted }\nexport interface TLChatMemberStatusLeft extends TLObject {\n\treadonly \"@type\": \"chatMemberStatusLeft\"\n}\nexport function chatMemberStatusLeft(object: TLObject): TLChatMemberStatusLeft { return object as TLChatMemberStatusLeft }\nexport interface TLChatMemberStatusBanned extends TLObject {\n\treadonly \"@type\": \"chatMemberStatusBanned\"\n\treadonly banned_until_date: number\n}\nexport function chatMemberStatusBanned(object: TLObject): TLChatMemberStatusBanned { return object as TLChatMemberStatusBanned }\nexport type TLChatMemberStatus = TLChatMemberStatusCreator | TLChatMemberStatusAdministrator | TLChatMemberStatusMember | TLChatMemberStatusRestricted | TLChatMemberStatusLeft | TLChatMemberStatusBanned\nexport interface TLChatMember extends TLObject {\n\treadonly \"@type\": \"chatMember\"\n\treadonly user_id: number\n\treadonly inviter_user_id: number\n\treadonly joined_chat_date: number\n\treadonly status: TLChatMemberStatus\n\treadonly bot_info: TLBotInfo\n}\nexport function chatMember(object: TLObject): TLChatMember { return object as TLChatMember }\nexport interface TLChatMembers extends TLObject {\n\treadonly \"@type\": \"chatMembers\"\n\treadonly total_count: number\n\treadonly members: ReadonlyArray<TLChatMember>\n}\nexport function chatMembers(object: TLObject): TLChatMembers { return object as TLChatMembers }\nexport interface TLChatMembersFilterContacts extends TLObject {\n\treadonly \"@type\": \"chatMembersFilterContacts\"\n}\nexport function chatMembersFilterContacts(object: TLObject): TLChatMembersFilterContacts { return object as TLChatMembersFilterContacts }\nexport interface TLChatMembersFilterAdministrators extends TLObject {\n\treadonly \"@type\": \"chatMembersFilterAdministrators\"\n}\nexport function chatMembersFilterAdministrators(object: TLObject): TLChatMembersFilterAdministrators { return object as TLChatMembersFilterAdministrators }\nexport interface TLChatMembersFilterMembers extends TLObject {\n\treadonly \"@type\": \"chatMembersFilterMembers\"\n}\nexport function chatMembersFilterMembers(object: TLObject): TLChatMembersFilterMembers { return object as TLChatMembersFilterMembers }\nexport interface TLChatMembersFilterRestricted extends TLObject {\n\treadonly \"@type\": \"chatMembersFilterRestricted\"\n}\nexport function chatMembersFilterRestricted(object: TLObject): TLChatMembersFilterRestricted { return object as TLChatMembersFilterRestricted }\nexport interface TLChatMembersFilterBanned extends TLObject {\n\treadonly \"@type\": \"chatMembersFilterBanned\"\n}\nexport function chatMembersFilterBanned(object: TLObject): TLChatMembersFilterBanned { return object as TLChatMembersFilterBanned }\nexport interface TLChatMembersFilterBots extends TLObject {\n\treadonly \"@type\": \"chatMembersFilterBots\"\n}\nexport function chatMembersFilterBots(object: TLObject): TLChatMembersFilterBots { return object as TLChatMembersFilterBots }\nexport type TLChatMembersFilter = TLChatMembersFilterContacts | TLChatMembersFilterAdministrators | TLChatMembersFilterMembers | TLChatMembersFilterRestricted | TLChatMembersFilterBanned | TLChatMembersFilterBots\nexport interface TLSupergroupMembersFilterRecent extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterRecent\"\n}\nexport function supergroupMembersFilterRecent(object: TLObject): TLSupergroupMembersFilterRecent { return object as TLSupergroupMembersFilterRecent }\nexport interface TLSupergroupMembersFilterContacts extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterContacts\"\n\treadonly query: string\n}\nexport function supergroupMembersFilterContacts(object: TLObject): TLSupergroupMembersFilterContacts { return object as TLSupergroupMembersFilterContacts }\nexport interface TLSupergroupMembersFilterAdministrators extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterAdministrators\"\n}\nexport function supergroupMembersFilterAdministrators(object: TLObject): TLSupergroupMembersFilterAdministrators { return object as TLSupergroupMembersFilterAdministrators }\nexport interface TLSupergroupMembersFilterSearch extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterSearch\"\n\treadonly query: string\n}\nexport function supergroupMembersFilterSearch(object: TLObject): TLSupergroupMembersFilterSearch { return object as TLSupergroupMembersFilterSearch }\nexport interface TLSupergroupMembersFilterRestricted extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterRestricted\"\n\treadonly query: string\n}\nexport function supergroupMembersFilterRestricted(object: TLObject): TLSupergroupMembersFilterRestricted { return object as TLSupergroupMembersFilterRestricted }\nexport interface TLSupergroupMembersFilterBanned extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterBanned\"\n\treadonly query: string\n}\nexport function supergroupMembersFilterBanned(object: TLObject): TLSupergroupMembersFilterBanned { return object as TLSupergroupMembersFilterBanned }\nexport interface TLSupergroupMembersFilterBots extends TLObject {\n\treadonly \"@type\": \"supergroupMembersFilterBots\"\n}\nexport function supergroupMembersFilterBots(object: TLObject): TLSupergroupMembersFilterBots { return object as TLSupergroupMembersFilterBots }\nexport type TLSupergroupMembersFilter = TLSupergroupMembersFilterRecent | TLSupergroupMembersFilterContacts | TLSupergroupMembersFilterAdministrators | TLSupergroupMembersFilterSearch | TLSupergroupMembersFilterRestricted | TLSupergroupMembersFilterBanned | TLSupergroupMembersFilterBots\nexport interface TLBasicGroup extends TLObject {\n\treadonly \"@type\": \"basicGroup\"\n\treadonly id: number\n\treadonly member_count: number\n\treadonly status: TLChatMemberStatus\n\treadonly is_active: boolean\n\treadonly upgraded_to_supergroup_id: number\n}\nexport function basicGroup(object: TLObject): TLBasicGroup { return object as TLBasicGroup }\nexport interface TLBasicGroupFullInfo extends TLObject {\n\treadonly \"@type\": \"basicGroupFullInfo\"\n\treadonly description: string\n\treadonly creator_user_id: number\n\treadonly members: ReadonlyArray<TLChatMember>\n\treadonly invite_link: string\n}\nexport function basicGroupFullInfo(object: TLObject): TLBasicGroupFullInfo { return object as TLBasicGroupFullInfo }\nexport interface TLSupergroup extends TLObject {\n\treadonly \"@type\": \"supergroup\"\n\treadonly id: number\n\treadonly username: string\n\treadonly date: number\n\treadonly status: TLChatMemberStatus\n\treadonly member_count: number\n\treadonly has_linked_chat: boolean\n\treadonly has_location: boolean\n\treadonly sign_messages: boolean\n\treadonly is_slow_mode_enabled: boolean\n\treadonly is_channel: boolean\n\treadonly is_verified: boolean\n\treadonly restriction_reason: string\n\treadonly is_scam: boolean\n}\nexport function supergroup(object: TLObject): TLSupergroup { return object as TLSupergroup }\nexport interface TLSupergroupFullInfo extends TLObject {\n\treadonly \"@type\": \"supergroupFullInfo\"\n\treadonly description: string\n\treadonly member_count: number\n\treadonly administrator_count: number\n\treadonly restricted_count: number\n\treadonly banned_count: number\n\treadonly linked_chat_id: number\n\treadonly slow_mode_delay: number\n\treadonly slow_mode_delay_expires_in: number\n\treadonly can_get_members: boolean\n\treadonly can_set_username: boolean\n\treadonly can_set_sticker_set: boolean\n\treadonly can_set_location: boolean\n\treadonly can_view_statistics: boolean\n\treadonly is_all_history_available: boolean\n\treadonly sticker_set_id: string\n\treadonly location: TLChatLocation\n\treadonly invite_link: string\n\treadonly upgraded_from_basic_group_id: number\n\treadonly upgraded_from_max_message_id: number\n}\nexport function supergroupFullInfo(object: TLObject): TLSupergroupFullInfo { return object as TLSupergroupFullInfo }\nexport interface TLSecretChatStatePending extends TLObject {\n\treadonly \"@type\": \"secretChatStatePending\"\n}\nexport function secretChatStatePending(object: TLObject): TLSecretChatStatePending { return object as TLSecretChatStatePending }\nexport interface TLSecretChatStateReady extends TLObject {\n\treadonly \"@type\": \"secretChatStateReady\"\n}\nexport function secretChatStateReady(object: TLObject): TLSecretChatStateReady { return object as TLSecretChatStateReady }\nexport interface TLSecretChatStateClosed extends TLObject {\n\treadonly \"@type\": \"secretChatStateClosed\"\n}\nexport function secretChatStateClosed(object: TLObject): TLSecretChatStateClosed { return object as TLSecretChatStateClosed }\nexport type TLSecretChatState = TLSecretChatStatePending | TLSecretChatStateReady | TLSecretChatStateClosed\nexport interface TLSecretChat extends TLObject {\n\treadonly \"@type\": \"secretChat\"\n\treadonly id: number\n\treadonly user_id: number\n\treadonly state: TLSecretChatState\n\treadonly is_outbound: boolean\n\treadonly ttl: number\n\treadonly key_hash: Uint8Array\n\treadonly layer: number\n}\nexport function secretChat(object: TLObject): TLSecretChat { return object as TLSecretChat }\nexport interface TLMessageForwardOriginUser extends TLObject {\n\treadonly \"@type\": \"messageForwardOriginUser\"\n\treadonly sender_user_id: number\n}\nexport function messageForwardOriginUser(object: TLObject): TLMessageForwardOriginUser { return object as TLMessageForwardOriginUser }\nexport interface TLMessageForwardOriginHiddenUser extends TLObject {\n\treadonly \"@type\": \"messageForwardOriginHiddenUser\"\n\treadonly sender_name: string\n}\nexport function messageForwardOriginHiddenUser(object: TLObject): TLMessageForwardOriginHiddenUser { return object as TLMessageForwardOriginHiddenUser }\nexport interface TLMessageForwardOriginChannel extends TLObject {\n\treadonly \"@type\": \"messageForwardOriginChannel\"\n\treadonly chat_id: number\n\treadonly message_id: number\n\treadonly author_signature: string\n}\nexport function messageForwardOriginChannel(object: TLObject): TLMessageForwardOriginChannel { return object as TLMessageForwardOriginChannel }\nexport type TLMessageForwardOrigin = TLMessageForwardOriginUser | TLMessageForwardOriginHiddenUser | TLMessageForwardOriginChannel\nexport interface TLMessageForwardInfo extends TLObject {\n\treadonly \"@type\": \"messageForwardInfo\"\n\treadonly origin: TLMessageForwardOrigin\n\treadonly date: number\n\treadonly from_chat_id: number\n\treadonly from_message_id: number\n}\nexport function messageForwardInfo(object: TLObject): TLMessageForwardInfo { return object as TLMessageForwardInfo }\nexport interface TLMessageSendingStatePending extends TLObject {\n\treadonly \"@type\": \"messageSendingStatePending\"\n}\nexport function messageSendingStatePending(object: TLObject): TLMessageSendingStatePending { return object as TLMessageSendingStatePending }\nexport interface TLMessageSendingStateFailed extends TLObject {\n\treadonly \"@type\": \"messageSendingStateFailed\"\n\treadonly error_code: number\n\treadonly error_message: string\n\treadonly can_retry: boolean\n\treadonly retry_after: number\n}\nexport function messageSendingStateFailed(object: TLObject): TLMessageSendingStateFailed { return object as TLMessageSendingStateFailed }\nexport type TLMessageSendingState = TLMessageSendingStatePending | TLMessageSendingStateFailed\nexport interface TLMessage extends TLObject {\n\treadonly \"@type\": \"message\"\n\treadonly id: number\n\treadonly sender_user_id: number\n\treadonly chat_id: number\n\treadonly sending_state: TLMessageSendingState\n\treadonly scheduling_state: TLMessageSchedulingState\n\treadonly is_outgoing: boolean\n\treadonly can_be_edited: boolean\n\treadonly can_be_forwarded: boolean\n\treadonly can_be_deleted_only_for_self: boolean\n\treadonly can_be_deleted_for_all_users: boolean\n\treadonly is_channel_post: boolean\n\treadonly contains_unread_mention: boolean\n\treadonly date: number\n\treadonly edit_date: number\n\treadonly forward_info: TLMessageForwardInfo\n\treadonly reply_to_message_id: number\n\treadonly ttl: number\n\treadonly ttl_expires_in: number\n\treadonly via_bot_user_id: number\n\treadonly author_signature: string\n\treadonly views: number\n\treadonly media_album_id: string\n\treadonly restriction_reason: string\n\treadonly content: TLMessageContent\n\treadonly reply_markup: TLReplyMarkup\n}\nexport function message(object: TLObject): TLMessage { return object as TLMessage }\nexport interface TLMessages extends TLObject {\n\treadonly \"@type\": \"messages\"\n\treadonly total_count: number\n\treadonly messages: ReadonlyArray<TLMessage>\n}\nexport function messages(object: TLObject): TLMessages { return object as TLMessages }\nexport interface TLFoundMessages extends TLObject {\n\treadonly \"@type\": \"foundMessages\"\n\treadonly messages: ReadonlyArray<TLMessage>\n\treadonly next_from_search_id: string\n}\nexport function foundMessages(object: TLObject): TLFoundMessages { return object as TLFoundMessages }\nexport interface TLNotificationSettingsScopePrivateChats extends TLObject {\n\treadonly \"@type\": \"notificationSettingsScopePrivateChats\"\n}\nexport function notificationSettingsScopePrivateChats(object: TLObject): TLNotificationSettingsScopePrivateChats { return object as TLNotificationSettingsScopePrivateChats }\nexport interface TLNotificationSettingsScopeGroupChats extends TLObject {\n\treadonly \"@type\": \"notificationSettingsScopeGroupChats\"\n}\nexport function notificationSettingsScopeGroupChats(object: TLObject): TLNotificationSettingsScopeGroupChats { return object as TLNotificationSettingsScopeGroupChats }\nexport interface TLNotificationSettingsScopeChannelChats extends TLObject {\n\treadonly \"@type\": \"notificationSettingsScopeChannelChats\"\n}\nexport function notificationSettingsScopeChannelChats(object: TLObject): TLNotificationSettingsScopeChannelChats { return object as TLNotificationSettingsScopeChannelChats }\nexport type TLNotificationSettingsScope = TLNotificationSettingsScopePrivateChats | TLNotificationSettingsScopeGroupChats | TLNotificationSettingsScopeChannelChats\nexport interface TLChatNotificationSettings extends TLObject {\n\treadonly \"@type\": \"chatNotificationSettings\"\n\treadonly use_default_mute_for: boolean\n\treadonly mute_for: number\n\treadonly use_default_sound: boolean\n\treadonly sound: string\n\treadonly use_default_show_preview: boolean\n\treadonly show_preview: boolean\n\treadonly use_default_disable_pinned_message_notifications: boolean\n\treadonly disable_pinned_message_notifications: boolean\n\treadonly use_default_disable_mention_notifications: boolean\n\treadonly disable_mention_notifications: boolean\n}\nexport function chatNotificationSettings(object: TLObject): TLChatNotificationSettings { return object as TLChatNotificationSettings }\nexport interface TLScopeNotificationSettings extends TLObject {\n\treadonly \"@type\": \"scopeNotificationSettings\"\n\treadonly mute_for: number\n\treadonly sound: string\n\treadonly show_preview: boolean\n\treadonly disable_pinned_message_notifications: boolean\n\treadonly disable_mention_notifications: boolean\n}\nexport function scopeNotificationSettings(object: TLObject): TLScopeNotificationSettings { return object as TLScopeNotificationSettings }\nexport interface TLDraftMessage extends TLObject {\n\treadonly \"@type\": \"draftMessage\"\n\treadonly reply_to_message_id: number\n\treadonly input_message_text: TLInputMessageContent\n}\nexport function draftMessage(object: TLObject): TLDraftMessage { return object as TLDraftMessage }\nexport interface TLChatTypePrivate extends TLObject {\n\treadonly \"@type\": \"chatTypePrivate\"\n\treadonly user_id: number\n}\nexport function chatTypePrivate(object: TLObject): TLChatTypePrivate { return object as TLChatTypePrivate }\nexport interface TLChatTypeBasicGroup extends TLObject {\n\treadonly \"@type\": \"chatTypeBasicGroup\"\n\treadonly basic_group_id: number\n}\nexport function chatTypeBasicGroup(object: TLObject): TLChatTypeBasicGroup { return object as TLChatTypeBasicGroup }\nexport interface TLChatTypeSupergroup extends TLObject {\n\treadonly \"@type\": \"chatTypeSupergroup\"\n\treadonly supergroup_id: number\n\treadonly is_channel: boolean\n}\nexport function chatTypeSupergroup(object: TLObject): TLChatTypeSupergroup { return object as TLChatTypeSupergroup }\nexport interface TLChatTypeSecret extends TLObject {\n\treadonly \"@type\": \"chatTypeSecret\"\n\treadonly secret_chat_id: number\n\treadonly user_id: number\n}\nexport function chatTypeSecret(object: TLObject): TLChatTypeSecret { return object as TLChatTypeSecret }\nexport type TLChatType = TLChatTypePrivate | TLChatTypeBasicGroup | TLChatTypeSupergroup | TLChatTypeSecret\nexport interface TLChatListMain extends TLObject {\n\treadonly \"@type\": \"chatListMain\"\n}\nexport function chatListMain(object: TLObject): TLChatListMain { return object as TLChatListMain }\nexport interface TLChatListArchive extends TLObject {\n\treadonly \"@type\": \"chatListArchive\"\n}\nexport function chatListArchive(object: TLObject): TLChatListArchive { return object as TLChatListArchive }\nexport type TLChatList = TLChatListMain | TLChatListArchive\nexport interface TLChat extends TLObject {\n\treadonly \"@type\": \"chat\"\n\treadonly id: number\n\treadonly type: TLChatType\n\treadonly chat_list: TLChatList\n\treadonly title: string\n\treadonly photo: TLChatPhoto\n\treadonly permissions: TLChatPermissions\n\treadonly last_message: TLMessage\n\treadonly order: string\n\treadonly is_pinned: boolean\n\treadonly is_marked_as_unread: boolean\n\treadonly is_sponsored: boolean\n\treadonly has_scheduled_messages: boolean\n\treadonly can_be_deleted_only_for_self: boolean\n\treadonly can_be_deleted_for_all_users: boolean\n\treadonly can_be_reported: boolean\n\treadonly default_disable_notification: boolean\n\treadonly unread_count: number\n\treadonly last_read_inbox_message_id: number\n\treadonly last_read_outbox_message_id: number\n\treadonly unread_mention_count: number\n\treadonly notification_settings: TLChatNotificationSettings\n\treadonly action_bar: TLChatActionBar\n\treadonly pinned_message_id: number\n\treadonly reply_markup_message_id: number\n\treadonly draft_message: TLDraftMessage\n\treadonly client_data: string\n}\nexport function chat(object: TLObject): TLChat { return object as TLChat }\nexport interface TLChats extends TLObject {\n\treadonly \"@type\": \"chats\"\n\treadonly chat_ids: ReadonlyArray<number>\n}\nexport function chats(object: TLObject): TLChats { return object as TLChats }\nexport interface TLChatNearby extends TLObject {\n\treadonly \"@type\": \"chatNearby\"\n\treadonly chat_id: number\n\treadonly distance: number\n}\nexport function chatNearby(object: TLObject): TLChatNearby { return object as TLChatNearby }\nexport interface TLChatsNearby extends TLObject {\n\treadonly \"@type\": \"chatsNearby\"\n\treadonly users_nearby: ReadonlyArray<TLChatNearby>\n\treadonly supergroups_nearby: ReadonlyArray<TLChatNearby>\n}\nexport function chatsNearby(object: TLObject): TLChatsNearby { return object as TLChatsNearby }\nexport interface TLChatInviteLink extends TLObject {\n\treadonly \"@type\": \"chatInviteLink\"\n\treadonly invite_link: string\n}\nexport function chatInviteLink(object: TLObject): TLChatInviteLink { return object as TLChatInviteLink }\nexport interface TLChatInviteLinkInfo extends TLObject {\n\treadonly \"@type\": \"chatInviteLinkInfo\"\n\treadonly chat_id: number\n\treadonly type: TLChatType\n\treadonly title: string\n\treadonly photo: TLChatPhoto\n\treadonly member_count: number\n\treadonly member_user_ids: ReadonlyArray<number>\n\treadonly is_public: boolean\n}\nexport function chatInviteLinkInfo(object: TLObject): TLChatInviteLinkInfo { return object as TLChatInviteLinkInfo }\nexport interface TLPublicChatTypeHasUsername extends TLObject {\n\treadonly \"@type\": \"publicChatTypeHasUsername\"\n}\nexport function publicChatTypeHasUsername(object: TLObject): TLPublicChatTypeHasUsername { return object as TLPublicChatTypeHasUsername }\nexport interface TLPublicChatTypeIsLocationBased extends TLObject {\n\treadonly \"@type\": \"publicChatTypeIsLocationBased\"\n}\nexport function publicChatTypeIsLocationBased(object: TLObject): TLPublicChatTypeIsLocationBased { return object as TLPublicChatTypeIsLocationBased }\nexport type TLPublicChatType = TLPublicChatTypeHasUsername | TLPublicChatTypeIsLocationBased\nexport interface TLChatActionBarReportSpam extends TLObject {\n\treadonly \"@type\": \"chatActionBarReportSpam\"\n}\nexport function chatActionBarReportSpam(object: TLObject): TLChatActionBarReportSpam { return object as TLChatActionBarReportSpam }\nexport interface TLChatActionBarReportUnrelatedLocation extends TLObject {\n\treadonly \"@type\": \"chatActionBarReportUnrelatedLocation\"\n}\nexport function chatActionBarReportUnrelatedLocation(object: TLObject): TLChatActionBarReportUnrelatedLocation { return object as TLChatActionBarReportUnrelatedLocation }\nexport interface TLChatActionBarReportAddBlock extends TLObject {\n\treadonly \"@type\": \"chatActionBarReportAddBlock\"\n}\nexport function chatActionBarReportAddBlock(object: TLObject): TLChatActionBarReportAddBlock { return object as TLChatActionBarReportAddBlock }\nexport interface TLChatActionBarAddContact extends TLObject {\n\treadonly \"@type\": \"chatActionBarAddContact\"\n}\nexport function chatActionBarAddContact(object: TLObject): TLChatActionBarAddContact { return object as TLChatActionBarAddContact }\nexport interface TLChatActionBarSharePhoneNumber extends TLObject {\n\treadonly \"@type\": \"chatActionBarSharePhoneNumber\"\n}\nexport function chatActionBarSharePhoneNumber(object: TLObject): TLChatActionBarSharePhoneNumber { return object as TLChatActionBarSharePhoneNumber }\nexport type TLChatActionBar = TLChatActionBarReportSpam | TLChatActionBarReportUnrelatedLocation | TLChatActionBarReportAddBlock | TLChatActionBarAddContact | TLChatActionBarSharePhoneNumber\nexport interface TLKeyboardButtonTypeText extends TLObject {\n\treadonly \"@type\": \"keyboardButtonTypeText\"\n}\nexport function keyboardButtonTypeText(object: TLObject): TLKeyboardButtonTypeText { return object as TLKeyboardButtonTypeText }\nexport interface TLKeyboardButtonTypeRequestPhoneNumber extends TLObject {\n\treadonly \"@type\": \"keyboardButtonTypeRequestPhoneNumber\"\n}\nexport function keyboardButtonTypeRequestPhoneNumber(object: TLObject): TLKeyboardButtonTypeRequestPhoneNumber { return object as TLKeyboardButtonTypeRequestPhoneNumber }\nexport interface TLKeyboardButtonTypeRequestLocation extends TLObject {\n\treadonly \"@type\": \"keyboardButtonTypeRequestLocation\"\n}\nexport function keyboardButtonTypeRequestLocation(object: TLObject): TLKeyboardButtonTypeRequestLocation { return object as TLKeyboardButtonTypeRequestLocation }\nexport interface TLKeyboardButtonTypeRequestPoll extends TLObject {\n\treadonly \"@type\": \"keyboardButtonTypeRequestPoll\"\n\treadonly force_regular: boolean\n\treadonly force_quiz: boolean\n}\nexport function keyboardButtonTypeRequestPoll(object: TLObject): TLKeyboardButtonTypeRequestPoll { return object as TLKeyboardButtonTypeRequestPoll }\nexport type TLKeyboardButtonType = TLKeyboardButtonTypeText | TLKeyboardButtonTypeRequestPhoneNumber | TLKeyboardButtonTypeRequestLocation | TLKeyboardButtonTypeRequestPoll\nexport interface TLKeyboardButton extends TLObject {\n\treadonly \"@type\": \"keyboardButton\"\n\treadonly text: string\n\treadonly type: TLKeyboardButtonType\n}\nexport function keyboardButton(object: TLObject): TLKeyboardButton { return object as TLKeyboardButton }\nexport interface TLInlineKeyboardButtonTypeUrl extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButtonTypeUrl\"\n\treadonly url: string\n}\nexport function inlineKeyboardButtonTypeUrl(object: TLObject): TLInlineKeyboardButtonTypeUrl { return object as TLInlineKeyboardButtonTypeUrl }\nexport interface TLInlineKeyboardButtonTypeLoginUrl extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButtonTypeLoginUrl\"\n\treadonly url: string\n\treadonly id: number\n\treadonly forward_text: string\n}\nexport function inlineKeyboardButtonTypeLoginUrl(object: TLObject): TLInlineKeyboardButtonTypeLoginUrl { return object as TLInlineKeyboardButtonTypeLoginUrl }\nexport interface TLInlineKeyboardButtonTypeCallback extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButtonTypeCallback\"\n\treadonly data: Uint8Array\n}\nexport function inlineKeyboardButtonTypeCallback(object: TLObject): TLInlineKeyboardButtonTypeCallback { return object as TLInlineKeyboardButtonTypeCallback }\nexport interface TLInlineKeyboardButtonTypeCallbackGame extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButtonTypeCallbackGame\"\n}\nexport function inlineKeyboardButtonTypeCallbackGame(object: TLObject): TLInlineKeyboardButtonTypeCallbackGame { return object as TLInlineKeyboardButtonTypeCallbackGame }\nexport interface TLInlineKeyboardButtonTypeSwitchInline extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButtonTypeSwitchInline\"\n\treadonly query: string\n\treadonly in_current_chat: boolean\n}\nexport function inlineKeyboardButtonTypeSwitchInline(object: TLObject): TLInlineKeyboardButtonTypeSwitchInline { return object as TLInlineKeyboardButtonTypeSwitchInline }\nexport interface TLInlineKeyboardButtonTypeBuy extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButtonTypeBuy\"\n}\nexport function inlineKeyboardButtonTypeBuy(object: TLObject): TLInlineKeyboardButtonTypeBuy { return object as TLInlineKeyboardButtonTypeBuy }\nexport type TLInlineKeyboardButtonType = TLInlineKeyboardButtonTypeUrl | TLInlineKeyboardButtonTypeLoginUrl | TLInlineKeyboardButtonTypeCallback | TLInlineKeyboardButtonTypeCallbackGame | TLInlineKeyboardButtonTypeSwitchInline | TLInlineKeyboardButtonTypeBuy\nexport interface TLInlineKeyboardButton extends TLObject {\n\treadonly \"@type\": \"inlineKeyboardButton\"\n\treadonly text: string\n\treadonly type: TLInlineKeyboardButtonType\n}\nexport function inlineKeyboardButton(object: TLObject): TLInlineKeyboardButton { return object as TLInlineKeyboardButton }\nexport interface TLReplyMarkupRemoveKeyboard extends TLObject {\n\treadonly \"@type\": \"replyMarkupRemoveKeyboard\"\n\treadonly is_personal: boolean\n}\nexport function replyMarkupRemoveKeyboard(object: TLObject): TLReplyMarkupRemoveKeyboard { return object as TLReplyMarkupRemoveKeyboard }\nexport interface TLReplyMarkupForceReply extends TLObject {\n\treadonly \"@type\": \"replyMarkupForceReply\"\n\treadonly is_personal: boolean\n}\nexport function replyMarkupForceReply(object: TLObject): TLReplyMarkupForceReply { return object as TLReplyMarkupForceReply }\nexport interface TLReplyMarkupShowKeyboard extends TLObject {\n\treadonly \"@type\": \"replyMarkupShowKeyboard\"\n\treadonly rows: ReadonlyArray<ReadonlyArray<TLKeyboardButton>>\n\treadonly resize_keyboard: boolean\n\treadonly one_time: boolean\n\treadonly is_personal: boolean\n}\nexport function replyMarkupShowKeyboard(object: TLObject): TLReplyMarkupShowKeyboard { return object as TLReplyMarkupShowKeyboard }\nexport interface TLReplyMarkupInlineKeyboard extends TLObject {\n\treadonly \"@type\": \"replyMarkupInlineKeyboard\"\n\treadonly rows: ReadonlyArray<ReadonlyArray<TLInlineKeyboardButton>>\n}\nexport function replyMarkupInlineKeyboard(object: TLObject): TLReplyMarkupInlineKeyboard { return object as TLReplyMarkupInlineKeyboard }\nexport type TLReplyMarkup = TLReplyMarkupRemoveKeyboard | TLReplyMarkupForceReply | TLReplyMarkupShowKeyboard | TLReplyMarkupInlineKeyboard\nexport interface TLLoginUrlInfoOpen extends TLObject {\n\treadonly \"@type\": \"loginUrlInfoOpen\"\n\treadonly url: string\n\treadonly skip_confirm: boolean\n}\nexport function loginUrlInfoOpen(object: TLObject): TLLoginUrlInfoOpen { return object as TLLoginUrlInfoOpen }\nexport interface TLLoginUrlInfoRequestConfirmation extends TLObject {\n\treadonly \"@type\": \"loginUrlInfoRequestConfirmation\"\n\treadonly url: string\n\treadonly domain: string\n\treadonly bot_user_id: number\n\treadonly request_write_access: boolean\n}\nexport function loginUrlInfoRequestConfirmation(object: TLObject): TLLoginUrlInfoRequestConfirmation { return object as TLLoginUrlInfoRequestConfirmation }\nexport type TLLoginUrlInfo = TLLoginUrlInfoOpen | TLLoginUrlInfoRequestConfirmation\nexport interface TLRichTextPlain extends TLObject {\n\treadonly \"@type\": \"richTextPlain\"\n\treadonly text: string\n}\nexport function richTextPlain(object: TLObject): TLRichTextPlain { return object as TLRichTextPlain }\nexport interface TLRichTextBold extends TLObject {\n\treadonly \"@type\": \"richTextBold\"\n\treadonly text: TLRichText\n}\nexport function richTextBold(object: TLObject): TLRichTextBold { return object as TLRichTextBold }\nexport interface TLRichTextItalic extends TLObject {\n\treadonly \"@type\": \"richTextItalic\"\n\treadonly text: TLRichText\n}\nexport function richTextItalic(object: TLObject): TLRichTextItalic { return object as TLRichTextItalic }\nexport interface TLRichTextUnderline extends TLObject {\n\treadonly \"@type\": \"richTextUnderline\"\n\treadonly text: TLRichText\n}\nexport function richTextUnderline(object: TLObject): TLRichTextUnderline { return object as TLRichTextUnderline }\nexport interface TLRichTextStrikethrough extends TLObject {\n\treadonly \"@type\": \"richTextStrikethrough\"\n\treadonly text: TLRichText\n}\nexport function richTextStrikethrough(object: TLObject): TLRichTextStrikethrough { return object as TLRichTextStrikethrough }\nexport interface TLRichTextFixed extends TLObject {\n\treadonly \"@type\": \"richTextFixed\"\n\treadonly text: TLRichText\n}\nexport function richTextFixed(object: TLObject): TLRichTextFixed { return object as TLRichTextFixed }\nexport interface TLRichTextUrl extends TLObject {\n\treadonly \"@type\": \"richTextUrl\"\n\treadonly text: TLRichText\n\treadonly url: string\n\treadonly is_cached: boolean\n}\nexport function richTextUrl(object: TLObject): TLRichTextUrl { return object as TLRichTextUrl }\nexport interface TLRichTextEmailAddress extends TLObject {\n\treadonly \"@type\": \"richTextEmailAddress\"\n\treadonly text: TLRichText\n\treadonly email_address: string\n}\nexport function richTextEmailAddress(object: TLObject): TLRichTextEmailAddress { return object as TLRichTextEmailAddress }\nexport interface TLRichTextSubscript extends TLObject {\n\treadonly \"@type\": \"richTextSubscript\"\n\treadonly text: TLRichText\n}\nexport function richTextSubscript(object: TLObject): TLRichTextSubscript { return object as TLRichTextSubscript }\nexport interface TLRichTextSuperscript extends TLObject {\n\treadonly \"@type\": \"richTextSuperscript\"\n\treadonly text: TLRichText\n}\nexport function richTextSuperscript(object: TLObject): TLRichTextSuperscript { return object as TLRichTextSuperscript }\nexport interface TLRichTextMarked extends TLObject {\n\treadonly \"@type\": \"richTextMarked\"\n\treadonly text: TLRichText\n}\nexport function richTextMarked(object: TLObject): TLRichTextMarked { return object as TLRichTextMarked }\nexport interface TLRichTextPhoneNumber extends TLObject {\n\treadonly \"@type\": \"richTextPhoneNumber\"\n\treadonly text: TLRichText\n\treadonly phone_number: string\n}\nexport function richTextPhoneNumber(object: TLObject): TLRichTextPhoneNumber { return object as TLRichTextPhoneNumber }\nexport interface TLRichTextIcon extends TLObject {\n\treadonly \"@type\": \"richTextIcon\"\n\treadonly document: TLDocument\n\treadonly width: number\n\treadonly height: number\n}\nexport function richTextIcon(object: TLObject): TLRichTextIcon { return object as TLRichTextIcon }\nexport interface TLRichTextAnchor extends TLObject {\n\treadonly \"@type\": \"richTextAnchor\"\n\treadonly text: TLRichText\n\treadonly name: string\n}\nexport function richTextAnchor(object: TLObject): TLRichTextAnchor { return object as TLRichTextAnchor }\nexport interface TLRichTexts extends TLObject {\n\treadonly \"@type\": \"richTexts\"\n\treadonly texts: ReadonlyArray<TLRichText>\n}\nexport function richTexts(object: TLObject): TLRichTexts { return object as TLRichTexts }\nexport type TLRichText = TLRichTextPlain | TLRichTextBold | TLRichTextItalic | TLRichTextUnderline | TLRichTextStrikethrough | TLRichTextFixed | TLRichTextUrl | TLRichTextEmailAddress | TLRichTextSubscript | TLRichTextSuperscript | TLRichTextMarked | TLRichTextPhoneNumber | TLRichTextIcon | TLRichTextAnchor | TLRichTexts\nexport interface TLPageBlockCaption extends TLObject {\n\treadonly \"@type\": \"pageBlockCaption\"\n\treadonly text: TLRichText\n\treadonly credit: TLRichText\n}\nexport function pageBlockCaption(object: TLObject): TLPageBlockCaption { return object as TLPageBlockCaption }\nexport interface TLPageBlockListItem extends TLObject {\n\treadonly \"@type\": \"pageBlockListItem\"\n\treadonly label: string\n\treadonly page_blocks: ReadonlyArray<TLPageBlock>\n}\nexport function pageBlockListItem(object: TLObject): TLPageBlockListItem { return object as TLPageBlockListItem }\nexport interface TLPageBlockHorizontalAlignmentLeft extends TLObject {\n\treadonly \"@type\": \"pageBlockHorizontalAlignmentLeft\"\n}\nexport function pageBlockHorizontalAlignmentLeft(object: TLObject): TLPageBlockHorizontalAlignmentLeft { return object as TLPageBlockHorizontalAlignmentLeft }\nexport interface TLPageBlockHorizontalAlignmentCenter extends TLObject {\n\treadonly \"@type\": \"pageBlockHorizontalAlignmentCenter\"\n}\nexport function pageBlockHorizontalAlignmentCenter(object: TLObject): TLPageBlockHorizontalAlignmentCenter { return object as TLPageBlockHorizontalAlignmentCenter }\nexport interface TLPageBlockHorizontalAlignmentRight extends TLObject {\n\treadonly \"@type\": \"pageBlockHorizontalAlignmentRight\"\n}\nexport function pageBlockHorizontalAlignmentRight(object: TLObject): TLPageBlockHorizontalAlignmentRight { return object as TLPageBlockHorizontalAlignmentRight }\nexport type TLPageBlockHorizontalAlignment = TLPageBlockHorizontalAlignmentLeft | TLPageBlockHorizontalAlignmentCenter | TLPageBlockHorizontalAlignmentRight\nexport interface TLPageBlockVerticalAlignmentTop extends TLObject {\n\treadonly \"@type\": \"pageBlockVerticalAlignmentTop\"\n}\nexport function pageBlockVerticalAlignmentTop(object: TLObject): TLPageBlockVerticalAlignmentTop { return object as TLPageBlockVerticalAlignmentTop }\nexport interface TLPageBlockVerticalAlignmentMiddle extends TLObject {\n\treadonly \"@type\": \"pageBlockVerticalAlignmentMiddle\"\n}\nexport function pageBlockVerticalAlignmentMiddle(object: TLObject): TLPageBlockVerticalAlignmentMiddle { return object as TLPageBlockVerticalAlignmentMiddle }\nexport interface TLPageBlockVerticalAlignmentBottom extends TLObject {\n\treadonly \"@type\": \"pageBlockVerticalAlignmentBottom\"\n}\nexport function pageBlockVerticalAlignmentBottom(object: TLObject): TLPageBlockVerticalAlignmentBottom { return object as TLPageBlockVerticalAlignmentBottom }\nexport type TLPageBlockVerticalAlignment = TLPageBlockVerticalAlignmentTop | TLPageBlockVerticalAlignmentMiddle | TLPageBlockVerticalAlignmentBottom\nexport interface TLPageBlockTableCell extends TLObject {\n\treadonly \"@type\": \"pageBlockTableCell\"\n\treadonly text: TLRichText\n\treadonly is_header: boolean\n\treadonly colspan: number\n\treadonly rowspan: number\n\treadonly align: TLPageBlockHorizontalAlignment\n\treadonly valign: TLPageBlockVerticalAlignment\n}\nexport function pageBlockTableCell(object: TLObject): TLPageBlockTableCell { return object as TLPageBlockTableCell }\nexport interface TLPageBlockRelatedArticle extends TLObject {\n\treadonly \"@type\": \"pageBlockRelatedArticle\"\n\treadonly url: string\n\treadonly title: string\n\treadonly description: string\n\treadonly photo: TLPhoto\n\treadonly author: string\n\treadonly publish_date: number\n}\nexport function pageBlockRelatedArticle(object: TLObject): TLPageBlockRelatedArticle { return object as TLPageBlockRelatedArticle }\nexport interface TLPageBlockTitle extends TLObject {\n\treadonly \"@type\": \"pageBlockTitle\"\n\treadonly title: TLRichText\n}\nexport function pageBlockTitle(object: TLObject): TLPageBlockTitle { return object as TLPageBlockTitle }\nexport interface TLPageBlockSubtitle extends TLObject {\n\treadonly \"@type\": \"pageBlockSubtitle\"\n\treadonly subtitle: TLRichText\n}\nexport function pageBlockSubtitle(object: TLObject): TLPageBlockSubtitle { return object as TLPageBlockSubtitle }\nexport interface TLPageBlockAuthorDate extends TLObject {\n\treadonly \"@type\": \"pageBlockAuthorDate\"\n\treadonly author: TLRichText\n\treadonly publish_date: number\n}\nexport function pageBlockAuthorDate(object: TLObject): TLPageBlockAuthorDate { return object as TLPageBlockAuthorDate }\nexport interface TLPageBlockHeader extends TLObject {\n\treadonly \"@type\": \"pageBlockHeader\"\n\treadonly header: TLRichText\n}\nexport function pageBlockHeader(object: TLObject): TLPageBlockHeader { return object as TLPageBlockHeader }\nexport interface TLPageBlockSubheader extends TLObject {\n\treadonly \"@type\": \"pageBlockSubheader\"\n\treadonly subheader: TLRichText\n}\nexport function pageBlockSubheader(object: TLObject): TLPageBlockSubheader { return object as TLPageBlockSubheader }\nexport interface TLPageBlockKicker extends TLObject {\n\treadonly \"@type\": \"pageBlockKicker\"\n\treadonly kicker: TLRichText\n}\nexport function pageBlockKicker(object: TLObject): TLPageBlockKicker { return object as TLPageBlockKicker }\nexport interface TLPageBlockParagraph extends TLObject {\n\treadonly \"@type\": \"pageBlockParagraph\"\n\treadonly text: TLRichText\n}\nexport function pageBlockParagraph(object: TLObject): TLPageBlockParagraph { return object as TLPageBlockParagraph }\nexport interface TLPageBlockPreformatted extends TLObject {\n\treadonly \"@type\": \"pageBlockPreformatted\"\n\treadonly text: TLRichText\n\treadonly language: string\n}\nexport function pageBlockPreformatted(object: TLObject): TLPageBlockPreformatted { return object as TLPageBlockPreformatted }\nexport interface TLPageBlockFooter extends TLObject {\n\treadonly \"@type\": \"pageBlockFooter\"\n\treadonly footer: TLRichText\n}\nexport function pageBlockFooter(object: TLObject): TLPageBlockFooter { return object as TLPageBlockFooter }\nexport interface TLPageBlockDivider extends TLObject {\n\treadonly \"@type\": \"pageBlockDivider\"\n}\nexport function pageBlockDivider(object: TLObject): TLPageBlockDivider { return object as TLPageBlockDivider }\nexport interface TLPageBlockAnchor extends TLObject {\n\treadonly \"@type\": \"pageBlockAnchor\"\n\treadonly name: string\n}\nexport function pageBlockAnchor(object: TLObject): TLPageBlockAnchor { return object as TLPageBlockAnchor }\nexport interface TLPageBlockList extends TLObject {\n\treadonly \"@type\": \"pageBlockList\"\n\treadonly items: ReadonlyArray<TLPageBlockListItem>\n}\nexport function pageBlockList(object: TLObject): TLPageBlockList { return object as TLPageBlockList }\nexport interface TLPageBlockBlockQuote extends TLObject {\n\treadonly \"@type\": \"pageBlockBlockQuote\"\n\treadonly text: TLRichText\n\treadonly credit: TLRichText\n}\nexport function pageBlockBlockQuote(object: TLObject): TLPageBlockBlockQuote { return object as TLPageBlockBlockQuote }\nexport interface TLPageBlockPullQuote extends TLObject {\n\treadonly \"@type\": \"pageBlockPullQuote\"\n\treadonly text: TLRichText\n\treadonly credit: TLRichText\n}\nexport function pageBlockPullQuote(object: TLObject): TLPageBlockPullQuote { return object as TLPageBlockPullQuote }\nexport interface TLPageBlockAnimation extends TLObject {\n\treadonly \"@type\": \"pageBlockAnimation\"\n\treadonly animation: TLAnimation\n\treadonly caption: TLPageBlockCaption\n\treadonly need_autoplay: boolean\n}\nexport function pageBlockAnimation(object: TLObject): TLPageBlockAnimation { return object as TLPageBlockAnimation }\nexport interface TLPageBlockAudio extends TLObject {\n\treadonly \"@type\": \"pageBlockAudio\"\n\treadonly audio: TLAudio\n\treadonly caption: TLPageBlockCaption\n}\nexport function pageBlockAudio(object: TLObject): TLPageBlockAudio { return object as TLPageBlockAudio }\nexport interface TLPageBlockPhoto extends TLObject {\n\treadonly \"@type\": \"pageBlockPhoto\"\n\treadonly photo: TLPhoto\n\treadonly caption: TLPageBlockCaption\n\treadonly url: string\n}\nexport function pageBlockPhoto(object: TLObject): TLPageBlockPhoto { return object as TLPageBlockPhoto }\nexport interface TLPageBlockVideo extends TLObject {\n\treadonly \"@type\": \"pageBlockVideo\"\n\treadonly video: TLVideo\n\treadonly caption: TLPageBlockCaption\n\treadonly need_autoplay: boolean\n\treadonly is_looped: boolean\n}\nexport function pageBlockVideo(object: TLObject): TLPageBlockVideo { return object as TLPageBlockVideo }\nexport interface TLPageBlockVoiceNote extends TLObject {\n\treadonly \"@type\": \"pageBlockVoiceNote\"\n\treadonly voice_note: TLVoiceNote\n\treadonly caption: TLPageBlockCaption\n}\nexport function pageBlockVoiceNote(object: TLObject): TLPageBlockVoiceNote { return object as TLPageBlockVoiceNote }\nexport interface TLPageBlockCover extends TLObject {\n\treadonly \"@type\": \"pageBlockCover\"\n\treadonly cover: TLPageBlock\n}\nexport function pageBlockCover(object: TLObject): TLPageBlockCover { return object as TLPageBlockCover }\nexport interface TLPageBlockEmbedded extends TLObject {\n\treadonly \"@type\": \"pageBlockEmbedded\"\n\treadonly url: string\n\treadonly html: string\n\treadonly poster_photo: TLPhoto\n\treadonly width: number\n\treadonly height: number\n\treadonly caption: TLPageBlockCaption\n\treadonly is_full_width: boolean\n\treadonly allow_scrolling: boolean\n}\nexport function pageBlockEmbedded(object: TLObject): TLPageBlockEmbedded { return object as TLPageBlockEmbedded }\nexport interface TLPageBlockEmbeddedPost extends TLObject {\n\treadonly \"@type\": \"pageBlockEmbeddedPost\"\n\treadonly url: string\n\treadonly author: string\n\treadonly author_photo: TLPhoto\n\treadonly date: number\n\treadonly page_blocks: ReadonlyArray<TLPageBlock>\n\treadonly caption: TLPageBlockCaption\n}\nexport function pageBlockEmbeddedPost(object: TLObject): TLPageBlockEmbeddedPost { return object as TLPageBlockEmbeddedPost }\nexport interface TLPageBlockCollage extends TLObject {\n\treadonly \"@type\": \"pageBlockCollage\"\n\treadonly page_blocks: ReadonlyArray<TLPageBlock>\n\treadonly caption: TLPageBlockCaption\n}\nexport function pageBlockCollage(object: TLObject): TLPageBlockCollage { return object as TLPageBlockCollage }\nexport interface TLPageBlockSlideshow extends TLObject {\n\treadonly \"@type\": \"pageBlockSlideshow\"\n\treadonly page_blocks: ReadonlyArray<TLPageBlock>\n\treadonly caption: TLPageBlockCaption\n}\nexport function pageBlockSlideshow(object: TLObject): TLPageBlockSlideshow { return object as TLPageBlockSlideshow }\nexport interface TLPageBlockChatLink extends TLObject {\n\treadonly \"@type\": \"pageBlockChatLink\"\n\treadonly title: string\n\treadonly photo: TLChatPhoto\n\treadonly username: string\n}\nexport function pageBlockChatLink(object: TLObject): TLPageBlockChatLink { return object as TLPageBlockChatLink }\nexport interface TLPageBlockTable extends TLObject {\n\treadonly \"@type\": \"pageBlockTable\"\n\treadonly caption: TLRichText\n\treadonly cells: ReadonlyArray<ReadonlyArray<TLPageBlockTableCell>>\n\treadonly is_bordered: boolean\n\treadonly is_striped: boolean\n}\nexport function pageBlockTable(object: TLObject): TLPageBlockTable { return object as TLPageBlockTable }\nexport interface TLPageBlockDetails extends TLObject {\n\treadonly \"@type\": \"pageBlockDetails\"\n\treadonly header: TLRichText\n\treadonly page_blocks: ReadonlyArray<TLPageBlock>\n\treadonly is_open: boolean\n}\nexport function pageBlockDetails(object: TLObject): TLPageBlockDetails { return object as TLPageBlockDetails }\nexport interface TLPageBlockRelatedArticles extends TLObject {\n\treadonly \"@type\": \"pageBlockRelatedArticles\"\n\treadonly header: TLRichText\n\treadonly articles: ReadonlyArray<TLPageBlockRelatedArticle>\n}\nexport function pageBlockRelatedArticles(object: TLObject): TLPageBlockRelatedArticles { return object as TLPageBlockRelatedArticles }\nexport interface TLPageBlockMap extends TLObject {\n\treadonly \"@type\": \"pageBlockMap\"\n\treadonly location: TLLocation\n\treadonly zoom: number\n\treadonly width: number\n\treadonly height: number\n\treadonly caption: TLPageBlockCaption\n}\nexport function pageBlockMap(object: TLObject): TLPageBlockMap { return object as TLPageBlockMap }\nexport type TLPageBlock = TLPageBlockTitle | TLPageBlockSubtitle | TLPageBlockAuthorDate | TLPageBlockHeader | TLPageBlockSubheader | TLPageBlockKicker | TLPageBlockParagraph | TLPageBlockPreformatted | TLPageBlockFooter | TLPageBlockDivider | TLPageBlockAnchor | TLPageBlockList | TLPageBlockBlockQuote | TLPageBlockPullQuote | TLPageBlockAnimation | TLPageBlockAudio | TLPageBlockPhoto | TLPageBlockVideo | TLPageBlockVoiceNote | TLPageBlockCover | TLPageBlockEmbedded | TLPageBlockEmbeddedPost | TLPageBlockCollage | TLPageBlockSlideshow | TLPageBlockChatLink | TLPageBlockTable | TLPageBlockDetails | TLPageBlockRelatedArticles | TLPageBlockMap\nexport interface TLWebPageInstantView extends TLObject {\n\treadonly \"@type\": \"webPageInstantView\"\n\treadonly page_blocks: ReadonlyArray<TLPageBlock>\n\treadonly version: number\n\treadonly url: string\n\treadonly is_rtl: boolean\n\treadonly is_full: boolean\n}\nexport function webPageInstantView(object: TLObject): TLWebPageInstantView { return object as TLWebPageInstantView }\nexport interface TLWebPage extends TLObject {\n\treadonly \"@type\": \"webPage\"\n\treadonly url: string\n\treadonly display_url: string\n\treadonly type: string\n\treadonly site_name: string\n\treadonly title: string\n\treadonly description: string\n\treadonly photo: TLPhoto\n\treadonly embed_url: string\n\treadonly embed_type: string\n\treadonly embed_width: number\n\treadonly embed_height: number\n\treadonly duration: number\n\treadonly author: string\n\treadonly animation: TLAnimation\n\treadonly audio: TLAudio\n\treadonly document: TLDocument\n\treadonly sticker: TLSticker\n\treadonly video: TLVideo\n\treadonly video_note: TLVideoNote\n\treadonly voice_note: TLVoiceNote\n\treadonly instant_view_version: number\n}\nexport function webPage(object: TLObject): TLWebPage { return object as TLWebPage }\nexport interface TLAddress extends TLObject {\n\treadonly \"@type\": \"address\"\n\treadonly country_code: string\n\treadonly state: string\n\treadonly city: string\n\treadonly street_line1: string\n\treadonly street_line2: string\n\treadonly postal_code: string\n}\nexport function address(object: TLObject): TLAddress { return object as TLAddress }\nexport interface TLLabeledPricePart extends TLObject {\n\treadonly \"@type\": \"labeledPricePart\"\n\treadonly label: string\n\treadonly amount: number\n}\nexport function labeledPricePart(object: TLObject): TLLabeledPricePart { return object as TLLabeledPricePart }\nexport interface TLInvoice extends TLObject {\n\treadonly \"@type\": \"invoice\"\n\treadonly currency: string\n\treadonly price_parts: ReadonlyArray<TLLabeledPricePart>\n\treadonly is_test: boolean\n\treadonly need_name: boolean\n\treadonly need_phone_number: boolean\n\treadonly need_email_address: boolean\n\treadonly need_shipping_address: boolean\n\treadonly send_phone_number_to_provider: boolean\n\treadonly send_email_address_to_provider: boolean\n\treadonly is_flexible: boolean\n}\nexport function invoice(object: TLObject): TLInvoice { return object as TLInvoice }\nexport interface TLOrderInfo extends TLObject {\n\treadonly \"@type\": \"orderInfo\"\n\treadonly name: string\n\treadonly phone_number: string\n\treadonly email_address: string\n\treadonly shipping_address: TLAddress\n}\nexport function orderInfo(object: TLObject): TLOrderInfo { return object as TLOrderInfo }\nexport interface TLShippingOption extends TLObject {\n\treadonly \"@type\": \"shippingOption\"\n\treadonly id: string\n\treadonly title: string\n\treadonly price_parts: ReadonlyArray<TLLabeledPricePart>\n}\nexport function shippingOption(object: TLObject): TLShippingOption { return object as TLShippingOption }\nexport interface TLSavedCredentials extends TLObject {\n\treadonly \"@type\": \"savedCredentials\"\n\treadonly id: string\n\treadonly title: string\n}\nexport function savedCredentials(object: TLObject): TLSavedCredentials { return object as TLSavedCredentials }\nexport interface TLInputCredentialsSaved extends TLObject {\n\treadonly \"@type\": \"inputCredentialsSaved\"\n\treadonly saved_credentials_id: string\n}\nexport function inputCredentialsSaved(object: TLObject): TLInputCredentialsSaved { return object as TLInputCredentialsSaved }\nexport interface TLInputCredentialsNew extends TLObject {\n\treadonly \"@type\": \"inputCredentialsNew\"\n\treadonly data: string\n\treadonly allow_save: boolean\n}\nexport function inputCredentialsNew(object: TLObject): TLInputCredentialsNew { return object as TLInputCredentialsNew }\nexport interface TLInputCredentialsAndroidPay extends TLObject {\n\treadonly \"@type\": \"inputCredentialsAndroidPay\"\n\treadonly data: string\n}\nexport function inputCredentialsAndroidPay(object: TLObject): TLInputCredentialsAndroidPay { return object as TLInputCredentialsAndroidPay }\nexport interface TLInputCredentialsApplePay extends TLObject {\n\treadonly \"@type\": \"inputCredentialsApplePay\"\n\treadonly data: string\n}\nexport function inputCredentialsApplePay(object: TLObject): TLInputCredentialsApplePay { return object as TLInputCredentialsApplePay }\nexport type TLInputCredentials = TLInputCredentialsSaved | TLInputCredentialsNew | TLInputCredentialsAndroidPay | TLInputCredentialsApplePay\nexport interface TLPaymentsProviderStripe extends TLObject {\n\treadonly \"@type\": \"paymentsProviderStripe\"\n\treadonly publishable_key: string\n\treadonly need_country: boolean\n\treadonly need_postal_code: boolean\n\treadonly need_cardholder_name: boolean\n}\nexport function paymentsProviderStripe(object: TLObject): TLPaymentsProviderStripe { return object as TLPaymentsProviderStripe }\nexport interface TLPaymentForm extends TLObject {\n\treadonly \"@type\": \"paymentForm\"\n\treadonly invoice: TLInvoice\n\treadonly url: string\n\treadonly payments_provider: TLPaymentsProviderStripe\n\treadonly saved_order_info: TLOrderInfo\n\treadonly saved_credentials: TLSavedCredentials\n\treadonly can_save_credentials: boolean\n\treadonly need_password: boolean\n}\nexport function paymentForm(object: TLObject): TLPaymentForm { return object as TLPaymentForm }\nexport interface TLValidatedOrderInfo extends TLObject {\n\treadonly \"@type\": \"validatedOrderInfo\"\n\treadonly order_info_id: string\n\treadonly shipping_options: ReadonlyArray<TLShippingOption>\n}\nexport function validatedOrderInfo(object: TLObject): TLValidatedOrderInfo { return object as TLValidatedOrderInfo }\nexport interface TLPaymentResult extends TLObject {\n\treadonly \"@type\": \"paymentResult\"\n\treadonly success: boolean\n\treadonly verification_url: string\n}\nexport function paymentResult(object: TLObject): TLPaymentResult { return object as TLPaymentResult }\nexport interface TLPaymentReceipt extends TLObject {\n\treadonly \"@type\": \"paymentReceipt\"\n\treadonly date: number\n\treadonly payments_provider_user_id: number\n\treadonly invoice: TLInvoice\n\treadonly order_info: TLOrderInfo\n\treadonly shipping_option: TLShippingOption\n\treadonly credentials_title: string\n}\nexport function paymentReceipt(object: TLObject): TLPaymentReceipt { return object as TLPaymentReceipt }\nexport interface TLDatedFile extends TLObject {\n\treadonly \"@type\": \"datedFile\"\n\treadonly file: TLFile\n\treadonly date: number\n}\nexport function datedFile(object: TLObject): TLDatedFile { return object as TLDatedFile }\nexport interface TLPassportElementTypePersonalDetails extends TLObject {\n\treadonly \"@type\": \"passportElementTypePersonalDetails\"\n}\nexport function passportElementTypePersonalDetails(object: TLObject): TLPassportElementTypePersonalDetails { return object as TLPassportElementTypePersonalDetails }\nexport interface TLPassportElementTypePassport extends TLObject {\n\treadonly \"@type\": \"passportElementTypePassport\"\n}\nexport function passportElementTypePassport(object: TLObject): TLPassportElementTypePassport { return object as TLPassportElementTypePassport }\nexport interface TLPassportElementTypeDriverLicense extends TLObject {\n\treadonly \"@type\": \"passportElementTypeDriverLicense\"\n}\nexport function passportElementTypeDriverLicense(object: TLObject): TLPassportElementTypeDriverLicense { return object as TLPassportElementTypeDriverLicense }\nexport interface TLPassportElementTypeIdentityCard extends TLObject {\n\treadonly \"@type\": \"passportElementTypeIdentityCard\"\n}\nexport function passportElementTypeIdentityCard(object: TLObject): TLPassportElementTypeIdentityCard { return object as TLPassportElementTypeIdentityCard }\nexport interface TLPassportElementTypeInternalPassport extends TLObject {\n\treadonly \"@type\": \"passportElementTypeInternalPassport\"\n}\nexport function passportElementTypeInternalPassport(object: TLObject): TLPassportElementTypeInternalPassport { return object as TLPassportElementTypeInternalPassport }\nexport interface TLPassportElementTypeAddress extends TLObject {\n\treadonly \"@type\": \"passportElementTypeAddress\"\n}\nexport function passportElementTypeAddress(object: TLObject): TLPassportElementTypeAddress { return object as TLPassportElementTypeAddress }\nexport interface TLPassportElementTypeUtilityBill extends TLObject {\n\treadonly \"@type\": \"passportElementTypeUtilityBill\"\n}\nexport function passportElementTypeUtilityBill(object: TLObject): TLPassportElementTypeUtilityBill { return object as TLPassportElementTypeUtilityBill }\nexport interface TLPassportElementTypeBankStatement extends TLObject {\n\treadonly \"@type\": \"passportElementTypeBankStatement\"\n}\nexport function passportElementTypeBankStatement(object: TLObject): TLPassportElementTypeBankStatement { return object as TLPassportElementTypeBankStatement }\nexport interface TLPassportElementTypeRentalAgreement extends TLObject {\n\treadonly \"@type\": \"passportElementTypeRentalAgreement\"\n}\nexport function passportElementTypeRentalAgreement(object: TLObject): TLPassportElementTypeRentalAgreement { return object as TLPassportElementTypeRentalAgreement }\nexport interface TLPassportElementTypePassportRegistration extends TLObject {\n\treadonly \"@type\": \"passportElementTypePassportRegistration\"\n}\nexport function passportElementTypePassportRegistration(object: TLObject): TLPassportElementTypePassportRegistration { return object as TLPassportElementTypePassportRegistration }\nexport interface TLPassportElementTypeTemporaryRegistration extends TLObject {\n\treadonly \"@type\": \"passportElementTypeTemporaryRegistration\"\n}\nexport function passportElementTypeTemporaryRegistration(object: TLObject): TLPassportElementTypeTemporaryRegistration { return object as TLPassportElementTypeTemporaryRegistration }\nexport interface TLPassportElementTypePhoneNumber extends TLObject {\n\treadonly \"@type\": \"passportElementTypePhoneNumber\"\n}\nexport function passportElementTypePhoneNumber(object: TLObject): TLPassportElementTypePhoneNumber { return object as TLPassportElementTypePhoneNumber }\nexport interface TLPassportElementTypeEmailAddress extends TLObject {\n\treadonly \"@type\": \"passportElementTypeEmailAddress\"\n}\nexport function passportElementTypeEmailAddress(object: TLObject): TLPassportElementTypeEmailAddress { return object as TLPassportElementTypeEmailAddress }\nexport type TLPassportElementType = TLPassportElementTypePersonalDetails | TLPassportElementTypePassport | TLPassportElementTypeDriverLicense | TLPassportElementTypeIdentityCard | TLPassportElementTypeInternalPassport | TLPassportElementTypeAddress | TLPassportElementTypeUtilityBill | TLPassportElementTypeBankStatement | TLPassportElementTypeRentalAgreement | TLPassportElementTypePassportRegistration | TLPassportElementTypeTemporaryRegistration | TLPassportElementTypePhoneNumber | TLPassportElementTypeEmailAddress\nexport interface TLDate extends TLObject {\n\treadonly \"@type\": \"date\"\n\treadonly day: number\n\treadonly month: number\n\treadonly year: number\n}\nexport function date(object: TLObject): TLDate { return object as TLDate }\nexport interface TLPersonalDetails extends TLObject {\n\treadonly \"@type\": \"personalDetails\"\n\treadonly first_name: string\n\treadonly middle_name: string\n\treadonly last_name: string\n\treadonly native_first_name: string\n\treadonly native_middle_name: string\n\treadonly native_last_name: string\n\treadonly birthdate: TLDate\n\treadonly gender: string\n\treadonly country_code: string\n\treadonly residence_country_code: string\n}\nexport function personalDetails(object: TLObject): TLPersonalDetails { return object as TLPersonalDetails }\nexport interface TLIdentityDocument extends TLObject {\n\treadonly \"@type\": \"identityDocument\"\n\treadonly number: string\n\treadonly expiry_date: TLDate\n\treadonly front_side: TLDatedFile\n\treadonly reverse_side: TLDatedFile\n\treadonly selfie: TLDatedFile\n\treadonly translation: ReadonlyArray<TLDatedFile>\n}\nexport function identityDocument(object: TLObject): TLIdentityDocument { return object as TLIdentityDocument }\nexport interface TLInputIdentityDocument extends TLObject {\n\treadonly \"@type\": \"inputIdentityDocument\"\n\treadonly number: string\n\treadonly expiry_date: TLDate\n\treadonly front_side: TLInputFile\n\treadonly reverse_side: TLInputFile\n\treadonly selfie: TLInputFile\n\treadonly translation: ReadonlyArray<TLInputFile>\n}\nexport function inputIdentityDocument(object: TLObject): TLInputIdentityDocument { return object as TLInputIdentityDocument }\nexport interface TLPersonalDocument extends TLObject {\n\treadonly \"@type\": \"personalDocument\"\n\treadonly files: ReadonlyArray<TLDatedFile>\n\treadonly translation: ReadonlyArray<TLDatedFile>\n}\nexport function personalDocument(object: TLObject): TLPersonalDocument { return object as TLPersonalDocument }\nexport interface TLInputPersonalDocument extends TLObject {\n\treadonly \"@type\": \"inputPersonalDocument\"\n\treadonly files: ReadonlyArray<TLInputFile>\n\treadonly translation: ReadonlyArray<TLInputFile>\n}\nexport function inputPersonalDocument(object: TLObject): TLInputPersonalDocument { return object as TLInputPersonalDocument }\nexport interface TLPassportElementPersonalDetails extends TLObject {\n\treadonly \"@type\": \"passportElementPersonalDetails\"\n\treadonly personal_details: TLPersonalDetails\n}\nexport function passportElementPersonalDetails(object: TLObject): TLPassportElementPersonalDetails { return object as TLPassportElementPersonalDetails }\nexport interface TLPassportElementPassport extends TLObject {\n\treadonly \"@type\": \"passportElementPassport\"\n\treadonly passport: TLIdentityDocument\n}\nexport function passportElementPassport(object: TLObject): TLPassportElementPassport { return object as TLPassportElementPassport }\nexport interface TLPassportElementDriverLicense extends TLObject {\n\treadonly \"@type\": \"passportElementDriverLicense\"\n\treadonly driver_license: TLIdentityDocument\n}\nexport function passportElementDriverLicense(object: TLObject): TLPassportElementDriverLicense { return object as TLPassportElementDriverLicense }\nexport interface TLPassportElementIdentityCard extends TLObject {\n\treadonly \"@type\": \"passportElementIdentityCard\"\n\treadonly identity_card: TLIdentityDocument\n}\nexport function passportElementIdentityCard(object: TLObject): TLPassportElementIdentityCard { return object as TLPassportElementIdentityCard }\nexport interface TLPassportElementInternalPassport extends TLObject {\n\treadonly \"@type\": \"passportElementInternalPassport\"\n\treadonly internal_passport: TLIdentityDocument\n}\nexport function passportElementInternalPassport(object: TLObject): TLPassportElementInternalPassport { return object as TLPassportElementInternalPassport }\nexport interface TLPassportElementAddress extends TLObject {\n\treadonly \"@type\": \"passportElementAddress\"\n\treadonly address: TLAddress\n}\nexport function passportElementAddress(object: TLObject): TLPassportElementAddress { return object as TLPassportElementAddress }\nexport interface TLPassportElementUtilityBill extends TLObject {\n\treadonly \"@type\": \"passportElementUtilityBill\"\n\treadonly utility_bill: TLPersonalDocument\n}\nexport function passportElementUtilityBill(object: TLObject): TLPassportElementUtilityBill { return object as TLPassportElementUtilityBill }\nexport interface TLPassportElementBankStatement extends TLObject {\n\treadonly \"@type\": \"passportElementBankStatement\"\n\treadonly bank_statement: TLPersonalDocument\n}\nexport function passportElementBankStatement(object: TLObject): TLPassportElementBankStatement { return object as TLPassportElementBankStatement }\nexport interface TLPassportElementRentalAgreement extends TLObject {\n\treadonly \"@type\": \"passportElementRentalAgreement\"\n\treadonly rental_agreement: TLPersonalDocument\n}\nexport function passportElementRentalAgreement(object: TLObject): TLPassportElementRentalAgreement { return object as TLPassportElementRentalAgreement }\nexport interface TLPassportElementPassportRegistration extends TLObject {\n\treadonly \"@type\": \"passportElementPassportRegistration\"\n\treadonly passport_registration: TLPersonalDocument\n}\nexport function passportElementPassportRegistration(object: TLObject): TLPassportElementPassportRegistration { return object as TLPassportElementPassportRegistration }\nexport interface TLPassportElementTemporaryRegistration extends TLObject {\n\treadonly \"@type\": \"passportElementTemporaryRegistration\"\n\treadonly temporary_registration: TLPersonalDocument\n}\nexport function passportElementTemporaryRegistration(object: TLObject): TLPassportElementTemporaryRegistration { return object as TLPassportElementTemporaryRegistration }\nexport interface TLPassportElementPhoneNumber extends TLObject {\n\treadonly \"@type\": \"passportElementPhoneNumber\"\n\treadonly phone_number: string\n}\nexport function passportElementPhoneNumber(object: TLObject): TLPassportElementPhoneNumber { return object as TLPassportElementPhoneNumber }\nexport interface TLPassportElementEmailAddress extends TLObject {\n\treadonly \"@type\": \"passportElementEmailAddress\"\n\treadonly email_address: string\n}\nexport function passportElementEmailAddress(object: TLObject): TLPassportElementEmailAddress { return object as TLPassportElementEmailAddress }\nexport type TLPassportElement = TLPassportElementPersonalDetails | TLPassportElementPassport | TLPassportElementDriverLicense | TLPassportElementIdentityCard | TLPassportElementInternalPassport | TLPassportElementAddress | TLPassportElementUtilityBill | TLPassportElementBankStatement | TLPassportElementRentalAgreement | TLPassportElementPassportRegistration | TLPassportElementTemporaryRegistration | TLPassportElementPhoneNumber | TLPassportElementEmailAddress\nexport interface TLInputPassportElementPersonalDetails extends TLObject {\n\treadonly \"@type\": \"inputPassportElementPersonalDetails\"\n\treadonly personal_details: TLPersonalDetails\n}\nexport function inputPassportElementPersonalDetails(object: TLObject): TLInputPassportElementPersonalDetails { return object as TLInputPassportElementPersonalDetails }\nexport interface TLInputPassportElementPassport extends TLObject {\n\treadonly \"@type\": \"inputPassportElementPassport\"\n\treadonly passport: TLInputIdentityDocument\n}\nexport function inputPassportElementPassport(object: TLObject): TLInputPassportElementPassport { return object as TLInputPassportElementPassport }\nexport interface TLInputPassportElementDriverLicense extends TLObject {\n\treadonly \"@type\": \"inputPassportElementDriverLicense\"\n\treadonly driver_license: TLInputIdentityDocument\n}\nexport function inputPassportElementDriverLicense(object: TLObject): TLInputPassportElementDriverLicense { return object as TLInputPassportElementDriverLicense }\nexport interface TLInputPassportElementIdentityCard extends TLObject {\n\treadonly \"@type\": \"inputPassportElementIdentityCard\"\n\treadonly identity_card: TLInputIdentityDocument\n}\nexport function inputPassportElementIdentityCard(object: TLObject): TLInputPassportElementIdentityCard { return object as TLInputPassportElementIdentityCard }\nexport interface TLInputPassportElementInternalPassport extends TLObject {\n\treadonly \"@type\": \"inputPassportElementInternalPassport\"\n\treadonly internal_passport: TLInputIdentityDocument\n}\nexport function inputPassportElementInternalPassport(object: TLObject): TLInputPassportElementInternalPassport { return object as TLInputPassportElementInternalPassport }\nexport interface TLInputPassportElementAddress extends TLObject {\n\treadonly \"@type\": \"inputPassportElementAddress\"\n\treadonly address: TLAddress\n}\nexport function inputPassportElementAddress(object: TLObject): TLInputPassportElementAddress { return object as TLInputPassportElementAddress }\nexport interface TLInputPassportElementUtilityBill extends TLObject {\n\treadonly \"@type\": \"inputPassportElementUtilityBill\"\n\treadonly utility_bill: TLInputPersonalDocument\n}\nexport function inputPassportElementUtilityBill(object: TLObject): TLInputPassportElementUtilityBill { return object as TLInputPassportElementUtilityBill }\nexport interface TLInputPassportElementBankStatement extends TLObject {\n\treadonly \"@type\": \"inputPassportElementBankStatement\"\n\treadonly bank_statement: TLInputPersonalDocument\n}\nexport function inputPassportElementBankStatement(object: TLObject): TLInputPassportElementBankStatement { return object as TLInputPassportElementBankStatement }\nexport interface TLInputPassportElementRentalAgreement extends TLObject {\n\treadonly \"@type\": \"inputPassportElementRentalAgreement\"\n\treadonly rental_agreement: TLInputPersonalDocument\n}\nexport function inputPassportElementRentalAgreement(object: TLObject): TLInputPassportElementRentalAgreement { return object as TLInputPassportElementRentalAgreement }\nexport interface TLInputPassportElementPassportRegistration extends TLObject {\n\treadonly \"@type\": \"inputPassportElementPassportRegistration\"\n\treadonly passport_registration: TLInputPersonalDocument\n}\nexport function inputPassportElementPassportRegistration(object: TLObject): TLInputPassportElementPassportRegistration { return object as TLInputPassportElementPassportRegistration }\nexport interface TLInputPassportElementTemporaryRegistration extends TLObject {\n\treadonly \"@type\": \"inputPassportElementTemporaryRegistration\"\n\treadonly temporary_registration: TLInputPersonalDocument\n}\nexport function inputPassportElementTemporaryRegistration(object: TLObject): TLInputPassportElementTemporaryRegistration { return object as TLInputPassportElementTemporaryRegistration }\nexport interface TLInputPassportElementPhoneNumber extends TLObject {\n\treadonly \"@type\": \"inputPassportElementPhoneNumber\"\n\treadonly phone_number: string\n}\nexport function inputPassportElementPhoneNumber(object: TLObject): TLInputPassportElementPhoneNumber { return object as TLInputPassportElementPhoneNumber }\nexport interface TLInputPassportElementEmailAddress extends TLObject {\n\treadonly \"@type\": \"inputPassportElementEmailAddress\"\n\treadonly email_address: string\n}\nexport function inputPassportElementEmailAddress(object: TLObject): TLInputPassportElementEmailAddress { return object as TLInputPassportElementEmailAddress }\nexport type TLInputPassportElement = TLInputPassportElementPersonalDetails | TLInputPassportElementPassport | TLInputPassportElementDriverLicense | TLInputPassportElementIdentityCard | TLInputPassportElementInternalPassport | TLInputPassportElementAddress | TLInputPassportElementUtilityBill | TLInputPassportElementBankStatement | TLInputPassportElementRentalAgreement | TLInputPassportElementPassportRegistration | TLInputPassportElementTemporaryRegistration | TLInputPassportElementPhoneNumber | TLInputPassportElementEmailAddress\nexport interface TLPassportElements extends TLObject {\n\treadonly \"@type\": \"passportElements\"\n\treadonly elements: ReadonlyArray<TLPassportElement>\n}\nexport function passportElements(object: TLObject): TLPassportElements { return object as TLPassportElements }\nexport interface TLPassportElementErrorSourceUnspecified extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceUnspecified\"\n}\nexport function passportElementErrorSourceUnspecified(object: TLObject): TLPassportElementErrorSourceUnspecified { return object as TLPassportElementErrorSourceUnspecified }\nexport interface TLPassportElementErrorSourceDataField extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceDataField\"\n\treadonly field_name: string\n}\nexport function passportElementErrorSourceDataField(object: TLObject): TLPassportElementErrorSourceDataField { return object as TLPassportElementErrorSourceDataField }\nexport interface TLPassportElementErrorSourceFrontSide extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceFrontSide\"\n}\nexport function passportElementErrorSourceFrontSide(object: TLObject): TLPassportElementErrorSourceFrontSide { return object as TLPassportElementErrorSourceFrontSide }\nexport interface TLPassportElementErrorSourceReverseSide extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceReverseSide\"\n}\nexport function passportElementErrorSourceReverseSide(object: TLObject): TLPassportElementErrorSourceReverseSide { return object as TLPassportElementErrorSourceReverseSide }\nexport interface TLPassportElementErrorSourceSelfie extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceSelfie\"\n}\nexport function passportElementErrorSourceSelfie(object: TLObject): TLPassportElementErrorSourceSelfie { return object as TLPassportElementErrorSourceSelfie }\nexport interface TLPassportElementErrorSourceTranslationFile extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceTranslationFile\"\n\treadonly file_index: number\n}\nexport function passportElementErrorSourceTranslationFile(object: TLObject): TLPassportElementErrorSourceTranslationFile { return object as TLPassportElementErrorSourceTranslationFile }\nexport interface TLPassportElementErrorSourceTranslationFiles extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceTranslationFiles\"\n}\nexport function passportElementErrorSourceTranslationFiles(object: TLObject): TLPassportElementErrorSourceTranslationFiles { return object as TLPassportElementErrorSourceTranslationFiles }\nexport interface TLPassportElementErrorSourceFile extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceFile\"\n\treadonly file_index: number\n}\nexport function passportElementErrorSourceFile(object: TLObject): TLPassportElementErrorSourceFile { return object as TLPassportElementErrorSourceFile }\nexport interface TLPassportElementErrorSourceFiles extends TLObject {\n\treadonly \"@type\": \"passportElementErrorSourceFiles\"\n}\nexport function passportElementErrorSourceFiles(object: TLObject): TLPassportElementErrorSourceFiles { return object as TLPassportElementErrorSourceFiles }\nexport type TLPassportElementErrorSource = TLPassportElementErrorSourceUnspecified | TLPassportElementErrorSourceDataField | TLPassportElementErrorSourceFrontSide | TLPassportElementErrorSourceReverseSide | TLPassportElementErrorSourceSelfie | TLPassportElementErrorSourceTranslationFile | TLPassportElementErrorSourceTranslationFiles | TLPassportElementErrorSourceFile | TLPassportElementErrorSourceFiles\nexport interface TLPassportElementError extends TLObject {\n\treadonly \"@type\": \"passportElementError\"\n\treadonly type: TLPassportElementType\n\treadonly message: string\n\treadonly source: TLPassportElementErrorSource\n}\nexport function passportElementError(object: TLObject): TLPassportElementError { return object as TLPassportElementError }\nexport interface TLPassportSuitableElement extends TLObject {\n\treadonly \"@type\": \"passportSuitableElement\"\n\treadonly type: TLPassportElementType\n\treadonly is_selfie_required: boolean\n\treadonly is_translation_required: boolean\n\treadonly is_native_name_required: boolean\n}\nexport function passportSuitableElement(object: TLObject): TLPassportSuitableElement { return object as TLPassportSuitableElement }\nexport interface TLPassportRequiredElement extends TLObject {\n\treadonly \"@type\": \"passportRequiredElement\"\n\treadonly suitable_elements: ReadonlyArray<TLPassportSuitableElement>\n}\nexport function passportRequiredElement(object: TLObject): TLPassportRequiredElement { return object as TLPassportRequiredElement }\nexport interface TLPassportAuthorizationForm extends TLObject {\n\treadonly \"@type\": \"passportAuthorizationForm\"\n\treadonly id: number\n\treadonly required_elements: ReadonlyArray<TLPassportRequiredElement>\n\treadonly privacy_policy_url: string\n}\nexport function passportAuthorizationForm(object: TLObject): TLPassportAuthorizationForm { return object as TLPassportAuthorizationForm }\nexport interface TLPassportElementsWithErrors extends TLObject {\n\treadonly \"@type\": \"passportElementsWithErrors\"\n\treadonly elements: ReadonlyArray<TLPassportElement>\n\treadonly errors: ReadonlyArray<TLPassportElementError>\n}\nexport function passportElementsWithErrors(object: TLObject): TLPassportElementsWithErrors { return object as TLPassportElementsWithErrors }\nexport interface TLEncryptedCredentials extends TLObject {\n\treadonly \"@type\": \"encryptedCredentials\"\n\treadonly data: Uint8Array\n\treadonly hash: Uint8Array\n\treadonly secret: Uint8Array\n}\nexport function encryptedCredentials(object: TLObject): TLEncryptedCredentials { return object as TLEncryptedCredentials }\nexport interface TLEncryptedPassportElement extends TLObject {\n\treadonly \"@type\": \"encryptedPassportElement\"\n\treadonly type: TLPassportElementType\n\treadonly data: Uint8Array\n\treadonly front_side: TLDatedFile\n\treadonly reverse_side: TLDatedFile\n\treadonly selfie: TLDatedFile\n\treadonly translation: ReadonlyArray<TLDatedFile>\n\treadonly files: ReadonlyArray<TLDatedFile>\n\treadonly value: string\n\treadonly hash: string\n}\nexport function encryptedPassportElement(object: TLObject): TLEncryptedPassportElement { return object as TLEncryptedPassportElement }\nexport interface TLInputPassportElementErrorSourceUnspecified extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceUnspecified\"\n\treadonly element_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceUnspecified(object: TLObject): TLInputPassportElementErrorSourceUnspecified { return object as TLInputPassportElementErrorSourceUnspecified }\nexport interface TLInputPassportElementErrorSourceDataField extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceDataField\"\n\treadonly field_name: string\n\treadonly data_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceDataField(object: TLObject): TLInputPassportElementErrorSourceDataField { return object as TLInputPassportElementErrorSourceDataField }\nexport interface TLInputPassportElementErrorSourceFrontSide extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceFrontSide\"\n\treadonly file_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceFrontSide(object: TLObject): TLInputPassportElementErrorSourceFrontSide { return object as TLInputPassportElementErrorSourceFrontSide }\nexport interface TLInputPassportElementErrorSourceReverseSide extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceReverseSide\"\n\treadonly file_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceReverseSide(object: TLObject): TLInputPassportElementErrorSourceReverseSide { return object as TLInputPassportElementErrorSourceReverseSide }\nexport interface TLInputPassportElementErrorSourceSelfie extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceSelfie\"\n\treadonly file_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceSelfie(object: TLObject): TLInputPassportElementErrorSourceSelfie { return object as TLInputPassportElementErrorSourceSelfie }\nexport interface TLInputPassportElementErrorSourceTranslationFile extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceTranslationFile\"\n\treadonly file_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceTranslationFile(object: TLObject): TLInputPassportElementErrorSourceTranslationFile { return object as TLInputPassportElementErrorSourceTranslationFile }\nexport interface TLInputPassportElementErrorSourceTranslationFiles extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceTranslationFiles\"\n\treadonly file_hashes: ReadonlyArray<Uint8Array>\n}\nexport function inputPassportElementErrorSourceTranslationFiles(object: TLObject): TLInputPassportElementErrorSourceTranslationFiles { return object as TLInputPassportElementErrorSourceTranslationFiles }\nexport interface TLInputPassportElementErrorSourceFile extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceFile\"\n\treadonly file_hash: Uint8Array\n}\nexport function inputPassportElementErrorSourceFile(object: TLObject): TLInputPassportElementErrorSourceFile { return object as TLInputPassportElementErrorSourceFile }\nexport interface TLInputPassportElementErrorSourceFiles extends TLObject {\n\treadonly \"@type\": \"inputPassportElementErrorSourceFiles\"\n\treadonly file_hashes: ReadonlyArray<Uint8Array>\n}\nexport function inputPassportElementErrorSourceFiles(object: TLObject): TLInputPassportElementErrorSourceFiles { return object as TLInputPassportElementErrorSourceFiles }\nexport type TLInputPassportElementErrorSource = TLInputPassportElementErrorSourceUnspecified | TLInputPassportElementErrorSourceDataField | TLInputPassportElementErrorSourceFrontSide | TLInputPassportElementErrorSourceReverseSide | TLInputPassportElementErrorSourceSelfie | TLInputPassportElementErrorSourceTranslationFile | TLInputPassportElementErrorSourceTranslationFiles | TLInputPassportElementErrorSourceFile | TLInputPassportElementErrorSourceFiles\nexport interface TLInputPassportElementError extends TLObject {\n\treadonly \"@type\": \"inputPassportElementError\"\n\treadonly type: TLPassportElementType\n\treadonly message: string\n\treadonly source: TLInputPassportElementErrorSource\n}\nexport function inputPassportElementError(object: TLObject): TLInputPassportElementError { return object as TLInputPassportElementError }\nexport interface TLMessageText extends TLObject {\n\treadonly \"@type\": \"messageText\"\n\treadonly text: TLFormattedText\n\treadonly web_page: TLWebPage\n}\nexport function messageText(object: TLObject): TLMessageText { return object as TLMessageText }\nexport interface TLMessageAnimation extends TLObject {\n\treadonly \"@type\": \"messageAnimation\"\n\treadonly animation: TLAnimation\n\treadonly caption: TLFormattedText\n\treadonly is_secret: boolean\n}\nexport function messageAnimation(object: TLObject): TLMessageAnimation { return object as TLMessageAnimation }\nexport interface TLMessageAudio extends TLObject {\n\treadonly \"@type\": \"messageAudio\"\n\treadonly audio: TLAudio\n\treadonly caption: TLFormattedText\n}\nexport function messageAudio(object: TLObject): TLMessageAudio { return object as TLMessageAudio }\nexport interface TLMessageDocument extends TLObject {\n\treadonly \"@type\": \"messageDocument\"\n\treadonly document: TLDocument\n\treadonly caption: TLFormattedText\n}\nexport function messageDocument(object: TLObject): TLMessageDocument { return object as TLMessageDocument }\nexport interface TLMessagePhoto extends TLObject {\n\treadonly \"@type\": \"messagePhoto\"\n\treadonly photo: TLPhoto\n\treadonly caption: TLFormattedText\n\treadonly is_secret: boolean\n}\nexport function messagePhoto(object: TLObject): TLMessagePhoto { return object as TLMessagePhoto }\nexport interface TLMessageExpiredPhoto extends TLObject {\n\treadonly \"@type\": \"messageExpiredPhoto\"\n}\nexport function messageExpiredPhoto(object: TLObject): TLMessageExpiredPhoto { return object as TLMessageExpiredPhoto }\nexport interface TLMessageSticker extends TLObject {\n\treadonly \"@type\": \"messageSticker\"\n\treadonly sticker: TLSticker\n}\nexport function messageSticker(object: TLObject): TLMessageSticker { return object as TLMessageSticker }\nexport interface TLMessageVideo extends TLObject {\n\treadonly \"@type\": \"messageVideo\"\n\treadonly video: TLVideo\n\treadonly caption: TLFormattedText\n\treadonly is_secret: boolean\n}\nexport function messageVideo(object: TLObject): TLMessageVideo { return object as TLMessageVideo }\nexport interface TLMessageExpiredVideo extends TLObject {\n\treadonly \"@type\": \"messageExpiredVideo\"\n}\nexport function messageExpiredVideo(object: TLObject): TLMessageExpiredVideo { return object as TLMessageExpiredVideo }\nexport interface TLMessageVideoNote extends TLObject {\n\treadonly \"@type\": \"messageVideoNote\"\n\treadonly video_note: TLVideoNote\n\treadonly is_viewed: boolean\n\treadonly is_secret: boolean\n}\nexport function messageVideoNote(object: TLObject): TLMessageVideoNote { return object as TLMessageVideoNote }\nexport interface TLMessageVoiceNote extends TLObject {\n\treadonly \"@type\": \"messageVoiceNote\"\n\treadonly voice_note: TLVoiceNote\n\treadonly caption: TLFormattedText\n\treadonly is_listened: boolean\n}\nexport function messageVoiceNote(object: TLObject): TLMessageVoiceNote { return object as TLMessageVoiceNote }\nexport interface TLMessageLocation extends TLObject {\n\treadonly \"@type\": \"messageLocation\"\n\treadonly location: TLLocation\n\treadonly live_period: number\n\treadonly expires_in: number\n}\nexport function messageLocation(object: TLObject): TLMessageLocation { return object as TLMessageLocation }\nexport interface TLMessageVenue extends TLObject {\n\treadonly \"@type\": \"messageVenue\"\n\treadonly venue: TLVenue\n}\nexport function messageVenue(object: TLObject): TLMessageVenue { return object as TLMessageVenue }\nexport interface TLMessageContact extends TLObject {\n\treadonly \"@type\": \"messageContact\"\n\treadonly contact: TLContact\n}\nexport function messageContact(object: TLObject): TLMessageContact { return object as TLMessageContact }\nexport interface TLMessageGame extends TLObject {\n\treadonly \"@type\": \"messageGame\"\n\treadonly game: TLGame\n}\nexport function messageGame(object: TLObject): TLMessageGame { return object as TLMessageGame }\nexport interface TLMessagePoll extends TLObject {\n\treadonly \"@type\": \"messagePoll\"\n\treadonly poll: TLPoll\n}\nexport function messagePoll(object: TLObject): TLMessagePoll { return object as TLMessagePoll }\nexport interface TLMessageInvoice extends TLObject {\n\treadonly \"@type\": \"messageInvoice\"\n\treadonly title: string\n\treadonly description: string\n\treadonly photo: TLPhoto\n\treadonly currency: string\n\treadonly total_amount: number\n\treadonly start_parameter: string\n\treadonly is_test: boolean\n\treadonly need_shipping_address: boolean\n\treadonly receipt_message_id: number\n}\nexport function messageInvoice(object: TLObject): TLMessageInvoice { return object as TLMessageInvoice }\nexport interface TLMessageCall extends TLObject {\n\treadonly \"@type\": \"messageCall\"\n\treadonly discard_reason: TLCallDiscardReason\n\treadonly duration: number\n}\nexport function messageCall(object: TLObject): TLMessageCall { return object as TLMessageCall }\nexport interface TLMessageBasicGroupChatCreate extends TLObject {\n\treadonly \"@type\": \"messageBasicGroupChatCreate\"\n\treadonly title: string\n\treadonly member_user_ids: ReadonlyArray<number>\n}\nexport function messageBasicGroupChatCreate(object: TLObject): TLMessageBasicGroupChatCreate { return object as TLMessageBasicGroupChatCreate }\nexport interface TLMessageSupergroupChatCreate extends TLObject {\n\treadonly \"@type\": \"messageSupergroupChatCreate\"\n\treadonly title: string\n}\nexport function messageSupergroupChatCreate(object: TLObject): TLMessageSupergroupChatCreate { return object as TLMessageSupergroupChatCreate }\nexport interface TLMessageChatChangeTitle extends TLObject {\n\treadonly \"@type\": \"messageChatChangeTitle\"\n\treadonly title: string\n}\nexport function messageChatChangeTitle(object: TLObject): TLMessageChatChangeTitle { return object as TLMessageChatChangeTitle }\nexport interface TLMessageChatChangePhoto extends TLObject {\n\treadonly \"@type\": \"messageChatChangePhoto\"\n\treadonly photo: TLPhoto\n}\nexport function messageChatChangePhoto(object: TLObject): TLMessageChatChangePhoto { return object as TLMessageChatChangePhoto }\nexport interface TLMessageChatDeletePhoto extends TLObject {\n\treadonly \"@type\": \"messageChatDeletePhoto\"\n}\nexport function messageChatDeletePhoto(object: TLObject): TLMessageChatDeletePhoto { return object as TLMessageChatDeletePhoto }\nexport interface TLMessageChatAddMembers extends TLObject {\n\treadonly \"@type\": \"messageChatAddMembers\"\n\treadonly member_user_ids: ReadonlyArray<number>\n}\nexport function messageChatAddMembers(object: TLObject): TLMessageChatAddMembers { return object as TLMessageChatAddMembers }\nexport interface TLMessageChatJoinByLink extends TLObject {\n\treadonly \"@type\": \"messageChatJoinByLink\"\n}\nexport function messageChatJoinByLink(object: TLObject): TLMessageChatJoinByLink { return object as TLMessageChatJoinByLink }\nexport interface TLMessageChatDeleteMember extends TLObject {\n\treadonly \"@type\": \"messageChatDeleteMember\"\n\treadonly user_id: number\n}\nexport function messageChatDeleteMember(object: TLObject): TLMessageChatDeleteMember { return object as TLMessageChatDeleteMember }\nexport interface TLMessageChatUpgradeTo extends TLObject {\n\treadonly \"@type\": \"messageChatUpgradeTo\"\n\treadonly supergroup_id: number\n}\nexport function messageChatUpgradeTo(object: TLObject): TLMessageChatUpgradeTo { return object as TLMessageChatUpgradeTo }\nexport interface TLMessageChatUpgradeFrom extends TLObject {\n\treadonly \"@type\": \"messageChatUpgradeFrom\"\n\treadonly title: string\n\treadonly basic_group_id: number\n}\nexport function messageChatUpgradeFrom(object: TLObject): TLMessageChatUpgradeFrom { return object as TLMessageChatUpgradeFrom }\nexport interface TLMessagePinMessage extends TLObject {\n\treadonly \"@type\": \"messagePinMessage\"\n\treadonly message_id: number\n}\nexport function messagePinMessage(object: TLObject): TLMessagePinMessage { return object as TLMessagePinMessage }\nexport interface TLMessageScreenshotTaken extends TLObject {\n\treadonly \"@type\": \"messageScreenshotTaken\"\n}\nexport function messageScreenshotTaken(object: TLObject): TLMessageScreenshotTaken { return object as TLMessageScreenshotTaken }\nexport interface TLMessageChatSetTtl extends TLObject {\n\treadonly \"@type\": \"messageChatSetTtl\"\n\treadonly ttl: number\n}\nexport function messageChatSetTtl(object: TLObject): TLMessageChatSetTtl { return object as TLMessageChatSetTtl }\nexport interface TLMessageCustomServiceAction extends TLObject {\n\treadonly \"@type\": \"messageCustomServiceAction\"\n\treadonly text: string\n}\nexport function messageCustomServiceAction(object: TLObject): TLMessageCustomServiceAction { return object as TLMessageCustomServiceAction }\nexport interface TLMessageGameScore extends TLObject {\n\treadonly \"@type\": \"messageGameScore\"\n\treadonly game_message_id: number\n\treadonly game_id: string\n\treadonly score: number\n}\nexport function messageGameScore(object: TLObject): TLMessageGameScore { return object as TLMessageGameScore }\nexport interface TLMessagePaymentSuccessful extends TLObject {\n\treadonly \"@type\": \"messagePaymentSuccessful\"\n\treadonly invoice_message_id: number\n\treadonly currency: string\n\treadonly total_amount: number\n}\nexport function messagePaymentSuccessful(object: TLObject): TLMessagePaymentSuccessful { return object as TLMessagePaymentSuccessful }\nexport interface TLMessagePaymentSuccessfulBot extends TLObject {\n\treadonly \"@type\": \"messagePaymentSuccessfulBot\"\n\treadonly invoice_message_id: number\n\treadonly currency: string\n\treadonly total_amount: number\n\treadonly invoice_payload: Uint8Array\n\treadonly shipping_option_id: string\n\treadonly order_info: TLOrderInfo\n\treadonly telegram_payment_charge_id: string\n\treadonly provider_payment_charge_id: string\n}\nexport function messagePaymentSuccessfulBot(object: TLObject): TLMessagePaymentSuccessfulBot { return object as TLMessagePaymentSuccessfulBot }\nexport interface TLMessageContactRegistered extends TLObject {\n\treadonly \"@type\": \"messageContactRegistered\"\n}\nexport function messageContactRegistered(object: TLObject): TLMessageContactRegistered { return object as TLMessageContactRegistered }\nexport interface TLMessageWebsiteConnected extends TLObject {\n\treadonly \"@type\": \"messageWebsiteConnected\"\n\treadonly domain_name: string\n}\nexport function messageWebsiteConnected(object: TLObject): TLMessageWebsiteConnected { return object as TLMessageWebsiteConnected }\nexport interface TLMessagePassportDataSent extends TLObject {\n\treadonly \"@type\": \"messagePassportDataSent\"\n\treadonly types: ReadonlyArray<TLPassportElementType>\n}\nexport function messagePassportDataSent(object: TLObject): TLMessagePassportDataSent { return object as TLMessagePassportDataSent }\nexport interface TLMessagePassportDataReceived extends TLObject {\n\treadonly \"@type\": \"messagePassportDataReceived\"\n\treadonly elements: ReadonlyArray<TLEncryptedPassportElement>\n\treadonly credentials: TLEncryptedCredentials\n}\nexport function messagePassportDataReceived(object: TLObject): TLMessagePassportDataReceived { return object as TLMessagePassportDataReceived }\nexport interface TLMessageUnsupported extends TLObject {\n\treadonly \"@type\": \"messageUnsupported\"\n}\nexport function messageUnsupported(object: TLObject): TLMessageUnsupported { return object as TLMessageUnsupported }\nexport type TLMessageContent = TLMessageText | TLMessageAnimation | TLMessageAudio | TLMessageDocument | TLMessagePhoto | TLMessageExpiredPhoto | TLMessageSticker | TLMessageVideo | TLMessageExpiredVideo | TLMessageVideoNote | TLMessageVoiceNote | TLMessageLocation | TLMessageVenue | TLMessageContact | TLMessageGame | TLMessagePoll | TLMessageInvoice | TLMessageCall | TLMessageBasicGroupChatCreate | TLMessageSupergroupChatCreate | TLMessageChatChangeTitle | TLMessageChatChangePhoto | TLMessageChatDeletePhoto | TLMessageChatAddMembers | TLMessageChatJoinByLink | TLMessageChatDeleteMember | TLMessageChatUpgradeTo | TLMessageChatUpgradeFrom | TLMessagePinMessage | TLMessageScreenshotTaken | TLMessageChatSetTtl | TLMessageCustomServiceAction | TLMessageGameScore | TLMessagePaymentSuccessful | TLMessagePaymentSuccessfulBot | TLMessageContactRegistered | TLMessageWebsiteConnected | TLMessagePassportDataSent | TLMessagePassportDataReceived | TLMessageUnsupported\nexport interface TLTextEntityTypeMention extends TLObject {\n\treadonly \"@type\": \"textEntityTypeMention\"\n}\nexport function textEntityTypeMention(object: TLObject): TLTextEntityTypeMention { return object as TLTextEntityTypeMention }\nexport interface TLTextEntityTypeHashtag extends TLObject {\n\treadonly \"@type\": \"textEntityTypeHashtag\"\n}\nexport function textEntityTypeHashtag(object: TLObject): TLTextEntityTypeHashtag { return object as TLTextEntityTypeHashtag }\nexport interface TLTextEntityTypeCashtag extends TLObject {\n\treadonly \"@type\": \"textEntityTypeCashtag\"\n}\nexport function textEntityTypeCashtag(object: TLObject): TLTextEntityTypeCashtag { return object as TLTextEntityTypeCashtag }\nexport interface TLTextEntityTypeBotCommand extends TLObject {\n\treadonly \"@type\": \"textEntityTypeBotCommand\"\n}\nexport function textEntityTypeBotCommand(object: TLObject): TLTextEntityTypeBotCommand { return object as TLTextEntityTypeBotCommand }\nexport interface TLTextEntityTypeUrl extends TLObject {\n\treadonly \"@type\": \"textEntityTypeUrl\"\n}\nexport function textEntityTypeUrl(object: TLObject): TLTextEntityTypeUrl { return object as TLTextEntityTypeUrl }\nexport interface TLTextEntityTypeEmailAddress extends TLObject {\n\treadonly \"@type\": \"textEntityTypeEmailAddress\"\n}\nexport function textEntityTypeEmailAddress(object: TLObject): TLTextEntityTypeEmailAddress { return object as TLTextEntityTypeEmailAddress }\nexport interface TLTextEntityTypePhoneNumber extends TLObject {\n\treadonly \"@type\": \"textEntityTypePhoneNumber\"\n}\nexport function textEntityTypePhoneNumber(object: TLObject): TLTextEntityTypePhoneNumber { return object as TLTextEntityTypePhoneNumber }\nexport interface TLTextEntityTypeBold extends TLObject {\n\treadonly \"@type\": \"textEntityTypeBold\"\n}\nexport function textEntityTypeBold(object: TLObject): TLTextEntityTypeBold { return object as TLTextEntityTypeBold }\nexport interface TLTextEntityTypeItalic extends TLObject {\n\treadonly \"@type\": \"textEntityTypeItalic\"\n}\nexport function textEntityTypeItalic(object: TLObject): TLTextEntityTypeItalic { return object as TLTextEntityTypeItalic }\nexport interface TLTextEntityTypeUnderline extends TLObject {\n\treadonly \"@type\": \"textEntityTypeUnderline\"\n}\nexport function textEntityTypeUnderline(object: TLObject): TLTextEntityTypeUnderline { return object as TLTextEntityTypeUnderline }\nexport interface TLTextEntityTypeStrikethrough extends TLObject {\n\treadonly \"@type\": \"textEntityTypeStrikethrough\"\n}\nexport function textEntityTypeStrikethrough(object: TLObject): TLTextEntityTypeStrikethrough { return object as TLTextEntityTypeStrikethrough }\nexport interface TLTextEntityTypeCode extends TLObject {\n\treadonly \"@type\": \"textEntityTypeCode\"\n}\nexport function textEntityTypeCode(object: TLObject): TLTextEntityTypeCode { return object as TLTextEntityTypeCode }\nexport interface TLTextEntityTypePre extends TLObject {\n\treadonly \"@type\": \"textEntityTypePre\"\n}\nexport function textEntityTypePre(object: TLObject): TLTextEntityTypePre { return object as TLTextEntityTypePre }\nexport interface TLTextEntityTypePreCode extends TLObject {\n\treadonly \"@type\": \"textEntityTypePreCode\"\n\treadonly language: string\n}\nexport function textEntityTypePreCode(object: TLObject): TLTextEntityTypePreCode { return object as TLTextEntityTypePreCode }\nexport interface TLTextEntityTypeTextUrl extends TLObject {\n\treadonly \"@type\": \"textEntityTypeTextUrl\"\n\treadonly url: string\n}\nexport function textEntityTypeTextUrl(object: TLObject): TLTextEntityTypeTextUrl { return object as TLTextEntityTypeTextUrl }\nexport interface TLTextEntityTypeMentionName extends TLObject {\n\treadonly \"@type\": \"textEntityTypeMentionName\"\n\treadonly user_id: number\n}\nexport function textEntityTypeMentionName(object: TLObject): TLTextEntityTypeMentionName { return object as TLTextEntityTypeMentionName }\nexport type TLTextEntityType = TLTextEntityTypeMention | TLTextEntityTypeHashtag | TLTextEntityTypeCashtag | TLTextEntityTypeBotCommand | TLTextEntityTypeUrl | TLTextEntityTypeEmailAddress | TLTextEntityTypePhoneNumber | TLTextEntityTypeBold | TLTextEntityTypeItalic | TLTextEntityTypeUnderline | TLTextEntityTypeStrikethrough | TLTextEntityTypeCode | TLTextEntityTypePre | TLTextEntityTypePreCode | TLTextEntityTypeTextUrl | TLTextEntityTypeMentionName\nexport interface TLInputThumbnail extends TLObject {\n\treadonly \"@type\": \"inputThumbnail\"\n\treadonly thumbnail: TLInputFile\n\treadonly width: number\n\treadonly height: number\n}\nexport function inputThumbnail(object: TLObject): TLInputThumbnail { return object as TLInputThumbnail }\nexport interface TLMessageSchedulingStateSendAtDate extends TLObject {\n\treadonly \"@type\": \"messageSchedulingStateSendAtDate\"\n\treadonly send_date: number\n}\nexport function messageSchedulingStateSendAtDate(object: TLObject): TLMessageSchedulingStateSendAtDate { return object as TLMessageSchedulingStateSendAtDate }\nexport interface TLMessageSchedulingStateSendWhenOnline extends TLObject {\n\treadonly \"@type\": \"messageSchedulingStateSendWhenOnline\"\n}\nexport function messageSchedulingStateSendWhenOnline(object: TLObject): TLMessageSchedulingStateSendWhenOnline { return object as TLMessageSchedulingStateSendWhenOnline }\nexport type TLMessageSchedulingState = TLMessageSchedulingStateSendAtDate | TLMessageSchedulingStateSendWhenOnline\nexport interface TLSendMessageOptions extends TLObject {\n\treadonly \"@type\": \"sendMessageOptions\"\n\treadonly disable_notification: boolean\n\treadonly from_background: boolean\n\treadonly scheduling_state: TLMessageSchedulingState\n}\nexport function sendMessageOptions(object: TLObject): TLSendMessageOptions { return object as TLSendMessageOptions }\nexport interface TLInputMessageText extends TLObject {\n\treadonly \"@type\": \"inputMessageText\"\n\treadonly text: TLFormattedText\n\treadonly disable_web_page_preview: boolean\n\treadonly clear_draft: boolean\n}\nexport function inputMessageText(object: TLObject): TLInputMessageText { return object as TLInputMessageText }\nexport interface TLInputMessageAnimation extends TLObject {\n\treadonly \"@type\": \"inputMessageAnimation\"\n\treadonly animation: TLInputFile\n\treadonly thumbnail: TLInputThumbnail\n\treadonly duration: number\n\treadonly width: number\n\treadonly height: number\n\treadonly caption: TLFormattedText\n}\nexport function inputMessageAnimation(object: TLObject): TLInputMessageAnimation { return object as TLInputMessageAnimation }\nexport interface TLInputMessageAudio extends TLObject {\n\treadonly \"@type\": \"inputMessageAudio\"\n\treadonly audio: TLInputFile\n\treadonly album_cover_thumbnail: TLInputThumbnail\n\treadonly duration: number\n\treadonly title: string\n\treadonly performer: string\n\treadonly caption: TLFormattedText\n}\nexport function inputMessageAudio(object: TLObject): TLInputMessageAudio { return object as TLInputMessageAudio }\nexport interface TLInputMessageDocument extends TLObject {\n\treadonly \"@type\": \"inputMessageDocument\"\n\treadonly document: TLInputFile\n\treadonly thumbnail: TLInputThumbnail\n\treadonly caption: TLFormattedText\n}\nexport function inputMessageDocument(object: TLObject): TLInputMessageDocument { return object as TLInputMessageDocument }\nexport interface TLInputMessagePhoto extends TLObject {\n\treadonly \"@type\": \"inputMessagePhoto\"\n\treadonly photo: TLInputFile\n\treadonly thumbnail: TLInputThumbnail\n\treadonly added_sticker_file_ids: ReadonlyArray<number>\n\treadonly width: number\n\treadonly height: number\n\treadonly caption: TLFormattedText\n\treadonly ttl: number\n}\nexport function inputMessagePhoto(object: TLObject): TLInputMessagePhoto { return object as TLInputMessagePhoto }\nexport interface TLInputMessageSticker extends TLObject {\n\treadonly \"@type\": \"inputMessageSticker\"\n\treadonly sticker: TLInputFile\n\treadonly thumbnail: TLInputThumbnail\n\treadonly width: number\n\treadonly height: number\n}\nexport function inputMessageSticker(object: TLObject): TLInputMessageSticker { return object as TLInputMessageSticker }\nexport interface TLInputMessageVideo extends TLObject {\n\treadonly \"@type\": \"inputMessageVideo\"\n\treadonly video: TLInputFile\n\treadonly thumbnail: TLInputThumbnail\n\treadonly added_sticker_file_ids: ReadonlyArray<number>\n\treadonly duration: number\n\treadonly width: number\n\treadonly height: number\n\treadonly supports_streaming: boolean\n\treadonly caption: TLFormattedText\n\treadonly ttl: number\n}\nexport function inputMessageVideo(object: TLObject): TLInputMessageVideo { return object as TLInputMessageVideo }\nexport interface TLInputMessageVideoNote extends TLObject {\n\treadonly \"@type\": \"inputMessageVideoNote\"\n\treadonly video_note: TLInputFile\n\treadonly thumbnail: TLInputThumbnail\n\treadonly duration: number\n\treadonly length: number\n}\nexport function inputMessageVideoNote(object: TLObject): TLInputMessageVideoNote { return object as TLInputMessageVideoNote }\nexport interface TLInputMessageVoiceNote extends TLObject {\n\treadonly \"@type\": \"inputMessageVoiceNote\"\n\treadonly voice_note: TLInputFile\n\treadonly duration: number\n\treadonly waveform: Uint8Array\n\treadonly caption: TLFormattedText\n}\nexport function inputMessageVoiceNote(object: TLObject): TLInputMessageVoiceNote { return object as TLInputMessageVoiceNote }\nexport interface TLInputMessageLocation extends TLObject {\n\treadonly \"@type\": \"inputMessageLocation\"\n\treadonly location: TLLocation\n\treadonly live_period: number\n}\nexport function inputMessageLocation(object: TLObject): TLInputMessageLocation { return object as TLInputMessageLocation }\nexport interface TLInputMessageVenue extends TLObject {\n\treadonly \"@type\": \"inputMessageVenue\"\n\treadonly venue: TLVenue\n}\nexport function inputMessageVenue(object: TLObject): TLInputMessageVenue { return object as TLInputMessageVenue }\nexport interface TLInputMessageContact extends TLObject {\n\treadonly \"@type\": \"inputMessageContact\"\n\treadonly contact: TLContact\n}\nexport function inputMessageContact(object: TLObject): TLInputMessageContact { return object as TLInputMessageContact }\nexport interface TLInputMessageGame extends TLObject {\n\treadonly \"@type\": \"inputMessageGame\"\n\treadonly bot_user_id: number\n\treadonly game_short_name: string\n}\nexport function inputMessageGame(object: TLObject): TLInputMessageGame { return object as TLInputMessageGame }\nexport interface TLInputMessageInvoice extends TLObject {\n\treadonly \"@type\": \"inputMessageInvoice\"\n\treadonly invoice: TLInvoice\n\treadonly title: string\n\treadonly description: string\n\treadonly photo_url: string\n\treadonly photo_size: number\n\treadonly photo_width: number\n\treadonly photo_height: number\n\treadonly payload: Uint8Array\n\treadonly provider_token: string\n\treadonly provider_data: string\n\treadonly start_parameter: string\n}\nexport function inputMessageInvoice(object: TLObject): TLInputMessageInvoice { return object as TLInputMessageInvoice }\nexport interface TLInputMessagePoll extends TLObject {\n\treadonly \"@type\": \"inputMessagePoll\"\n\treadonly question: string\n\treadonly options: ReadonlyArray<string>\n\treadonly is_anonymous: boolean\n\treadonly type: TLPollType\n\treadonly is_closed: boolean\n}\nexport function inputMessagePoll(object: TLObject): TLInputMessagePoll { return object as TLInputMessagePoll }\nexport interface TLInputMessageForwarded extends TLObject {\n\treadonly \"@type\": \"inputMessageForwarded\"\n\treadonly from_chat_id: number\n\treadonly message_id: number\n\treadonly in_game_share: boolean\n\treadonly send_copy: boolean\n\treadonly remove_caption: boolean\n}\nexport function inputMessageForwarded(object: TLObject): TLInputMessageForwarded { return object as TLInputMessageForwarded }\nexport type TLInputMessageContent = TLInputMessageText | TLInputMessageAnimation | TLInputMessageAudio | TLInputMessageDocument | TLInputMessagePhoto | TLInputMessageSticker | TLInputMessageVideo | TLInputMessageVideoNote | TLInputMessageVoiceNote | TLInputMessageLocation | TLInputMessageVenue | TLInputMessageContact | TLInputMessageGame | TLInputMessageInvoice | TLInputMessagePoll | TLInputMessageForwarded\nexport interface TLSearchMessagesFilterEmpty extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterEmpty\"\n}\nexport function searchMessagesFilterEmpty(object: TLObject): TLSearchMessagesFilterEmpty { return object as TLSearchMessagesFilterEmpty }\nexport interface TLSearchMessagesFilterAnimation extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterAnimation\"\n}\nexport function searchMessagesFilterAnimation(object: TLObject): TLSearchMessagesFilterAnimation { return object as TLSearchMessagesFilterAnimation }\nexport interface TLSearchMessagesFilterAudio extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterAudio\"\n}\nexport function searchMessagesFilterAudio(object: TLObject): TLSearchMessagesFilterAudio { return object as TLSearchMessagesFilterAudio }\nexport interface TLSearchMessagesFilterDocument extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterDocument\"\n}\nexport function searchMessagesFilterDocument(object: TLObject): TLSearchMessagesFilterDocument { return object as TLSearchMessagesFilterDocument }\nexport interface TLSearchMessagesFilterPhoto extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterPhoto\"\n}\nexport function searchMessagesFilterPhoto(object: TLObject): TLSearchMessagesFilterPhoto { return object as TLSearchMessagesFilterPhoto }\nexport interface TLSearchMessagesFilterVideo extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterVideo\"\n}\nexport function searchMessagesFilterVideo(object: TLObject): TLSearchMessagesFilterVideo { return object as TLSearchMessagesFilterVideo }\nexport interface TLSearchMessagesFilterVoiceNote extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterVoiceNote\"\n}\nexport function searchMessagesFilterVoiceNote(object: TLObject): TLSearchMessagesFilterVoiceNote { return object as TLSearchMessagesFilterVoiceNote }\nexport interface TLSearchMessagesFilterPhotoAndVideo extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterPhotoAndVideo\"\n}\nexport function searchMessagesFilterPhotoAndVideo(object: TLObject): TLSearchMessagesFilterPhotoAndVideo { return object as TLSearchMessagesFilterPhotoAndVideo }\nexport interface TLSearchMessagesFilterUrl extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterUrl\"\n}\nexport function searchMessagesFilterUrl(object: TLObject): TLSearchMessagesFilterUrl { return object as TLSearchMessagesFilterUrl }\nexport interface TLSearchMessagesFilterChatPhoto extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterChatPhoto\"\n}\nexport function searchMessagesFilterChatPhoto(object: TLObject): TLSearchMessagesFilterChatPhoto { return object as TLSearchMessagesFilterChatPhoto }\nexport interface TLSearchMessagesFilterCall extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterCall\"\n}\nexport function searchMessagesFilterCall(object: TLObject): TLSearchMessagesFilterCall { return object as TLSearchMessagesFilterCall }\nexport interface TLSearchMessagesFilterMissedCall extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterMissedCall\"\n}\nexport function searchMessagesFilterMissedCall(object: TLObject): TLSearchMessagesFilterMissedCall { return object as TLSearchMessagesFilterMissedCall }\nexport interface TLSearchMessagesFilterVideoNote extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterVideoNote\"\n}\nexport function searchMessagesFilterVideoNote(object: TLObject): TLSearchMessagesFilterVideoNote { return object as TLSearchMessagesFilterVideoNote }\nexport interface TLSearchMessagesFilterVoiceAndVideoNote extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterVoiceAndVideoNote\"\n}\nexport function searchMessagesFilterVoiceAndVideoNote(object: TLObject): TLSearchMessagesFilterVoiceAndVideoNote { return object as TLSearchMessagesFilterVoiceAndVideoNote }\nexport interface TLSearchMessagesFilterMention extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterMention\"\n}\nexport function searchMessagesFilterMention(object: TLObject): TLSearchMessagesFilterMention { return object as TLSearchMessagesFilterMention }\nexport interface TLSearchMessagesFilterUnreadMention extends TLObject {\n\treadonly \"@type\": \"searchMessagesFilterUnreadMention\"\n}\nexport function searchMessagesFilterUnreadMention(object: TLObject): TLSearchMessagesFilterUnreadMention { return object as TLSearchMessagesFilterUnreadMention }\nexport type TLSearchMessagesFilter = TLSearchMessagesFilterEmpty | TLSearchMessagesFilterAnimation | TLSearchMessagesFilterAudio | TLSearchMessagesFilterDocument | TLSearchMessagesFilterPhoto | TLSearchMessagesFilterVideo | TLSearchMessagesFilterVoiceNote | TLSearchMessagesFilterPhotoAndVideo | TLSearchMessagesFilterUrl | TLSearchMessagesFilterChatPhoto | TLSearchMessagesFilterCall | TLSearchMessagesFilterMissedCall | TLSearchMessagesFilterVideoNote | TLSearchMessagesFilterVoiceAndVideoNote | TLSearchMessagesFilterMention | TLSearchMessagesFilterUnreadMention\nexport interface TLChatActionTyping extends TLObject {\n\treadonly \"@type\": \"chatActionTyping\"\n}\nexport function chatActionTyping(object: TLObject): TLChatActionTyping { return object as TLChatActionTyping }\nexport interface TLChatActionRecordingVideo extends TLObject {\n\treadonly \"@type\": \"chatActionRecordingVideo\"\n}\nexport function chatActionRecordingVideo(object: TLObject): TLChatActionRecordingVideo { return object as TLChatActionRecordingVideo }\nexport interface TLChatActionUploadingVideo extends TLObject {\n\treadonly \"@type\": \"chatActionUploadingVideo\"\n\treadonly progress: number\n}\nexport function chatActionUploadingVideo(object: TLObject): TLChatActionUploadingVideo { return object as TLChatActionUploadingVideo }\nexport interface TLChatActionRecordingVoiceNote extends TLObject {\n\treadonly \"@type\": \"chatActionRecordingVoiceNote\"\n}\nexport function chatActionRecordingVoiceNote(object: TLObject): TLChatActionRecordingVoiceNote { return object as TLChatActionRecordingVoiceNote }\nexport interface TLChatActionUploadingVoiceNote extends TLObject {\n\treadonly \"@type\": \"chatActionUploadingVoiceNote\"\n\treadonly progress: number\n}\nexport function chatActionUploadingVoiceNote(object: TLObject): TLChatActionUploadingVoiceNote { return object as TLChatActionUploadingVoiceNote }\nexport interface TLChatActionUploadingPhoto extends TLObject {\n\treadonly \"@type\": \"chatActionUploadingPhoto\"\n\treadonly progress: number\n}\nexport function chatActionUploadingPhoto(object: TLObject): TLChatActionUploadingPhoto { return object as TLChatActionUploadingPhoto }\nexport interface TLChatActionUploadingDocument extends TLObject {\n\treadonly \"@type\": \"chatActionUploadingDocument\"\n\treadonly progress: number\n}\nexport function chatActionUploadingDocument(object: TLObject): TLChatActionUploadingDocument { return object as TLChatActionUploadingDocument }\nexport interface TLChatActionChoosingLocation extends TLObject {\n\treadonly \"@type\": \"chatActionChoosingLocation\"\n}\nexport function chatActionChoosingLocation(object: TLObject): TLChatActionChoosingLocation { return object as TLChatActionChoosingLocation }\nexport interface TLChatActionChoosingContact extends TLObject {\n\treadonly \"@type\": \"chatActionChoosingContact\"\n}\nexport function chatActionChoosingContact(object: TLObject): TLChatActionChoosingContact { return object as TLChatActionChoosingContact }\nexport interface TLChatActionStartPlayingGame extends TLObject {\n\treadonly \"@type\": \"chatActionStartPlayingGame\"\n}\nexport function chatActionStartPlayingGame(object: TLObject): TLChatActionStartPlayingGame { return object as TLChatActionStartPlayingGame }\nexport interface TLChatActionRecordingVideoNote extends TLObject {\n\treadonly \"@type\": \"chatActionRecordingVideoNote\"\n}\nexport function chatActionRecordingVideoNote(object: TLObject): TLChatActionRecordingVideoNote { return object as TLChatActionRecordingVideoNote }\nexport interface TLChatActionUploadingVideoNote extends TLObject {\n\treadonly \"@type\": \"chatActionUploadingVideoNote\"\n\treadonly progress: number\n}\nexport function chatActionUploadingVideoNote(object: TLObject): TLChatActionUploadingVideoNote { return object as TLChatActionUploadingVideoNote }\nexport interface TLChatActionCancel extends TLObject {\n\treadonly \"@type\": \"chatActionCancel\"\n}\nexport function chatActionCancel(object: TLObject): TLChatActionCancel { return object as TLChatActionCancel }\nexport type TLChatAction = TLChatActionTyping | TLChatActionRecordingVideo | TLChatActionUploadingVideo | TLChatActionRecordingVoiceNote | TLChatActionUploadingVoiceNote | TLChatActionUploadingPhoto | TLChatActionUploadingDocument | TLChatActionChoosingLocation | TLChatActionChoosingContact | TLChatActionStartPlayingGame | TLChatActionRecordingVideoNote | TLChatActionUploadingVideoNote | TLChatActionCancel\nexport interface TLUserStatusEmpty extends TLObject {\n\treadonly \"@type\": \"userStatusEmpty\"\n}\nexport function userStatusEmpty(object: TLObject): TLUserStatusEmpty { return object as TLUserStatusEmpty }\nexport interface TLUserStatusOnline extends TLObject {\n\treadonly \"@type\": \"userStatusOnline\"\n\treadonly expires: number\n}\nexport function userStatusOnline(object: TLObject): TLUserStatusOnline { return object as TLUserStatusOnline }\nexport interface TLUserStatusOffline extends TLObject {\n\treadonly \"@type\": \"userStatusOffline\"\n\treadonly was_online: number\n}\nexport function userStatusOffline(object: TLObject): TLUserStatusOffline { return object as TLUserStatusOffline }\nexport interface TLUserStatusRecently extends TLObject {\n\treadonly \"@type\": \"userStatusRecently\"\n}\nexport function userStatusRecently(object: TLObject): TLUserStatusRecently { return object as TLUserStatusRecently }\nexport interface TLUserStatusLastWeek extends TLObject {\n\treadonly \"@type\": \"userStatusLastWeek\"\n}\nexport function userStatusLastWeek(object: TLObject): TLUserStatusLastWeek { return object as TLUserStatusLastWeek }\nexport interface TLUserStatusLastMonth extends TLObject {\n\treadonly \"@type\": \"userStatusLastMonth\"\n}\nexport function userStatusLastMonth(object: TLObject): TLUserStatusLastMonth { return object as TLUserStatusLastMonth }\nexport type TLUserStatus = TLUserStatusEmpty | TLUserStatusOnline | TLUserStatusOffline | TLUserStatusRecently | TLUserStatusLastWeek | TLUserStatusLastMonth\nexport interface TLStickers extends TLObject {\n\treadonly \"@type\": \"stickers\"\n\treadonly stickers: ReadonlyArray<TLSticker>\n}\nexport function stickers(object: TLObject): TLStickers { return object as TLStickers }\nexport interface TLEmojis extends TLObject {\n\treadonly \"@type\": \"emojis\"\n\treadonly emojis: ReadonlyArray<string>\n}\nexport function emojis(object: TLObject): TLEmojis { return object as TLEmojis }\nexport interface TLStickerSet extends TLObject {\n\treadonly \"@type\": \"stickerSet\"\n\treadonly id: string\n\treadonly title: string\n\treadonly name: string\n\treadonly thumbnail: TLPhotoSize\n\treadonly is_installed: boolean\n\treadonly is_archived: boolean\n\treadonly is_official: boolean\n\treadonly is_animated: boolean\n\treadonly is_masks: boolean\n\treadonly is_viewed: boolean\n\treadonly stickers: ReadonlyArray<TLSticker>\n\treadonly emojis: ReadonlyArray<TLEmojis>\n}\nexport function stickerSet(object: TLObject): TLStickerSet { return object as TLStickerSet }\nexport interface TLStickerSetInfo extends TLObject {\n\treadonly \"@type\": \"stickerSetInfo\"\n\treadonly id: string\n\treadonly title: string\n\treadonly name: string\n\treadonly thumbnail: TLPhotoSize\n\treadonly is_installed: boolean\n\treadonly is_archived: boolean\n\treadonly is_official: boolean\n\treadonly is_animated: boolean\n\treadonly is_masks: boolean\n\treadonly is_viewed: boolean\n\treadonly size: number\n\treadonly covers: ReadonlyArray<TLSticker>\n}\nexport function stickerSetInfo(object: TLObject): TLStickerSetInfo { return object as TLStickerSetInfo }\nexport interface TLStickerSets extends TLObject {\n\treadonly \"@type\": \"stickerSets\"\n\treadonly total_count: number\n\treadonly sets: ReadonlyArray<TLStickerSetInfo>\n}\nexport function stickerSets(object: TLObject): TLStickerSets { return object as TLStickerSets }\nexport interface TLCallDiscardReasonEmpty extends TLObject {\n\treadonly \"@type\": \"callDiscardReasonEmpty\"\n}\nexport function callDiscardReasonEmpty(object: TLObject): TLCallDiscardReasonEmpty { return object as TLCallDiscardReasonEmpty }\nexport interface TLCallDiscardReasonMissed extends TLObject {\n\treadonly \"@type\": \"callDiscardReasonMissed\"\n}\nexport function callDiscardReasonMissed(object: TLObject): TLCallDiscardReasonMissed { return object as TLCallDiscardReasonMissed }\nexport interface TLCallDiscardReasonDeclined extends TLObject {\n\treadonly \"@type\": \"callDiscardReasonDeclined\"\n}\nexport function callDiscardReasonDeclined(object: TLObject): TLCallDiscardReasonDeclined { return object as TLCallDiscardReasonDeclined }\nexport interface TLCallDiscardReasonDisconnected extends TLObject {\n\treadonly \"@type\": \"callDiscardReasonDisconnected\"\n}\nexport function callDiscardReasonDisconnected(object: TLObject): TLCallDiscardReasonDisconnected { return object as TLCallDiscardReasonDisconnected }\nexport interface TLCallDiscardReasonHungUp extends TLObject {\n\treadonly \"@type\": \"callDiscardReasonHungUp\"\n}\nexport function callDiscardReasonHungUp(object: TLObject): TLCallDiscardReasonHungUp { return object as TLCallDiscardReasonHungUp }\nexport type TLCallDiscardReason = TLCallDiscardReasonEmpty | TLCallDiscardReasonMissed | TLCallDiscardReasonDeclined | TLCallDiscardReasonDisconnected | TLCallDiscardReasonHungUp\nexport interface TLCallProtocol extends TLObject {\n\treadonly \"@type\": \"callProtocol\"\n\treadonly udp_p2p: boolean\n\treadonly udp_reflector: boolean\n\treadonly min_layer: number\n\treadonly max_layer: number\n}\nexport function callProtocol(object: TLObject): TLCallProtocol { return object as TLCallProtocol }\nexport interface TLCallConnection extends TLObject {\n\treadonly \"@type\": \"callConnection\"\n\treadonly id: string\n\treadonly ip: string\n\treadonly ipv6: string\n\treadonly port: number\n\treadonly peer_tag: Uint8Array\n}\nexport function callConnection(object: TLObject): TLCallConnection { return object as TLCallConnection }\nexport interface TLCallId extends TLObject {\n\treadonly \"@type\": \"callId\"\n\treadonly id: number\n}\nexport function callId(object: TLObject): TLCallId { return object as TLCallId }\nexport interface TLCallStatePending extends TLObject {\n\treadonly \"@type\": \"callStatePending\"\n\treadonly is_created: boolean\n\treadonly is_received: boolean\n}\nexport function callStatePending(object: TLObject): TLCallStatePending { return object as TLCallStatePending }\nexport interface TLCallStateExchangingKeys extends TLObject {\n\treadonly \"@type\": \"callStateExchangingKeys\"\n}\nexport function callStateExchangingKeys(object: TLObject): TLCallStateExchangingKeys { return object as TLCallStateExchangingKeys }\nexport interface TLCallStateReady extends TLObject {\n\treadonly \"@type\": \"callStateReady\"\n\treadonly protocol: TLCallProtocol\n\treadonly connections: ReadonlyArray<TLCallConnection>\n\treadonly config: string\n\treadonly encryption_key: Uint8Array\n\treadonly emojis: ReadonlyArray<string>\n\treadonly allow_p2p: boolean\n}\nexport function callStateReady(object: TLObject): TLCallStateReady { return object as TLCallStateReady }\nexport interface TLCallStateHangingUp extends TLObject {\n\treadonly \"@type\": \"callStateHangingUp\"\n}\nexport function callStateHangingUp(object: TLObject): TLCallStateHangingUp { return object as TLCallStateHangingUp }\nexport interface TLCallStateDiscarded extends TLObject {\n\treadonly \"@type\": \"callStateDiscarded\"\n\treadonly reason: TLCallDiscardReason\n\treadonly need_rating: boolean\n\treadonly need_debug_information: boolean\n}\nexport function callStateDiscarded(object: TLObject): TLCallStateDiscarded { return object as TLCallStateDiscarded }\nexport interface TLCallStateError extends TLObject {\n\treadonly \"@type\": \"callStateError\"\n\treadonly error: TLError\n}\nexport function callStateError(object: TLObject): TLCallStateError { return object as TLCallStateError }\nexport type TLCallState = TLCallStatePending | TLCallStateExchangingKeys | TLCallStateReady | TLCallStateHangingUp | TLCallStateDiscarded | TLCallStateError\nexport interface TLCallProblemEcho extends TLObject {\n\treadonly \"@type\": \"callProblemEcho\"\n}\nexport function callProblemEcho(object: TLObject): TLCallProblemEcho { return object as TLCallProblemEcho }\nexport interface TLCallProblemNoise extends TLObject {\n\treadonly \"@type\": \"callProblemNoise\"\n}\nexport function callProblemNoise(object: TLObject): TLCallProblemNoise { return object as TLCallProblemNoise }\nexport interface TLCallProblemInterruptions extends TLObject {\n\treadonly \"@type\": \"callProblemInterruptions\"\n}\nexport function callProblemInterruptions(object: TLObject): TLCallProblemInterruptions { return object as TLCallProblemInterruptions }\nexport interface TLCallProblemDistortedSpeech extends TLObject {\n\treadonly \"@type\": \"callProblemDistortedSpeech\"\n}\nexport function callProblemDistortedSpeech(object: TLObject): TLCallProblemDistortedSpeech { return object as TLCallProblemDistortedSpeech }\nexport interface TLCallProblemSilentLocal extends TLObject {\n\treadonly \"@type\": \"callProblemSilentLocal\"\n}\nexport function callProblemSilentLocal(object: TLObject): TLCallProblemSilentLocal { return object as TLCallProblemSilentLocal }\nexport interface TLCallProblemSilentRemote extends TLObject {\n\treadonly \"@type\": \"callProblemSilentRemote\"\n}\nexport function callProblemSilentRemote(object: TLObject): TLCallProblemSilentRemote { return object as TLCallProblemSilentRemote }\nexport interface TLCallProblemDropped extends TLObject {\n\treadonly \"@type\": \"callProblemDropped\"\n}\nexport function callProblemDropped(object: TLObject): TLCallProblemDropped { return object as TLCallProblemDropped }\nexport type TLCallProblem = TLCallProblemEcho | TLCallProblemNoise | TLCallProblemInterruptions | TLCallProblemDistortedSpeech | TLCallProblemSilentLocal | TLCallProblemSilentRemote | TLCallProblemDropped\nexport interface TLCall extends TLObject {\n\treadonly \"@type\": \"call\"\n\treadonly id: number\n\treadonly user_id: number\n\treadonly is_outgoing: boolean\n\treadonly state: TLCallState\n}\nexport function call(object: TLObject): TLCall { return object as TLCall }\nexport interface TLPhoneNumberAuthenticationSettings extends TLObject {\n\treadonly \"@type\": \"phoneNumberAuthenticationSettings\"\n\treadonly allow_flash_call: boolean\n\treadonly is_current_phone_number: boolean\n\treadonly allow_sms_retriever_api: boolean\n}\nexport function phoneNumberAuthenticationSettings(object: TLObject): TLPhoneNumberAuthenticationSettings { return object as TLPhoneNumberAuthenticationSettings }\nexport interface TLAnimations extends TLObject {\n\treadonly \"@type\": \"animations\"\n\treadonly animations: ReadonlyArray<TLAnimation>\n}\nexport function animations(object: TLObject): TLAnimations { return object as TLAnimations }\nexport interface TLImportedContacts extends TLObject {\n\treadonly \"@type\": \"importedContacts\"\n\treadonly user_ids: ReadonlyArray<number>\n\treadonly importer_count: ReadonlyArray<number>\n}\nexport function importedContacts(object: TLObject): TLImportedContacts { return object as TLImportedContacts }\nexport interface TLHttpUrl extends TLObject {\n\treadonly \"@type\": \"httpUrl\"\n\treadonly url: string\n}\nexport function httpUrl(object: TLObject): TLHttpUrl { return object as TLHttpUrl }\nexport interface TLInputInlineQueryResultAnimatedGif extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultAnimatedGif\"\n\treadonly id: string\n\treadonly title: string\n\treadonly thumbnail_url: string\n\treadonly gif_url: string\n\treadonly gif_duration: number\n\treadonly gif_width: number\n\treadonly gif_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultAnimatedGif(object: TLObject): TLInputInlineQueryResultAnimatedGif { return object as TLInputInlineQueryResultAnimatedGif }\nexport interface TLInputInlineQueryResultAnimatedMpeg4 extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultAnimatedMpeg4\"\n\treadonly id: string\n\treadonly title: string\n\treadonly thumbnail_url: string\n\treadonly mpeg4_url: string\n\treadonly mpeg4_duration: number\n\treadonly mpeg4_width: number\n\treadonly mpeg4_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultAnimatedMpeg4(object: TLObject): TLInputInlineQueryResultAnimatedMpeg4 { return object as TLInputInlineQueryResultAnimatedMpeg4 }\nexport interface TLInputInlineQueryResultArticle extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultArticle\"\n\treadonly id: string\n\treadonly url: string\n\treadonly hide_url: boolean\n\treadonly title: string\n\treadonly description: string\n\treadonly thumbnail_url: string\n\treadonly thumbnail_width: number\n\treadonly thumbnail_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultArticle(object: TLObject): TLInputInlineQueryResultArticle { return object as TLInputInlineQueryResultArticle }\nexport interface TLInputInlineQueryResultAudio extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultAudio\"\n\treadonly id: string\n\treadonly title: string\n\treadonly performer: string\n\treadonly audio_url: string\n\treadonly audio_duration: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultAudio(object: TLObject): TLInputInlineQueryResultAudio { return object as TLInputInlineQueryResultAudio }\nexport interface TLInputInlineQueryResultContact extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultContact\"\n\treadonly id: string\n\treadonly contact: TLContact\n\treadonly thumbnail_url: string\n\treadonly thumbnail_width: number\n\treadonly thumbnail_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultContact(object: TLObject): TLInputInlineQueryResultContact { return object as TLInputInlineQueryResultContact }\nexport interface TLInputInlineQueryResultDocument extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultDocument\"\n\treadonly id: string\n\treadonly title: string\n\treadonly description: string\n\treadonly document_url: string\n\treadonly mime_type: string\n\treadonly thumbnail_url: string\n\treadonly thumbnail_width: number\n\treadonly thumbnail_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultDocument(object: TLObject): TLInputInlineQueryResultDocument { return object as TLInputInlineQueryResultDocument }\nexport interface TLInputInlineQueryResultGame extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultGame\"\n\treadonly id: string\n\treadonly game_short_name: string\n\treadonly reply_markup: TLReplyMarkup\n}\nexport function inputInlineQueryResultGame(object: TLObject): TLInputInlineQueryResultGame { return object as TLInputInlineQueryResultGame }\nexport interface TLInputInlineQueryResultLocation extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultLocation\"\n\treadonly id: string\n\treadonly location: TLLocation\n\treadonly live_period: number\n\treadonly title: string\n\treadonly thumbnail_url: string\n\treadonly thumbnail_width: number\n\treadonly thumbnail_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultLocation(object: TLObject): TLInputInlineQueryResultLocation { return object as TLInputInlineQueryResultLocation }\nexport interface TLInputInlineQueryResultPhoto extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultPhoto\"\n\treadonly id: string\n\treadonly title: string\n\treadonly description: string\n\treadonly thumbnail_url: string\n\treadonly photo_url: string\n\treadonly photo_width: number\n\treadonly photo_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultPhoto(object: TLObject): TLInputInlineQueryResultPhoto { return object as TLInputInlineQueryResultPhoto }\nexport interface TLInputInlineQueryResultSticker extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultSticker\"\n\treadonly id: string\n\treadonly thumbnail_url: string\n\treadonly sticker_url: string\n\treadonly sticker_width: number\n\treadonly sticker_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultSticker(object: TLObject): TLInputInlineQueryResultSticker { return object as TLInputInlineQueryResultSticker }\nexport interface TLInputInlineQueryResultVenue extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultVenue\"\n\treadonly id: string\n\treadonly venue: TLVenue\n\treadonly thumbnail_url: string\n\treadonly thumbnail_width: number\n\treadonly thumbnail_height: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultVenue(object: TLObject): TLInputInlineQueryResultVenue { return object as TLInputInlineQueryResultVenue }\nexport interface TLInputInlineQueryResultVideo extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultVideo\"\n\treadonly id: string\n\treadonly title: string\n\treadonly description: string\n\treadonly thumbnail_url: string\n\treadonly video_url: string\n\treadonly mime_type: string\n\treadonly video_width: number\n\treadonly video_height: number\n\treadonly video_duration: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultVideo(object: TLObject): TLInputInlineQueryResultVideo { return object as TLInputInlineQueryResultVideo }\nexport interface TLInputInlineQueryResultVoiceNote extends TLObject {\n\treadonly \"@type\": \"inputInlineQueryResultVoiceNote\"\n\treadonly id: string\n\treadonly title: string\n\treadonly voice_note_url: string\n\treadonly voice_note_duration: number\n\treadonly reply_markup: TLReplyMarkup\n\treadonly input_message_content: TLInputMessageContent\n}\nexport function inputInlineQueryResultVoiceNote(object: TLObject): TLInputInlineQueryResultVoiceNote { return object as TLInputInlineQueryResultVoiceNote }\nexport type TLInputInlineQueryResult = TLInputInlineQueryResultAnimatedGif | TLInputInlineQueryResultAnimatedMpeg4 | TLInputInlineQueryResultArticle | TLInputInlineQueryResultAudio | TLInputInlineQueryResultContact | TLInputInlineQueryResultDocument | TLInputInlineQueryResultGame | TLInputInlineQueryResultLocation | TLInputInlineQueryResultPhoto | TLInputInlineQueryResultSticker | TLInputInlineQueryResultVenue | TLInputInlineQueryResultVideo | TLInputInlineQueryResultVoiceNote\nexport interface TLInlineQueryResultArticle extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultArticle\"\n\treadonly id: string\n\treadonly url: string\n\treadonly hide_url: boolean\n\treadonly title: string\n\treadonly description: string\n\treadonly thumbnail: TLPhotoSize\n}\nexport function inlineQueryResultArticle(object: TLObject): TLInlineQueryResultArticle { return object as TLInlineQueryResultArticle }\nexport interface TLInlineQueryResultContact extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultContact\"\n\treadonly id: string\n\treadonly contact: TLContact\n\treadonly thumbnail: TLPhotoSize\n}\nexport function inlineQueryResultContact(object: TLObject): TLInlineQueryResultContact { return object as TLInlineQueryResultContact }\nexport interface TLInlineQueryResultLocation extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultLocation\"\n\treadonly id: string\n\treadonly location: TLLocation\n\treadonly title: string\n\treadonly thumbnail: TLPhotoSize\n}\nexport function inlineQueryResultLocation(object: TLObject): TLInlineQueryResultLocation { return object as TLInlineQueryResultLocation }\nexport interface TLInlineQueryResultVenue extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultVenue\"\n\treadonly id: string\n\treadonly venue: TLVenue\n\treadonly thumbnail: TLPhotoSize\n}\nexport function inlineQueryResultVenue(object: TLObject): TLInlineQueryResultVenue { return object as TLInlineQueryResultVenue }\nexport interface TLInlineQueryResultGame extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultGame\"\n\treadonly id: string\n\treadonly game: TLGame\n}\nexport function inlineQueryResultGame(object: TLObject): TLInlineQueryResultGame { return object as TLInlineQueryResultGame }\nexport interface TLInlineQueryResultAnimation extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultAnimation\"\n\treadonly id: string\n\treadonly animation: TLAnimation\n\treadonly title: string\n}\nexport function inlineQueryResultAnimation(object: TLObject): TLInlineQueryResultAnimation { return object as TLInlineQueryResultAnimation }\nexport interface TLInlineQueryResultAudio extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultAudio\"\n\treadonly id: string\n\treadonly audio: TLAudio\n}\nexport function inlineQueryResultAudio(object: TLObject): TLInlineQueryResultAudio { return object as TLInlineQueryResultAudio }\nexport interface TLInlineQueryResultDocument extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultDocument\"\n\treadonly id: string\n\treadonly document: TLDocument\n\treadonly title: string\n\treadonly description: string\n}\nexport function inlineQueryResultDocument(object: TLObject): TLInlineQueryResultDocument { return object as TLInlineQueryResultDocument }\nexport interface TLInlineQueryResultPhoto extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultPhoto\"\n\treadonly id: string\n\treadonly photo: TLPhoto\n\treadonly title: string\n\treadonly description: string\n}\nexport function inlineQueryResultPhoto(object: TLObject): TLInlineQueryResultPhoto { return object as TLInlineQueryResultPhoto }\nexport interface TLInlineQueryResultSticker extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultSticker\"\n\treadonly id: string\n\treadonly sticker: TLSticker\n}\nexport function inlineQueryResultSticker(object: TLObject): TLInlineQueryResultSticker { return object as TLInlineQueryResultSticker }\nexport interface TLInlineQueryResultVideo extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultVideo\"\n\treadonly id: string\n\treadonly video: TLVideo\n\treadonly title: string\n\treadonly description: string\n}\nexport function inlineQueryResultVideo(object: TLObject): TLInlineQueryResultVideo { return object as TLInlineQueryResultVideo }\nexport interface TLInlineQueryResultVoiceNote extends TLObject {\n\treadonly \"@type\": \"inlineQueryResultVoiceNote\"\n\treadonly id: string\n\treadonly voice_note: TLVoiceNote\n\treadonly title: string\n}\nexport function inlineQueryResultVoiceNote(object: TLObject): TLInlineQueryResultVoiceNote { return object as TLInlineQueryResultVoiceNote }\nexport type TLInlineQueryResult = TLInlineQueryResultArticle | TLInlineQueryResultContact | TLInlineQueryResultLocation | TLInlineQueryResultVenue | TLInlineQueryResultGame | TLInlineQueryResultAnimation | TLInlineQueryResultAudio | TLInlineQueryResultDocument | TLInlineQueryResultPhoto | TLInlineQueryResultSticker | TLInlineQueryResultVideo | TLInlineQueryResultVoiceNote\nexport interface TLInlineQueryResults extends TLObject {\n\treadonly \"@type\": \"inlineQueryResults\"\n\treadonly inline_query_id: string\n\treadonly next_offset: string\n\treadonly results: ReadonlyArray<TLInlineQueryResult>\n\treadonly switch_pm_text: string\n\treadonly switch_pm_parameter: string\n}\nexport function inlineQueryResults(object: TLObject): TLInlineQueryResults { return object as TLInlineQueryResults }\nexport interface TLCallbackQueryPayloadData extends TLObject {\n\treadonly \"@type\": \"callbackQueryPayloadData\"\n\treadonly data: Uint8Array\n}\nexport function callbackQueryPayloadData(object: TLObject): TLCallbackQueryPayloadData { return object as TLCallbackQueryPayloadData }\nexport interface TLCallbackQueryPayloadGame extends TLObject {\n\treadonly \"@type\": \"callbackQueryPayloadGame\"\n\treadonly game_short_name: string\n}\nexport function callbackQueryPayloadGame(object: TLObject): TLCallbackQueryPayloadGame { return object as TLCallbackQueryPayloadGame }\nexport type TLCallbackQueryPayload = TLCallbackQueryPayloadData | TLCallbackQueryPayloadGame\nexport interface TLCallbackQueryAnswer extends TLObject {\n\treadonly \"@type\": \"callbackQueryAnswer\"\n\treadonly text: string\n\treadonly show_alert: boolean\n\treadonly url: string\n}\nexport function callbackQueryAnswer(object: TLObject): TLCallbackQueryAnswer { return object as TLCallbackQueryAnswer }\nexport interface TLCustomRequestResult extends TLObject {\n\treadonly \"@type\": \"customRequestResult\"\n\treadonly result: string\n}\nexport function customRequestResult(object: TLObject): TLCustomRequestResult { return object as TLCustomRequestResult }\nexport interface TLGameHighScore extends TLObject {\n\treadonly \"@type\": \"gameHighScore\"\n\treadonly position: number\n\treadonly user_id: number\n\treadonly score: number\n}\nexport function gameHighScore(object: TLObject): TLGameHighScore { return object as TLGameHighScore }\nexport interface TLGameHighScores extends TLObject {\n\treadonly \"@type\": \"gameHighScores\"\n\treadonly scores: ReadonlyArray<TLGameHighScore>\n}\nexport function gameHighScores(object: TLObject): TLGameHighScores { return object as TLGameHighScores }\nexport interface TLChatEventMessageEdited extends TLObject {\n\treadonly \"@type\": \"chatEventMessageEdited\"\n\treadonly old_message: TLMessage\n\treadonly new_message: TLMessage\n}\nexport function chatEventMessageEdited(object: TLObject): TLChatEventMessageEdited { return object as TLChatEventMessageEdited }\nexport interface TLChatEventMessageDeleted extends TLObject {\n\treadonly \"@type\": \"chatEventMessageDeleted\"\n\treadonly message: TLMessage\n}\nexport function chatEventMessageDeleted(object: TLObject): TLChatEventMessageDeleted { return object as TLChatEventMessageDeleted }\nexport interface TLChatEventPollStopped extends TLObject {\n\treadonly \"@type\": \"chatEventPollStopped\"\n\treadonly message: TLMessage\n}\nexport function chatEventPollStopped(object: TLObject): TLChatEventPollStopped { return object as TLChatEventPollStopped }\nexport interface TLChatEventMessagePinned extends TLObject {\n\treadonly \"@type\": \"chatEventMessagePinned\"\n\treadonly message: TLMessage\n}\nexport function chatEventMessagePinned(object: TLObject): TLChatEventMessagePinned { return object as TLChatEventMessagePinned }\nexport interface TLChatEventMessageUnpinned extends TLObject {\n\treadonly \"@type\": \"chatEventMessageUnpinned\"\n}\nexport function chatEventMessageUnpinned(object: TLObject): TLChatEventMessageUnpinned { return object as TLChatEventMessageUnpinned }\nexport interface TLChatEventMemberJoined extends TLObject {\n\treadonly \"@type\": \"chatEventMemberJoined\"\n}\nexport function chatEventMemberJoined(object: TLObject): TLChatEventMemberJoined { return object as TLChatEventMemberJoined }\nexport interface TLChatEventMemberLeft extends TLObject {\n\treadonly \"@type\": \"chatEventMemberLeft\"\n}\nexport function chatEventMemberLeft(object: TLObject): TLChatEventMemberLeft { return object as TLChatEventMemberLeft }\nexport interface TLChatEventMemberInvited extends TLObject {\n\treadonly \"@type\": \"chatEventMemberInvited\"\n\treadonly user_id: number\n\treadonly status: TLChatMemberStatus\n}\nexport function chatEventMemberInvited(object: TLObject): TLChatEventMemberInvited { return object as TLChatEventMemberInvited }\nexport interface TLChatEventMemberPromoted extends TLObject {\n\treadonly \"@type\": \"chatEventMemberPromoted\"\n\treadonly user_id: number\n\treadonly old_status: TLChatMemberStatus\n\treadonly new_status: TLChatMemberStatus\n}\nexport function chatEventMemberPromoted(object: TLObject): TLChatEventMemberPromoted { return object as TLChatEventMemberPromoted }\nexport interface TLChatEventMemberRestricted extends TLObject {\n\treadonly \"@type\": \"chatEventMemberRestricted\"\n\treadonly user_id: number\n\treadonly old_status: TLChatMemberStatus\n\treadonly new_status: TLChatMemberStatus\n}\nexport function chatEventMemberRestricted(object: TLObject): TLChatEventMemberRestricted { return object as TLChatEventMemberRestricted }\nexport interface TLChatEventTitleChanged extends TLObject {\n\treadonly \"@type\": \"chatEventTitleChanged\"\n\treadonly old_title: string\n\treadonly new_title: string\n}\nexport function chatEventTitleChanged(object: TLObject): TLChatEventTitleChanged { return object as TLChatEventTitleChanged }\nexport interface TLChatEventPermissionsChanged extends TLObject {\n\treadonly \"@type\": \"chatEventPermissionsChanged\"\n\treadonly old_permissions: TLChatPermissions\n\treadonly new_permissions: TLChatPermissions\n}\nexport function chatEventPermissionsChanged(object: TLObject): TLChatEventPermissionsChanged { return object as TLChatEventPermissionsChanged }\nexport interface TLChatEventDescriptionChanged extends TLObject {\n\treadonly \"@type\": \"chatEventDescriptionChanged\"\n\treadonly old_description: string\n\treadonly new_description: string\n}\nexport function chatEventDescriptionChanged(object: TLObject): TLChatEventDescriptionChanged { return object as TLChatEventDescriptionChanged }\nexport interface TLChatEventUsernameChanged extends TLObject {\n\treadonly \"@type\": \"chatEventUsernameChanged\"\n\treadonly old_username: string\n\treadonly new_username: string\n}\nexport function chatEventUsernameChanged(object: TLObject): TLChatEventUsernameChanged { return object as TLChatEventUsernameChanged }\nexport interface TLChatEventPhotoChanged extends TLObject {\n\treadonly \"@type\": \"chatEventPhotoChanged\"\n\treadonly old_photo: TLPhoto\n\treadonly new_photo: TLPhoto\n}\nexport function chatEventPhotoChanged(object: TLObject): TLChatEventPhotoChanged { return object as TLChatEventPhotoChanged }\nexport interface TLChatEventInvitesToggled extends TLObject {\n\treadonly \"@type\": \"chatEventInvitesToggled\"\n\treadonly can_invite_users: boolean\n}\nexport function chatEventInvitesToggled(object: TLObject): TLChatEventInvitesToggled { return object as TLChatEventInvitesToggled }\nexport interface TLChatEventLinkedChatChanged extends TLObject {\n\treadonly \"@type\": \"chatEventLinkedChatChanged\"\n\treadonly old_linked_chat_id: number\n\treadonly new_linked_chat_id: number\n}\nexport function chatEventLinkedChatChanged(object: TLObject): TLChatEventLinkedChatChanged { return object as TLChatEventLinkedChatChanged }\nexport interface TLChatEventSlowModeDelayChanged extends TLObject {\n\treadonly \"@type\": \"chatEventSlowModeDelayChanged\"\n\treadonly old_slow_mode_delay: number\n\treadonly new_slow_mode_delay: number\n}\nexport function chatEventSlowModeDelayChanged(object: TLObject): TLChatEventSlowModeDelayChanged { return object as TLChatEventSlowModeDelayChanged }\nexport interface TLChatEventSignMessagesToggled extends TLObject {\n\treadonly \"@type\": \"chatEventSignMessagesToggled\"\n\treadonly sign_messages: boolean\n}\nexport function chatEventSignMessagesToggled(object: TLObject): TLChatEventSignMessagesToggled { return object as TLChatEventSignMessagesToggled }\nexport interface TLChatEventStickerSetChanged extends TLObject {\n\treadonly \"@type\": \"chatEventStickerSetChanged\"\n\treadonly old_sticker_set_id: string\n\treadonly new_sticker_set_id: string\n}\nexport function chatEventStickerSetChanged(object: TLObject): TLChatEventStickerSetChanged { return object as TLChatEventStickerSetChanged }\nexport interface TLChatEventLocationChanged extends TLObject {\n\treadonly \"@type\": \"chatEventLocationChanged\"\n\treadonly old_location: TLChatLocation\n\treadonly new_location: TLChatLocation\n}\nexport function chatEventLocationChanged(object: TLObject): TLChatEventLocationChanged { return object as TLChatEventLocationChanged }\nexport interface TLChatEventIsAllHistoryAvailableToggled extends TLObject {\n\treadonly \"@type\": \"chatEventIsAllHistoryAvailableToggled\"\n\treadonly is_all_history_available: boolean\n}\nexport function chatEventIsAllHistoryAvailableToggled(object: TLObject): TLChatEventIsAllHistoryAvailableToggled { return object as TLChatEventIsAllHistoryAvailableToggled }\nexport type TLChatEventAction = TLChatEventMessageEdited | TLChatEventMessageDeleted | TLChatEventPollStopped | TLChatEventMessagePinned | TLChatEventMessageUnpinned | TLChatEventMemberJoined | TLChatEventMemberLeft | TLChatEventMemberInvited | TLChatEventMemberPromoted | TLChatEventMemberRestricted | TLChatEventTitleChanged | TLChatEventPermissionsChanged | TLChatEventDescriptionChanged | TLChatEventUsernameChanged | TLChatEventPhotoChanged | TLChatEventInvitesToggled | TLChatEventLinkedChatChanged | TLChatEventSlowModeDelayChanged | TLChatEventSignMessagesToggled | TLChatEventStickerSetChanged | TLChatEventLocationChanged | TLChatEventIsAllHistoryAvailableToggled\nexport interface TLChatEvent extends TLObject {\n\treadonly \"@type\": \"chatEvent\"\n\treadonly id: string\n\treadonly date: number\n\treadonly user_id: number\n\treadonly action: TLChatEventAction\n}\nexport function chatEvent(object: TLObject): TLChatEvent { return object as TLChatEvent }\nexport interface TLChatEvents extends TLObject {\n\treadonly \"@type\": \"chatEvents\"\n\treadonly events: ReadonlyArray<TLChatEvent>\n}\nexport function chatEvents(object: TLObject): TLChatEvents { return object as TLChatEvents }\nexport interface TLChatEventLogFilters extends TLObject {\n\treadonly \"@type\": \"chatEventLogFilters\"\n\treadonly message_edits: boolean\n\treadonly message_deletions: boolean\n\treadonly message_pins: boolean\n\treadonly member_joins: boolean\n\treadonly member_leaves: boolean\n\treadonly member_invites: boolean\n\treadonly member_promotions: boolean\n\treadonly member_restrictions: boolean\n\treadonly info_changes: boolean\n\treadonly setting_changes: boolean\n}\nexport function chatEventLogFilters(object: TLObject): TLChatEventLogFilters { return object as TLChatEventLogFilters }\nexport interface TLLanguagePackStringValueOrdinary extends TLObject {\n\treadonly \"@type\": \"languagePackStringValueOrdinary\"\n\treadonly value: string\n}\nexport function languagePackStringValueOrdinary(object: TLObject): TLLanguagePackStringValueOrdinary { return object as TLLanguagePackStringValueOrdinary }\nexport interface TLLanguagePackStringValuePluralized extends TLObject {\n\treadonly \"@type\": \"languagePackStringValuePluralized\"\n\treadonly zero_value: string\n\treadonly one_value: string\n\treadonly two_value: string\n\treadonly few_value: string\n\treadonly many_value: string\n\treadonly other_value: string\n}\nexport function languagePackStringValuePluralized(object: TLObject): TLLanguagePackStringValuePluralized { return object as TLLanguagePackStringValuePluralized }\nexport interface TLLanguagePackStringValueDeleted extends TLObject {\n\treadonly \"@type\": \"languagePackStringValueDeleted\"\n}\nexport function languagePackStringValueDeleted(object: TLObject): TLLanguagePackStringValueDeleted { return object as TLLanguagePackStringValueDeleted }\nexport type TLLanguagePackStringValue = TLLanguagePackStringValueOrdinary | TLLanguagePackStringValuePluralized | TLLanguagePackStringValueDeleted\nexport interface TLLanguagePackString extends TLObject {\n\treadonly \"@type\": \"languagePackString\"\n\treadonly key: string\n\treadonly value: TLLanguagePackStringValue\n}\nexport function languagePackString(object: TLObject): TLLanguagePackString { return object as TLLanguagePackString }\nexport interface TLLanguagePackStrings extends TLObject {\n\treadonly \"@type\": \"languagePackStrings\"\n\treadonly strings: ReadonlyArray<TLLanguagePackString>\n}\nexport function languagePackStrings(object: TLObject): TLLanguagePackStrings { return object as TLLanguagePackStrings }\nexport interface TLLanguagePackInfo extends TLObject {\n\treadonly \"@type\": \"languagePackInfo\"\n\treadonly id: string\n\treadonly base_language_pack_id: string\n\treadonly name: string\n\treadonly native_name: string\n\treadonly plural_code: string\n\treadonly is_official: boolean\n\treadonly is_rtl: boolean\n\treadonly is_beta: boolean\n\treadonly is_installed: boolean\n\treadonly total_string_count: number\n\treadonly translated_string_count: number\n\treadonly local_string_count: number\n\treadonly translation_url: string\n}\nexport function languagePackInfo(object: TLObject): TLLanguagePackInfo { return object as TLLanguagePackInfo }\nexport interface TLLocalizationTargetInfo extends TLObject {\n\treadonly \"@type\": \"localizationTargetInfo\"\n\treadonly language_packs: ReadonlyArray<TLLanguagePackInfo>\n}\nexport function localizationTargetInfo(object: TLObject): TLLocalizationTargetInfo { return object as TLLocalizationTargetInfo }\nexport interface TLDeviceTokenFirebaseCloudMessaging extends TLObject {\n\treadonly \"@type\": \"deviceTokenFirebaseCloudMessaging\"\n\treadonly token: string\n\treadonly encrypt: boolean\n}\nexport function deviceTokenFirebaseCloudMessaging(object: TLObject): TLDeviceTokenFirebaseCloudMessaging { return object as TLDeviceTokenFirebaseCloudMessaging }\nexport interface TLDeviceTokenApplePush extends TLObject {\n\treadonly \"@type\": \"deviceTokenApplePush\"\n\treadonly device_token: string\n\treadonly is_app_sandbox: boolean\n}\nexport function deviceTokenApplePush(object: TLObject): TLDeviceTokenApplePush { return object as TLDeviceTokenApplePush }\nexport interface TLDeviceTokenApplePushVoIP extends TLObject {\n\treadonly \"@type\": \"deviceTokenApplePushVoIP\"\n\treadonly device_token: string\n\treadonly is_app_sandbox: boolean\n\treadonly encrypt: boolean\n}\nexport function deviceTokenApplePushVoIP(object: TLObject): TLDeviceTokenApplePushVoIP { return object as TLDeviceTokenApplePushVoIP }\nexport interface TLDeviceTokenWindowsPush extends TLObject {\n\treadonly \"@type\": \"deviceTokenWindowsPush\"\n\treadonly access_token: string\n}\nexport function deviceTokenWindowsPush(object: TLObject): TLDeviceTokenWindowsPush { return object as TLDeviceTokenWindowsPush }\nexport interface TLDeviceTokenMicrosoftPush extends TLObject {\n\treadonly \"@type\": \"deviceTokenMicrosoftPush\"\n\treadonly channel_uri: string\n}\nexport function deviceTokenMicrosoftPush(object: TLObject): TLDeviceTokenMicrosoftPush { return object as TLDeviceTokenMicrosoftPush }\nexport interface TLDeviceTokenMicrosoftPushVoIP extends TLObject {\n\treadonly \"@type\": \"deviceTokenMicrosoftPushVoIP\"\n\treadonly channel_uri: string\n}\nexport function deviceTokenMicrosoftPushVoIP(object: TLObject): TLDeviceTokenMicrosoftPushVoIP { return object as TLDeviceTokenMicrosoftPushVoIP }\nexport interface TLDeviceTokenWebPush extends TLObject {\n\treadonly \"@type\": \"deviceTokenWebPush\"\n\treadonly endpoint: string\n\treadonly p256dh_base64url: string\n\treadonly auth_base64url: string\n}\nexport function deviceTokenWebPush(object: TLObject): TLDeviceTokenWebPush { return object as TLDeviceTokenWebPush }\nexport interface TLDeviceTokenSimplePush extends TLObject {\n\treadonly \"@type\": \"deviceTokenSimplePush\"\n\treadonly endpoint: string\n}\nexport function deviceTokenSimplePush(object: TLObject): TLDeviceTokenSimplePush { return object as TLDeviceTokenSimplePush }\nexport interface TLDeviceTokenUbuntuPush extends TLObject {\n\treadonly \"@type\": \"deviceTokenUbuntuPush\"\n\treadonly token: string\n}\nexport function deviceTokenUbuntuPush(object: TLObject): TLDeviceTokenUbuntuPush { return object as TLDeviceTokenUbuntuPush }\nexport interface TLDeviceTokenBlackBerryPush extends TLObject {\n\treadonly \"@type\": \"deviceTokenBlackBerryPush\"\n\treadonly token: string\n}\nexport function deviceTokenBlackBerryPush(object: TLObject): TLDeviceTokenBlackBerryPush { return object as TLDeviceTokenBlackBerryPush }\nexport interface TLDeviceTokenTizenPush extends TLObject {\n\treadonly \"@type\": \"deviceTokenTizenPush\"\n\treadonly reg_id: string\n}\nexport function deviceTokenTizenPush(object: TLObject): TLDeviceTokenTizenPush { return object as TLDeviceTokenTizenPush }\nexport type TLDeviceToken = TLDeviceTokenFirebaseCloudMessaging | TLDeviceTokenApplePush | TLDeviceTokenApplePushVoIP | TLDeviceTokenWindowsPush | TLDeviceTokenMicrosoftPush | TLDeviceTokenMicrosoftPushVoIP | TLDeviceTokenWebPush | TLDeviceTokenSimplePush | TLDeviceTokenUbuntuPush | TLDeviceTokenBlackBerryPush | TLDeviceTokenTizenPush\nexport interface TLPushReceiverId extends TLObject {\n\treadonly \"@type\": \"pushReceiverId\"\n\treadonly id: string\n}\nexport function pushReceiverId(object: TLObject): TLPushReceiverId { return object as TLPushReceiverId }\nexport interface TLBackgroundFillSolid extends TLObject {\n\treadonly \"@type\": \"backgroundFillSolid\"\n\treadonly color: number\n}\nexport function backgroundFillSolid(object: TLObject): TLBackgroundFillSolid { return object as TLBackgroundFillSolid }\nexport interface TLBackgroundFillGradient extends TLObject {\n\treadonly \"@type\": \"backgroundFillGradient\"\n\treadonly top_color: number\n\treadonly bottom_color: number\n\treadonly rotation_angle: number\n}\nexport function backgroundFillGradient(object: TLObject): TLBackgroundFillGradient { return object as TLBackgroundFillGradient }\nexport type TLBackgroundFill = TLBackgroundFillSolid | TLBackgroundFillGradient\nexport interface TLBackgroundTypeWallpaper extends TLObject {\n\treadonly \"@type\": \"backgroundTypeWallpaper\"\n\treadonly is_blurred: boolean\n\treadonly is_moving: boolean\n}\nexport function backgroundTypeWallpaper(object: TLObject): TLBackgroundTypeWallpaper { return object as TLBackgroundTypeWallpaper }\nexport interface TLBackgroundTypePattern extends TLObject {\n\treadonly \"@type\": \"backgroundTypePattern\"\n\treadonly fill: TLBackgroundFill\n\treadonly intensity: number\n\treadonly is_moving: boolean\n}\nexport function backgroundTypePattern(object: TLObject): TLBackgroundTypePattern { return object as TLBackgroundTypePattern }\nexport interface TLBackgroundTypeFill extends TLObject {\n\treadonly \"@type\": \"backgroundTypeFill\"\n\treadonly fill: TLBackgroundFill\n}\nexport function backgroundTypeFill(object: TLObject): TLBackgroundTypeFill { return object as TLBackgroundTypeFill }\nexport type TLBackgroundType = TLBackgroundTypeWallpaper | TLBackgroundTypePattern | TLBackgroundTypeFill\nexport interface TLBackground extends TLObject {\n\treadonly \"@type\": \"background\"\n\treadonly id: string\n\treadonly is_default: boolean\n\treadonly is_dark: boolean\n\treadonly name: string\n\treadonly document: TLDocument\n\treadonly type: TLBackgroundType\n}\nexport function background(object: TLObject): TLBackground { return object as TLBackground }\nexport interface TLBackgrounds extends TLObject {\n\treadonly \"@type\": \"backgrounds\"\n\treadonly backgrounds: ReadonlyArray<TLBackground>\n}\nexport function backgrounds(object: TLObject): TLBackgrounds { return object as TLBackgrounds }\nexport interface TLInputBackgroundLocal extends TLObject {\n\treadonly \"@type\": \"inputBackgroundLocal\"\n\treadonly background: TLInputFile\n}\nexport function inputBackgroundLocal(object: TLObject): TLInputBackgroundLocal { return object as TLInputBackgroundLocal }\nexport interface TLInputBackgroundRemote extends TLObject {\n\treadonly \"@type\": \"inputBackgroundRemote\"\n\treadonly background_id: string\n}\nexport function inputBackgroundRemote(object: TLObject): TLInputBackgroundRemote { return object as TLInputBackgroundRemote }\nexport type TLInputBackground = TLInputBackgroundLocal | TLInputBackgroundRemote\nexport interface TLHashtags extends TLObject {\n\treadonly \"@type\": \"hashtags\"\n\treadonly hashtags: ReadonlyArray<string>\n}\nexport function hashtags(object: TLObject): TLHashtags { return object as TLHashtags }\nexport interface TLCanTransferOwnershipResultOk extends TLObject {\n\treadonly \"@type\": \"canTransferOwnershipResultOk\"\n}\nexport function canTransferOwnershipResultOk(object: TLObject): TLCanTransferOwnershipResultOk { return object as TLCanTransferOwnershipResultOk }\nexport interface TLCanTransferOwnershipResultPasswordNeeded extends TLObject {\n\treadonly \"@type\": \"canTransferOwnershipResultPasswordNeeded\"\n}\nexport function canTransferOwnershipResultPasswordNeeded(object: TLObject): TLCanTransferOwnershipResultPasswordNeeded { return object as TLCanTransferOwnershipResultPasswordNeeded }\nexport interface TLCanTransferOwnershipResultPasswordTooFresh extends TLObject {\n\treadonly \"@type\": \"canTransferOwnershipResultPasswordTooFresh\"\n\treadonly retry_after: number\n}\nexport function canTransferOwnershipResultPasswordTooFresh(object: TLObject): TLCanTransferOwnershipResultPasswordTooFresh { return object as TLCanTransferOwnershipResultPasswordTooFresh }\nexport interface TLCanTransferOwnershipResultSessionTooFresh extends TLObject {\n\treadonly \"@type\": \"canTransferOwnershipResultSessionTooFresh\"\n\treadonly retry_after: number\n}\nexport function canTransferOwnershipResultSessionTooFresh(object: TLObject): TLCanTransferOwnershipResultSessionTooFresh { return object as TLCanTransferOwnershipResultSessionTooFresh }\nexport type TLCanTransferOwnershipResult = TLCanTransferOwnershipResultOk | TLCanTransferOwnershipResultPasswordNeeded | TLCanTransferOwnershipResultPasswordTooFresh | TLCanTransferOwnershipResultSessionTooFresh\nexport interface TLCheckChatUsernameResultOk extends TLObject {\n\treadonly \"@type\": \"checkChatUsernameResultOk\"\n}\nexport function checkChatUsernameResultOk(object: TLObject): TLCheckChatUsernameResultOk { return object as TLCheckChatUsernameResultOk }\nexport interface TLCheckChatUsernameResultUsernameInvalid extends TLObject {\n\treadonly \"@type\": \"checkChatUsernameResultUsernameInvalid\"\n}\nexport function checkChatUsernameResultUsernameInvalid(object: TLObject): TLCheckChatUsernameResultUsernameInvalid { return object as TLCheckChatUsernameResultUsernameInvalid }\nexport interface TLCheckChatUsernameResultUsernameOccupied extends TLObject {\n\treadonly \"@type\": \"checkChatUsernameResultUsernameOccupied\"\n}\nexport function checkChatUsernameResultUsernameOccupied(object: TLObject): TLCheckChatUsernameResultUsernameOccupied { return object as TLCheckChatUsernameResultUsernameOccupied }\nexport interface TLCheckChatUsernameResultPublicChatsTooMuch extends TLObject {\n\treadonly \"@type\": \"checkChatUsernameResultPublicChatsTooMuch\"\n}\nexport function checkChatUsernameResultPublicChatsTooMuch(object: TLObject): TLCheckChatUsernameResultPublicChatsTooMuch { return object as TLCheckChatUsernameResultPublicChatsTooMuch }\nexport interface TLCheckChatUsernameResultPublicGroupsUnavailable extends TLObject {\n\treadonly \"@type\": \"checkChatUsernameResultPublicGroupsUnavailable\"\n}\nexport function checkChatUsernameResultPublicGroupsUnavailable(object: TLObject): TLCheckChatUsernameResultPublicGroupsUnavailable { return object as TLCheckChatUsernameResultPublicGroupsUnavailable }\nexport type TLCheckChatUsernameResult = TLCheckChatUsernameResultOk | TLCheckChatUsernameResultUsernameInvalid | TLCheckChatUsernameResultUsernameOccupied | TLCheckChatUsernameResultPublicChatsTooMuch | TLCheckChatUsernameResultPublicGroupsUnavailable\nexport interface TLPushMessageContentHidden extends TLObject {\n\treadonly \"@type\": \"pushMessageContentHidden\"\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentHidden(object: TLObject): TLPushMessageContentHidden { return object as TLPushMessageContentHidden }\nexport interface TLPushMessageContentAnimation extends TLObject {\n\treadonly \"@type\": \"pushMessageContentAnimation\"\n\treadonly animation: TLAnimation\n\treadonly caption: string\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentAnimation(object: TLObject): TLPushMessageContentAnimation { return object as TLPushMessageContentAnimation }\nexport interface TLPushMessageContentAudio extends TLObject {\n\treadonly \"@type\": \"pushMessageContentAudio\"\n\treadonly audio: TLAudio\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentAudio(object: TLObject): TLPushMessageContentAudio { return object as TLPushMessageContentAudio }\nexport interface TLPushMessageContentContact extends TLObject {\n\treadonly \"@type\": \"pushMessageContentContact\"\n\treadonly name: string\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentContact(object: TLObject): TLPushMessageContentContact { return object as TLPushMessageContentContact }\nexport interface TLPushMessageContentContactRegistered extends TLObject {\n\treadonly \"@type\": \"pushMessageContentContactRegistered\"\n}\nexport function pushMessageContentContactRegistered(object: TLObject): TLPushMessageContentContactRegistered { return object as TLPushMessageContentContactRegistered }\nexport interface TLPushMessageContentDocument extends TLObject {\n\treadonly \"@type\": \"pushMessageContentDocument\"\n\treadonly document: TLDocument\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentDocument(object: TLObject): TLPushMessageContentDocument { return object as TLPushMessageContentDocument }\nexport interface TLPushMessageContentGame extends TLObject {\n\treadonly \"@type\": \"pushMessageContentGame\"\n\treadonly title: string\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentGame(object: TLObject): TLPushMessageContentGame { return object as TLPushMessageContentGame }\nexport interface TLPushMessageContentGameScore extends TLObject {\n\treadonly \"@type\": \"pushMessageContentGameScore\"\n\treadonly title: string\n\treadonly score: number\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentGameScore(object: TLObject): TLPushMessageContentGameScore { return object as TLPushMessageContentGameScore }\nexport interface TLPushMessageContentInvoice extends TLObject {\n\treadonly \"@type\": \"pushMessageContentInvoice\"\n\treadonly price: string\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentInvoice(object: TLObject): TLPushMessageContentInvoice { return object as TLPushMessageContentInvoice }\nexport interface TLPushMessageContentLocation extends TLObject {\n\treadonly \"@type\": \"pushMessageContentLocation\"\n\treadonly is_live: boolean\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentLocation(object: TLObject): TLPushMessageContentLocation { return object as TLPushMessageContentLocation }\nexport interface TLPushMessageContentPhoto extends TLObject {\n\treadonly \"@type\": \"pushMessageContentPhoto\"\n\treadonly photo: TLPhoto\n\treadonly caption: string\n\treadonly is_secret: boolean\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentPhoto(object: TLObject): TLPushMessageContentPhoto { return object as TLPushMessageContentPhoto }\nexport interface TLPushMessageContentPoll extends TLObject {\n\treadonly \"@type\": \"pushMessageContentPoll\"\n\treadonly question: string\n\treadonly is_regular: boolean\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentPoll(object: TLObject): TLPushMessageContentPoll { return object as TLPushMessageContentPoll }\nexport interface TLPushMessageContentScreenshotTaken extends TLObject {\n\treadonly \"@type\": \"pushMessageContentScreenshotTaken\"\n}\nexport function pushMessageContentScreenshotTaken(object: TLObject): TLPushMessageContentScreenshotTaken { return object as TLPushMessageContentScreenshotTaken }\nexport interface TLPushMessageContentSticker extends TLObject {\n\treadonly \"@type\": \"pushMessageContentSticker\"\n\treadonly sticker: TLSticker\n\treadonly emoji: string\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentSticker(object: TLObject): TLPushMessageContentSticker { return object as TLPushMessageContentSticker }\nexport interface TLPushMessageContentText extends TLObject {\n\treadonly \"@type\": \"pushMessageContentText\"\n\treadonly text: string\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentText(object: TLObject): TLPushMessageContentText { return object as TLPushMessageContentText }\nexport interface TLPushMessageContentVideo extends TLObject {\n\treadonly \"@type\": \"pushMessageContentVideo\"\n\treadonly video: TLVideo\n\treadonly caption: string\n\treadonly is_secret: boolean\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentVideo(object: TLObject): TLPushMessageContentVideo { return object as TLPushMessageContentVideo }\nexport interface TLPushMessageContentVideoNote extends TLObject {\n\treadonly \"@type\": \"pushMessageContentVideoNote\"\n\treadonly video_note: TLVideoNote\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentVideoNote(object: TLObject): TLPushMessageContentVideoNote { return object as TLPushMessageContentVideoNote }\nexport interface TLPushMessageContentVoiceNote extends TLObject {\n\treadonly \"@type\": \"pushMessageContentVoiceNote\"\n\treadonly voice_note: TLVoiceNote\n\treadonly is_pinned: boolean\n}\nexport function pushMessageContentVoiceNote(object: TLObject): TLPushMessageContentVoiceNote { return object as TLPushMessageContentVoiceNote }\nexport interface TLPushMessageContentBasicGroupChatCreate extends TLObject {\n\treadonly \"@type\": \"pushMessageContentBasicGroupChatCreate\"\n}\nexport function pushMessageContentBasicGroupChatCreate(object: TLObject): TLPushMessageContentBasicGroupChatCreate { return object as TLPushMessageContentBasicGroupChatCreate }\nexport interface TLPushMessageContentChatAddMembers extends TLObject {\n\treadonly \"@type\": \"pushMessageContentChatAddMembers\"\n\treadonly member_name: string\n\treadonly is_current_user: boolean\n\treadonly is_returned: boolean\n}\nexport function pushMessageContentChatAddMembers(object: TLObject): TLPushMessageContentChatAddMembers { return object as TLPushMessageContentChatAddMembers }\nexport interface TLPushMessageContentChatChangePhoto extends TLObject {\n\treadonly \"@type\": \"pushMessageContentChatChangePhoto\"\n}\nexport function pushMessageContentChatChangePhoto(object: TLObject): TLPushMessageContentChatChangePhoto { return object as TLPushMessageContentChatChangePhoto }\nexport interface TLPushMessageContentChatChangeTitle extends TLObject {\n\treadonly \"@type\": \"pushMessageContentChatChangeTitle\"\n\treadonly title: string\n}\nexport function pushMessageContentChatChangeTitle(object: TLObject): TLPushMessageContentChatChangeTitle { return object as TLPushMessageContentChatChangeTitle }\nexport interface TLPushMessageContentChatDeleteMember extends TLObject {\n\treadonly \"@type\": \"pushMessageContentChatDeleteMember\"\n\treadonly member_name: string\n\treadonly is_current_user: boolean\n\treadonly is_left: boolean\n}\nexport function pushMessageContentChatDeleteMember(object: TLObject): TLPushMessageContentChatDeleteMember { return object as TLPushMessageContentChatDeleteMember }\nexport interface TLPushMessageContentChatJoinByLink extends TLObject {\n\treadonly \"@type\": \"pushMessageContentChatJoinByLink\"\n}\nexport function pushMessageContentChatJoinByLink(object: TLObject): TLPushMessageContentChatJoinByLink { return object as TLPushMessageContentChatJoinByLink }\nexport interface TLPushMessageContentMessageForwards extends TLObject {\n\treadonly \"@type\": \"pushMessageContentMessageForwards\"\n\treadonly total_count: number\n}\nexport function pushMessageContentMessageForwards(object: TLObject): TLPushMessageContentMessageForwards { return object as TLPushMessageContentMessageForwards }\nexport interface TLPushMessageContentMediaAlbum extends TLObject {\n\treadonly \"@type\": \"pushMessageContentMediaAlbum\"\n\treadonly total_count: number\n\treadonly has_photos: boolean\n\treadonly has_videos: boolean\n}\nexport function pushMessageContentMediaAlbum(object: TLObject): TLPushMessageContentMediaAlbum { return object as TLPushMessageContentMediaAlbum }\nexport type TLPushMessageContent = TLPushMessageContentHidden | TLPushMessageContentAnimation | TLPushMessageContentAudio | TLPushMessageContentContact | TLPushMessageContentContactRegistered | TLPushMessageContentDocument | TLPushMessageContentGame | TLPushMessageContentGameScore | TLPushMessageContentInvoice | TLPushMessageContentLocation | TLPushMessageContentPhoto | TLPushMessageContentPoll | TLPushMessageContentScreenshotTaken | TLPushMessageContentSticker | TLPushMessageContentText | TLPushMessageContentVideo | TLPushMessageContentVideoNote | TLPushMessageContentVoiceNote | TLPushMessageContentBasicGroupChatCreate | TLPushMessageContentChatAddMembers | TLPushMessageContentChatChangePhoto | TLPushMessageContentChatChangeTitle | TLPushMessageContentChatDeleteMember | TLPushMessageContentChatJoinByLink | TLPushMessageContentMessageForwards | TLPushMessageContentMediaAlbum\nexport interface TLNotificationTypeNewMessage extends TLObject {\n\treadonly \"@type\": \"notificationTypeNewMessage\"\n\treadonly message: TLMessage\n}\nexport function notificationTypeNewMessage(object: TLObject): TLNotificationTypeNewMessage { return object as TLNotificationTypeNewMessage }\nexport interface TLNotificationTypeNewSecretChat extends TLObject {\n\treadonly \"@type\": \"notificationTypeNewSecretChat\"\n}\nexport function notificationTypeNewSecretChat(object: TLObject): TLNotificationTypeNewSecretChat { return object as TLNotificationTypeNewSecretChat }\nexport interface TLNotificationTypeNewCall extends TLObject {\n\treadonly \"@type\": \"notificationTypeNewCall\"\n\treadonly call_id: number\n}\nexport function notificationTypeNewCall(object: TLObject): TLNotificationTypeNewCall { return object as TLNotificationTypeNewCall }\nexport interface TLNotificationTypeNewPushMessage extends TLObject {\n\treadonly \"@type\": \"notificationTypeNewPushMessage\"\n\treadonly message_id: number\n\treadonly sender_user_id: number\n\treadonly content: TLPushMessageContent\n}\nexport function notificationTypeNewPushMessage(object: TLObject): TLNotificationTypeNewPushMessage { return object as TLNotificationTypeNewPushMessage }\nexport type TLNotificationType = TLNotificationTypeNewMessage | TLNotificationTypeNewSecretChat | TLNotificationTypeNewCall | TLNotificationTypeNewPushMessage\nexport interface TLNotificationGroupTypeMessages extends TLObject {\n\treadonly \"@type\": \"notificationGroupTypeMessages\"\n}\nexport function notificationGroupTypeMessages(object: TLObject): TLNotificationGroupTypeMessages { return object as TLNotificationGroupTypeMessages }\nexport interface TLNotificationGroupTypeMentions extends TLObject {\n\treadonly \"@type\": \"notificationGroupTypeMentions\"\n}\nexport function notificationGroupTypeMentions(object: TLObject): TLNotificationGroupTypeMentions { return object as TLNotificationGroupTypeMentions }\nexport interface TLNotificationGroupTypeSecretChat extends TLObject {\n\treadonly \"@type\": \"notificationGroupTypeSecretChat\"\n}\nexport function notificationGroupTypeSecretChat(object: TLObject): TLNotificationGroupTypeSecretChat { return object as TLNotificationGroupTypeSecretChat }\nexport interface TLNotificationGroupTypeCalls extends TLObject {\n\treadonly \"@type\": \"notificationGroupTypeCalls\"\n}\nexport function notificationGroupTypeCalls(object: TLObject): TLNotificationGroupTypeCalls { return object as TLNotificationGroupTypeCalls }\nexport type TLNotificationGroupType = TLNotificationGroupTypeMessages | TLNotificationGroupTypeMentions | TLNotificationGroupTypeSecretChat | TLNotificationGroupTypeCalls\nexport interface TLNotification extends TLObject {\n\treadonly \"@type\": \"notification\"\n\treadonly id: number\n\treadonly date: number\n\treadonly is_silent: boolean\n\treadonly type: TLNotificationType\n}\nexport function notification(object: TLObject): TLNotification { return object as TLNotification }\nexport interface TLNotificationGroup extends TLObject {\n\treadonly \"@type\": \"notificationGroup\"\n\treadonly id: number\n\treadonly type: TLNotificationGroupType\n\treadonly chat_id: number\n\treadonly total_count: number\n\treadonly notifications: ReadonlyArray<TLNotification>\n}\nexport function notificationGroup(object: TLObject): TLNotificationGroup { return object as TLNotificationGroup }\nexport interface TLOptionValueBoolean extends TLObject {\n\treadonly \"@type\": \"optionValueBoolean\"\n\treadonly value: boolean\n}\nexport function optionValueBoolean(object: TLObject): TLOptionValueBoolean { return object as TLOptionValueBoolean }\nexport interface TLOptionValueEmpty extends TLObject {\n\treadonly \"@type\": \"optionValueEmpty\"\n}\nexport function optionValueEmpty(object: TLObject): TLOptionValueEmpty { return object as TLOptionValueEmpty }\nexport interface TLOptionValueInteger extends TLObject {\n\treadonly \"@type\": \"optionValueInteger\"\n\treadonly value: number\n}\nexport function optionValueInteger(object: TLObject): TLOptionValueInteger { return object as TLOptionValueInteger }\nexport interface TLOptionValueString extends TLObject {\n\treadonly \"@type\": \"optionValueString\"\n\treadonly value: string\n}\nexport function optionValueString(object: TLObject): TLOptionValueString { return object as TLOptionValueString }\nexport type TLOptionValue = TLOptionValueBoolean | TLOptionValueEmpty | TLOptionValueInteger | TLOptionValueString\nexport interface TLJsonObjectMember extends TLObject {\n\treadonly \"@type\": \"jsonObjectMember\"\n\treadonly key: string\n\treadonly value: TLJsonValue\n}\nexport function jsonObjectMember(object: TLObject): TLJsonObjectMember { return object as TLJsonObjectMember }\nexport interface TLJsonValueNull extends TLObject {\n\treadonly \"@type\": \"jsonValueNull\"\n}\nexport function jsonValueNull(object: TLObject): TLJsonValueNull { return object as TLJsonValueNull }\nexport interface TLJsonValueBoolean extends TLObject {\n\treadonly \"@type\": \"jsonValueBoolean\"\n\treadonly value: boolean\n}\nexport function jsonValueBoolean(object: TLObject): TLJsonValueBoolean { return object as TLJsonValueBoolean }\nexport interface TLJsonValueNumber extends TLObject {\n\treadonly \"@type\": \"jsonValueNumber\"\n\treadonly value: number\n}\nexport function jsonValueNumber(object: TLObject): TLJsonValueNumber { return object as TLJsonValueNumber }\nexport interface TLJsonValueString extends TLObject {\n\treadonly \"@type\": \"jsonValueString\"\n\treadonly value: string\n}\nexport function jsonValueString(object: TLObject): TLJsonValueString { return object as TLJsonValueString }\nexport interface TLJsonValueArray extends TLObject {\n\treadonly \"@type\": \"jsonValueArray\"\n\treadonly values: ReadonlyArray<TLJsonValue>\n}\nexport function jsonValueArray(object: TLObject): TLJsonValueArray { return object as TLJsonValueArray }\nexport interface TLJsonValueObject extends TLObject {\n\treadonly \"@type\": \"jsonValueObject\"\n\treadonly members: ReadonlyArray<TLJsonObjectMember>\n}\nexport function jsonValueObject(object: TLObject): TLJsonValueObject { return object as TLJsonValueObject }\nexport type TLJsonValue = TLJsonValueNull | TLJsonValueBoolean | TLJsonValueNumber | TLJsonValueString | TLJsonValueArray | TLJsonValueObject\nexport interface TLUserPrivacySettingRuleAllowAll extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleAllowAll\"\n}\nexport function userPrivacySettingRuleAllowAll(object: TLObject): TLUserPrivacySettingRuleAllowAll { return object as TLUserPrivacySettingRuleAllowAll }\nexport interface TLUserPrivacySettingRuleAllowContacts extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleAllowContacts\"\n}\nexport function userPrivacySettingRuleAllowContacts(object: TLObject): TLUserPrivacySettingRuleAllowContacts { return object as TLUserPrivacySettingRuleAllowContacts }\nexport interface TLUserPrivacySettingRuleAllowUsers extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleAllowUsers\"\n\treadonly user_ids: ReadonlyArray<number>\n}\nexport function userPrivacySettingRuleAllowUsers(object: TLObject): TLUserPrivacySettingRuleAllowUsers { return object as TLUserPrivacySettingRuleAllowUsers }\nexport interface TLUserPrivacySettingRuleAllowChatMembers extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleAllowChatMembers\"\n\treadonly chat_ids: ReadonlyArray<number>\n}\nexport function userPrivacySettingRuleAllowChatMembers(object: TLObject): TLUserPrivacySettingRuleAllowChatMembers { return object as TLUserPrivacySettingRuleAllowChatMembers }\nexport interface TLUserPrivacySettingRuleRestrictAll extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleRestrictAll\"\n}\nexport function userPrivacySettingRuleRestrictAll(object: TLObject): TLUserPrivacySettingRuleRestrictAll { return object as TLUserPrivacySettingRuleRestrictAll }\nexport interface TLUserPrivacySettingRuleRestrictContacts extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleRestrictContacts\"\n}\nexport function userPrivacySettingRuleRestrictContacts(object: TLObject): TLUserPrivacySettingRuleRestrictContacts { return object as TLUserPrivacySettingRuleRestrictContacts }\nexport interface TLUserPrivacySettingRuleRestrictUsers extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleRestrictUsers\"\n\treadonly user_ids: ReadonlyArray<number>\n}\nexport function userPrivacySettingRuleRestrictUsers(object: TLObject): TLUserPrivacySettingRuleRestrictUsers { return object as TLUserPrivacySettingRuleRestrictUsers }\nexport interface TLUserPrivacySettingRuleRestrictChatMembers extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRuleRestrictChatMembers\"\n\treadonly chat_ids: ReadonlyArray<number>\n}\nexport function userPrivacySettingRuleRestrictChatMembers(object: TLObject): TLUserPrivacySettingRuleRestrictChatMembers { return object as TLUserPrivacySettingRuleRestrictChatMembers }\nexport type TLUserPrivacySettingRule = TLUserPrivacySettingRuleAllowAll | TLUserPrivacySettingRuleAllowContacts | TLUserPrivacySettingRuleAllowUsers | TLUserPrivacySettingRuleAllowChatMembers | TLUserPrivacySettingRuleRestrictAll | TLUserPrivacySettingRuleRestrictContacts | TLUserPrivacySettingRuleRestrictUsers | TLUserPrivacySettingRuleRestrictChatMembers\nexport interface TLUserPrivacySettingRules extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingRules\"\n\treadonly rules: ReadonlyArray<TLUserPrivacySettingRule>\n}\nexport function userPrivacySettingRules(object: TLObject): TLUserPrivacySettingRules { return object as TLUserPrivacySettingRules }\nexport interface TLUserPrivacySettingShowStatus extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingShowStatus\"\n}\nexport function userPrivacySettingShowStatus(object: TLObject): TLUserPrivacySettingShowStatus { return object as TLUserPrivacySettingShowStatus }\nexport interface TLUserPrivacySettingShowProfilePhoto extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingShowProfilePhoto\"\n}\nexport function userPrivacySettingShowProfilePhoto(object: TLObject): TLUserPrivacySettingShowProfilePhoto { return object as TLUserPrivacySettingShowProfilePhoto }\nexport interface TLUserPrivacySettingShowLinkInForwardedMessages extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingShowLinkInForwardedMessages\"\n}\nexport function userPrivacySettingShowLinkInForwardedMessages(object: TLObject): TLUserPrivacySettingShowLinkInForwardedMessages { return object as TLUserPrivacySettingShowLinkInForwardedMessages }\nexport interface TLUserPrivacySettingShowPhoneNumber extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingShowPhoneNumber\"\n}\nexport function userPrivacySettingShowPhoneNumber(object: TLObject): TLUserPrivacySettingShowPhoneNumber { return object as TLUserPrivacySettingShowPhoneNumber }\nexport interface TLUserPrivacySettingAllowChatInvites extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingAllowChatInvites\"\n}\nexport function userPrivacySettingAllowChatInvites(object: TLObject): TLUserPrivacySettingAllowChatInvites { return object as TLUserPrivacySettingAllowChatInvites }\nexport interface TLUserPrivacySettingAllowCalls extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingAllowCalls\"\n}\nexport function userPrivacySettingAllowCalls(object: TLObject): TLUserPrivacySettingAllowCalls { return object as TLUserPrivacySettingAllowCalls }\nexport interface TLUserPrivacySettingAllowPeerToPeerCalls extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingAllowPeerToPeerCalls\"\n}\nexport function userPrivacySettingAllowPeerToPeerCalls(object: TLObject): TLUserPrivacySettingAllowPeerToPeerCalls { return object as TLUserPrivacySettingAllowPeerToPeerCalls }\nexport interface TLUserPrivacySettingAllowFindingByPhoneNumber extends TLObject {\n\treadonly \"@type\": \"userPrivacySettingAllowFindingByPhoneNumber\"\n}\nexport function userPrivacySettingAllowFindingByPhoneNumber(object: TLObject): TLUserPrivacySettingAllowFindingByPhoneNumber { return object as TLUserPrivacySettingAllowFindingByPhoneNumber }\nexport type TLUserPrivacySetting = TLUserPrivacySettingShowStatus | TLUserPrivacySettingShowProfilePhoto | TLUserPrivacySettingShowLinkInForwardedMessages | TLUserPrivacySettingShowPhoneNumber | TLUserPrivacySettingAllowChatInvites | TLUserPrivacySettingAllowCalls | TLUserPrivacySettingAllowPeerToPeerCalls | TLUserPrivacySettingAllowFindingByPhoneNumber\nexport interface TLAccountTtl extends TLObject {\n\treadonly \"@type\": \"accountTtl\"\n\treadonly days: number\n}\nexport function accountTtl(object: TLObject): TLAccountTtl { return object as TLAccountTtl }\nexport interface TLSession extends TLObject {\n\treadonly \"@type\": \"session\"\n\treadonly id: string\n\treadonly is_current: boolean\n\treadonly is_password_pending: boolean\n\treadonly api_id: number\n\treadonly application_name: string\n\treadonly application_version: string\n\treadonly is_official_application: boolean\n\treadonly device_model: string\n\treadonly platform: string\n\treadonly system_version: string\n\treadonly log_in_date: number\n\treadonly last_active_date: number\n\treadonly ip: string\n\treadonly country: string\n\treadonly region: string\n}\nexport function session(object: TLObject): TLSession { return object as TLSession }\nexport interface TLSessions extends TLObject {\n\treadonly \"@type\": \"sessions\"\n\treadonly sessions: ReadonlyArray<TLSession>\n}\nexport function sessions(object: TLObject): TLSessions { return object as TLSessions }\nexport interface TLConnectedWebsite extends TLObject {\n\treadonly \"@type\": \"connectedWebsite\"\n\treadonly id: string\n\treadonly domain_name: string\n\treadonly bot_user_id: number\n\treadonly browser: string\n\treadonly platform: string\n\treadonly log_in_date: number\n\treadonly last_active_date: number\n\treadonly ip: string\n\treadonly location: string\n}\nexport function connectedWebsite(object: TLObject): TLConnectedWebsite { return object as TLConnectedWebsite }\nexport interface TLConnectedWebsites extends TLObject {\n\treadonly \"@type\": \"connectedWebsites\"\n\treadonly websites: ReadonlyArray<TLConnectedWebsite>\n}\nexport function connectedWebsites(object: TLObject): TLConnectedWebsites { return object as TLConnectedWebsites }\nexport interface TLChatReportReasonSpam extends TLObject {\n\treadonly \"@type\": \"chatReportReasonSpam\"\n}\nexport function chatReportReasonSpam(object: TLObject): TLChatReportReasonSpam { return object as TLChatReportReasonSpam }\nexport interface TLChatReportReasonViolence extends TLObject {\n\treadonly \"@type\": \"chatReportReasonViolence\"\n}\nexport function chatReportReasonViolence(object: TLObject): TLChatReportReasonViolence { return object as TLChatReportReasonViolence }\nexport interface TLChatReportReasonPornography extends TLObject {\n\treadonly \"@type\": \"chatReportReasonPornography\"\n}\nexport function chatReportReasonPornography(object: TLObject): TLChatReportReasonPornography { return object as TLChatReportReasonPornography }\nexport interface TLChatReportReasonChildAbuse extends TLObject {\n\treadonly \"@type\": \"chatReportReasonChildAbuse\"\n}\nexport function chatReportReasonChildAbuse(object: TLObject): TLChatReportReasonChildAbuse { return object as TLChatReportReasonChildAbuse }\nexport interface TLChatReportReasonCopyright extends TLObject {\n\treadonly \"@type\": \"chatReportReasonCopyright\"\n}\nexport function chatReportReasonCopyright(object: TLObject): TLChatReportReasonCopyright { return object as TLChatReportReasonCopyright }\nexport interface TLChatReportReasonUnrelatedLocation extends TLObject {\n\treadonly \"@type\": \"chatReportReasonUnrelatedLocation\"\n}\nexport function chatReportReasonUnrelatedLocation(object: TLObject): TLChatReportReasonUnrelatedLocation { return object as TLChatReportReasonUnrelatedLocation }\nexport interface TLChatReportReasonCustom extends TLObject {\n\treadonly \"@type\": \"chatReportReasonCustom\"\n\treadonly text: string\n}\nexport function chatReportReasonCustom(object: TLObject): TLChatReportReasonCustom { return object as TLChatReportReasonCustom }\nexport type TLChatReportReason = TLChatReportReasonSpam | TLChatReportReasonViolence | TLChatReportReasonPornography | TLChatReportReasonChildAbuse | TLChatReportReasonCopyright | TLChatReportReasonUnrelatedLocation | TLChatReportReasonCustom\nexport interface TLPublicMessageLink extends TLObject {\n\treadonly \"@type\": \"publicMessageLink\"\n\treadonly link: string\n\treadonly html: string\n}\nexport function publicMessageLink(object: TLObject): TLPublicMessageLink { return object as TLPublicMessageLink }\nexport interface TLMessageLinkInfo extends TLObject {\n\treadonly \"@type\": \"messageLinkInfo\"\n\treadonly is_public: boolean\n\treadonly chat_id: number\n\treadonly message: TLMessage\n\treadonly for_album: boolean\n}\nexport function messageLinkInfo(object: TLObject): TLMessageLinkInfo { return object as TLMessageLinkInfo }\nexport interface TLFilePart extends TLObject {\n\treadonly \"@type\": \"filePart\"\n\treadonly data: Uint8Array\n}\nexport function filePart(object: TLObject): TLFilePart { return object as TLFilePart }\nexport interface TLFileTypeNone extends TLObject {\n\treadonly \"@type\": \"fileTypeNone\"\n}\nexport function fileTypeNone(object: TLObject): TLFileTypeNone { return object as TLFileTypeNone }\nexport interface TLFileTypeAnimation extends TLObject {\n\treadonly \"@type\": \"fileTypeAnimation\"\n}\nexport function fileTypeAnimation(object: TLObject): TLFileTypeAnimation { return object as TLFileTypeAnimation }\nexport interface TLFileTypeAudio extends TLObject {\n\treadonly \"@type\": \"fileTypeAudio\"\n}\nexport function fileTypeAudio(object: TLObject): TLFileTypeAudio { return object as TLFileTypeAudio }\nexport interface TLFileTypeDocument extends TLObject {\n\treadonly \"@type\": \"fileTypeDocument\"\n}\nexport function fileTypeDocument(object: TLObject): TLFileTypeDocument { return object as TLFileTypeDocument }\nexport interface TLFileTypePhoto extends TLObject {\n\treadonly \"@type\": \"fileTypePhoto\"\n}\nexport function fileTypePhoto(object: TLObject): TLFileTypePhoto { return object as TLFileTypePhoto }\nexport interface TLFileTypeProfilePhoto extends TLObject {\n\treadonly \"@type\": \"fileTypeProfilePhoto\"\n}\nexport function fileTypeProfilePhoto(object: TLObject): TLFileTypeProfilePhoto { return object as TLFileTypeProfilePhoto }\nexport interface TLFileTypeSecret extends TLObject {\n\treadonly \"@type\": \"fileTypeSecret\"\n}\nexport function fileTypeSecret(object: TLObject): TLFileTypeSecret { return object as TLFileTypeSecret }\nexport interface TLFileTypeSecretThumbnail extends TLObject {\n\treadonly \"@type\": \"fileTypeSecretThumbnail\"\n}\nexport function fileTypeSecretThumbnail(object: TLObject): TLFileTypeSecretThumbnail { return object as TLFileTypeSecretThumbnail }\nexport interface TLFileTypeSecure extends TLObject {\n\treadonly \"@type\": \"fileTypeSecure\"\n}\nexport function fileTypeSecure(object: TLObject): TLFileTypeSecure { return object as TLFileTypeSecure }\nexport interface TLFileTypeSticker extends TLObject {\n\treadonly \"@type\": \"fileTypeSticker\"\n}\nexport function fileTypeSticker(object: TLObject): TLFileTypeSticker { return object as TLFileTypeSticker }\nexport interface TLFileTypeThumbnail extends TLObject {\n\treadonly \"@type\": \"fileTypeThumbnail\"\n}\nexport function fileTypeThumbnail(object: TLObject): TLFileTypeThumbnail { return object as TLFileTypeThumbnail }\nexport interface TLFileTypeUnknown extends TLObject {\n\treadonly \"@type\": \"fileTypeUnknown\"\n}\nexport function fileTypeUnknown(object: TLObject): TLFileTypeUnknown { return object as TLFileTypeUnknown }\nexport interface TLFileTypeVideo extends TLObject {\n\treadonly \"@type\": \"fileTypeVideo\"\n}\nexport function fileTypeVideo(object: TLObject): TLFileTypeVideo { return object as TLFileTypeVideo }\nexport interface TLFileTypeVideoNote extends TLObject {\n\treadonly \"@type\": \"fileTypeVideoNote\"\n}\nexport function fileTypeVideoNote(object: TLObject): TLFileTypeVideoNote { return object as TLFileTypeVideoNote }\nexport interface TLFileTypeVoiceNote extends TLObject {\n\treadonly \"@type\": \"fileTypeVoiceNote\"\n}\nexport function fileTypeVoiceNote(object: TLObject): TLFileTypeVoiceNote { return object as TLFileTypeVoiceNote }\nexport interface TLFileTypeWallpaper extends TLObject {\n\treadonly \"@type\": \"fileTypeWallpaper\"\n}\nexport function fileTypeWallpaper(object: TLObject): TLFileTypeWallpaper { return object as TLFileTypeWallpaper }\nexport type TLFileType = TLFileTypeNone | TLFileTypeAnimation | TLFileTypeAudio | TLFileTypeDocument | TLFileTypePhoto | TLFileTypeProfilePhoto | TLFileTypeSecret | TLFileTypeSecretThumbnail | TLFileTypeSecure | TLFileTypeSticker | TLFileTypeThumbnail | TLFileTypeUnknown | TLFileTypeVideo | TLFileTypeVideoNote | TLFileTypeVoiceNote | TLFileTypeWallpaper\nexport interface TLStorageStatisticsByFileType extends TLObject {\n\treadonly \"@type\": \"storageStatisticsByFileType\"\n\treadonly file_type: TLFileType\n\treadonly size: number\n\treadonly count: number\n}\nexport function storageStatisticsByFileType(object: TLObject): TLStorageStatisticsByFileType { return object as TLStorageStatisticsByFileType }\nexport interface TLStorageStatisticsByChat extends TLObject {\n\treadonly \"@type\": \"storageStatisticsByChat\"\n\treadonly chat_id: number\n\treadonly size: number\n\treadonly count: number\n\treadonly by_file_type: ReadonlyArray<TLStorageStatisticsByFileType>\n}\nexport function storageStatisticsByChat(object: TLObject): TLStorageStatisticsByChat { return object as TLStorageStatisticsByChat }\nexport interface TLStorageStatistics extends TLObject {\n\treadonly \"@type\": \"storageStatistics\"\n\treadonly size: number\n\treadonly count: number\n\treadonly by_chat: ReadonlyArray<TLStorageStatisticsByChat>\n}\nexport function storageStatistics(object: TLObject): TLStorageStatistics { return object as TLStorageStatistics }\nexport interface TLStorageStatisticsFast extends TLObject {\n\treadonly \"@type\": \"storageStatisticsFast\"\n\treadonly files_size: number\n\treadonly file_count: number\n\treadonly database_size: number\n\treadonly language_pack_database_size: number\n\treadonly log_size: number\n}\nexport function storageStatisticsFast(object: TLObject): TLStorageStatisticsFast { return object as TLStorageStatisticsFast }\nexport interface TLDatabaseStatistics extends TLObject {\n\treadonly \"@type\": \"databaseStatistics\"\n\treadonly statistics: string\n}\nexport function databaseStatistics(object: TLObject): TLDatabaseStatistics { return object as TLDatabaseStatistics }\nexport interface TLNetworkTypeNone extends TLObject {\n\treadonly \"@type\": \"networkTypeNone\"\n}\nexport function networkTypeNone(object: TLObject): TLNetworkTypeNone { return object as TLNetworkTypeNone }\nexport interface TLNetworkTypeMobile extends TLObject {\n\treadonly \"@type\": \"networkTypeMobile\"\n}\nexport function networkTypeMobile(object: TLObject): TLNetworkTypeMobile { return object as TLNetworkTypeMobile }\nexport interface TLNetworkTypeMobileRoaming extends TLObject {\n\treadonly \"@type\": \"networkTypeMobileRoaming\"\n}\nexport function networkTypeMobileRoaming(object: TLObject): TLNetworkTypeMobileRoaming { return object as TLNetworkTypeMobileRoaming }\nexport interface TLNetworkTypeWiFi extends TLObject {\n\treadonly \"@type\": \"networkTypeWiFi\"\n}\nexport function networkTypeWiFi(object: TLObject): TLNetworkTypeWiFi { return object as TLNetworkTypeWiFi }\nexport interface TLNetworkTypeOther extends TLObject {\n\treadonly \"@type\": \"networkTypeOther\"\n}\nexport function networkTypeOther(object: TLObject): TLNetworkTypeOther { return object as TLNetworkTypeOther }\nexport type TLNetworkType = TLNetworkTypeNone | TLNetworkTypeMobile | TLNetworkTypeMobileRoaming | TLNetworkTypeWiFi | TLNetworkTypeOther\nexport interface TLNetworkStatisticsEntryFile extends TLObject {\n\treadonly \"@type\": \"networkStatisticsEntryFile\"\n\treadonly file_type: TLFileType\n\treadonly network_type: TLNetworkType\n\treadonly sent_bytes: number\n\treadonly received_bytes: number\n}\nexport function networkStatisticsEntryFile(object: TLObject): TLNetworkStatisticsEntryFile { return object as TLNetworkStatisticsEntryFile }\nexport interface TLNetworkStatisticsEntryCall extends TLObject {\n\treadonly \"@type\": \"networkStatisticsEntryCall\"\n\treadonly network_type: TLNetworkType\n\treadonly sent_bytes: number\n\treadonly received_bytes: number\n\treadonly duration: number\n}\nexport function networkStatisticsEntryCall(object: TLObject): TLNetworkStatisticsEntryCall { return object as TLNetworkStatisticsEntryCall }\nexport type TLNetworkStatisticsEntry = TLNetworkStatisticsEntryFile | TLNetworkStatisticsEntryCall\nexport interface TLNetworkStatistics extends TLObject {\n\treadonly \"@type\": \"networkStatistics\"\n\treadonly since_date: number\n\treadonly entries: ReadonlyArray<TLNetworkStatisticsEntry>\n}\nexport function networkStatistics(object: TLObject): TLNetworkStatistics { return object as TLNetworkStatistics }\nexport interface TLAutoDownloadSettings extends TLObject {\n\treadonly \"@type\": \"autoDownloadSettings\"\n\treadonly is_auto_download_enabled: boolean\n\treadonly max_photo_file_size: number\n\treadonly max_video_file_size: number\n\treadonly max_other_file_size: number\n\treadonly video_upload_bitrate: number\n\treadonly preload_large_videos: boolean\n\treadonly preload_next_audio: boolean\n\treadonly use_less_data_for_calls: boolean\n}\nexport function autoDownloadSettings(object: TLObject): TLAutoDownloadSettings { return object as TLAutoDownloadSettings }\nexport interface TLAutoDownloadSettingsPresets extends TLObject {\n\treadonly \"@type\": \"autoDownloadSettingsPresets\"\n\treadonly low: TLAutoDownloadSettings\n\treadonly medium: TLAutoDownloadSettings\n\treadonly high: TLAutoDownloadSettings\n}\nexport function autoDownloadSettingsPresets(object: TLObject): TLAutoDownloadSettingsPresets { return object as TLAutoDownloadSettingsPresets }\nexport interface TLConnectionStateWaitingForNetwork extends TLObject {\n\treadonly \"@type\": \"connectionStateWaitingForNetwork\"\n}\nexport function connectionStateWaitingForNetwork(object: TLObject): TLConnectionStateWaitingForNetwork { return object as TLConnectionStateWaitingForNetwork }\nexport interface TLConnectionStateConnectingToProxy extends TLObject {\n\treadonly \"@type\": \"connectionStateConnectingToProxy\"\n}\nexport function connectionStateConnectingToProxy(object: TLObject): TLConnectionStateConnectingToProxy { return object as TLConnectionStateConnectingToProxy }\nexport interface TLConnectionStateConnecting extends TLObject {\n\treadonly \"@type\": \"connectionStateConnecting\"\n}\nexport function connectionStateConnecting(object: TLObject): TLConnectionStateConnecting { return object as TLConnectionStateConnecting }\nexport interface TLConnectionStateUpdating extends TLObject {\n\treadonly \"@type\": \"connectionStateUpdating\"\n}\nexport function connectionStateUpdating(object: TLObject): TLConnectionStateUpdating { return object as TLConnectionStateUpdating }\nexport interface TLConnectionStateReady extends TLObject {\n\treadonly \"@type\": \"connectionStateReady\"\n}\nexport function connectionStateReady(object: TLObject): TLConnectionStateReady { return object as TLConnectionStateReady }\nexport type TLConnectionState = TLConnectionStateWaitingForNetwork | TLConnectionStateConnectingToProxy | TLConnectionStateConnecting | TLConnectionStateUpdating | TLConnectionStateReady\nexport interface TLTopChatCategoryUsers extends TLObject {\n\treadonly \"@type\": \"topChatCategoryUsers\"\n}\nexport function topChatCategoryUsers(object: TLObject): TLTopChatCategoryUsers { return object as TLTopChatCategoryUsers }\nexport interface TLTopChatCategoryBots extends TLObject {\n\treadonly \"@type\": \"topChatCategoryBots\"\n}\nexport function topChatCategoryBots(object: TLObject): TLTopChatCategoryBots { return object as TLTopChatCategoryBots }\nexport interface TLTopChatCategoryGroups extends TLObject {\n\treadonly \"@type\": \"topChatCategoryGroups\"\n}\nexport function topChatCategoryGroups(object: TLObject): TLTopChatCategoryGroups { return object as TLTopChatCategoryGroups }\nexport interface TLTopChatCategoryChannels extends TLObject {\n\treadonly \"@type\": \"topChatCategoryChannels\"\n}\nexport function topChatCategoryChannels(object: TLObject): TLTopChatCategoryChannels { return object as TLTopChatCategoryChannels }\nexport interface TLTopChatCategoryInlineBots extends TLObject {\n\treadonly \"@type\": \"topChatCategoryInlineBots\"\n}\nexport function topChatCategoryInlineBots(object: TLObject): TLTopChatCategoryInlineBots { return object as TLTopChatCategoryInlineBots }\nexport interface TLTopChatCategoryCalls extends TLObject {\n\treadonly \"@type\": \"topChatCategoryCalls\"\n}\nexport function topChatCategoryCalls(object: TLObject): TLTopChatCategoryCalls { return object as TLTopChatCategoryCalls }\nexport interface TLTopChatCategoryForwardChats extends TLObject {\n\treadonly \"@type\": \"topChatCategoryForwardChats\"\n}\nexport function topChatCategoryForwardChats(object: TLObject): TLTopChatCategoryForwardChats { return object as TLTopChatCategoryForwardChats }\nexport type TLTopChatCategory = TLTopChatCategoryUsers | TLTopChatCategoryBots | TLTopChatCategoryGroups | TLTopChatCategoryChannels | TLTopChatCategoryInlineBots | TLTopChatCategoryCalls | TLTopChatCategoryForwardChats\nexport interface TLTMeUrlTypeUser extends TLObject {\n\treadonly \"@type\": \"tMeUrlTypeUser\"\n\treadonly user_id: number\n}\nexport function tMeUrlTypeUser(object: TLObject): TLTMeUrlTypeUser { return object as TLTMeUrlTypeUser }\nexport interface TLTMeUrlTypeSupergroup extends TLObject {\n\treadonly \"@type\": \"tMeUrlTypeSupergroup\"\n\treadonly supergroup_id: number\n}\nexport function tMeUrlTypeSupergroup(object: TLObject): TLTMeUrlTypeSupergroup { return object as TLTMeUrlTypeSupergroup }\nexport interface TLTMeUrlTypeChatInvite extends TLObject {\n\treadonly \"@type\": \"tMeUrlTypeChatInvite\"\n\treadonly info: TLChatInviteLinkInfo\n}\nexport function tMeUrlTypeChatInvite(object: TLObject): TLTMeUrlTypeChatInvite { return object as TLTMeUrlTypeChatInvite }\nexport interface TLTMeUrlTypeStickerSet extends TLObject {\n\treadonly \"@type\": \"tMeUrlTypeStickerSet\"\n\treadonly sticker_set_id: string\n}\nexport function tMeUrlTypeStickerSet(object: TLObject): TLTMeUrlTypeStickerSet { return object as TLTMeUrlTypeStickerSet }\nexport type TLTMeUrlType = TLTMeUrlTypeUser | TLTMeUrlTypeSupergroup | TLTMeUrlTypeChatInvite | TLTMeUrlTypeStickerSet\nexport interface TLTMeUrl extends TLObject {\n\treadonly \"@type\": \"tMeUrl\"\n\treadonly url: string\n\treadonly type: TLTMeUrlType\n}\nexport function tMeUrl(object: TLObject): TLTMeUrl { return object as TLTMeUrl }\nexport interface TLTMeUrls extends TLObject {\n\treadonly \"@type\": \"tMeUrls\"\n\treadonly urls: ReadonlyArray<TLTMeUrl>\n}\nexport function tMeUrls(object: TLObject): TLTMeUrls { return object as TLTMeUrls }\nexport interface TLCount extends TLObject {\n\treadonly \"@type\": \"count\"\n\treadonly count: number\n}\nexport function count(object: TLObject): TLCount { return object as TLCount }\nexport interface TLText extends TLObject {\n\treadonly \"@type\": \"text\"\n\treadonly text: string\n}\nexport function text(object: TLObject): TLText { return object as TLText }\nexport interface TLSeconds extends TLObject {\n\treadonly \"@type\": \"seconds\"\n\treadonly seconds: number\n}\nexport function seconds(object: TLObject): TLSeconds { return object as TLSeconds }\nexport interface TLDeepLinkInfo extends TLObject {\n\treadonly \"@type\": \"deepLinkInfo\"\n\treadonly text: TLFormattedText\n\treadonly need_update_application: boolean\n}\nexport function deepLinkInfo(object: TLObject): TLDeepLinkInfo { return object as TLDeepLinkInfo }\nexport interface TLTextParseModeMarkdown extends TLObject {\n\treadonly \"@type\": \"textParseModeMarkdown\"\n\treadonly version: number\n}\nexport function textParseModeMarkdown(object: TLObject): TLTextParseModeMarkdown { return object as TLTextParseModeMarkdown }\nexport interface TLTextParseModeHTML extends TLObject {\n\treadonly \"@type\": \"textParseModeHTML\"\n}\nexport function textParseModeHTML(object: TLObject): TLTextParseModeHTML { return object as TLTextParseModeHTML }\nexport type TLTextParseMode = TLTextParseModeMarkdown | TLTextParseModeHTML\nexport interface TLProxyTypeSocks5 extends TLObject {\n\treadonly \"@type\": \"proxyTypeSocks5\"\n\treadonly username: string\n\treadonly password: string\n}\nexport function proxyTypeSocks5(object: TLObject): TLProxyTypeSocks5 { return object as TLProxyTypeSocks5 }\nexport interface TLProxyTypeHttp extends TLObject {\n\treadonly \"@type\": \"proxyTypeHttp\"\n\treadonly username: string\n\treadonly password: string\n\treadonly http_only: boolean\n}\nexport function proxyTypeHttp(object: TLObject): TLProxyTypeHttp { return object as TLProxyTypeHttp }\nexport interface TLProxyTypeMtproto extends TLObject {\n\treadonly \"@type\": \"proxyTypeMtproto\"\n\treadonly secret: string\n}\nexport function proxyTypeMtproto(object: TLObject): TLProxyTypeMtproto { return object as TLProxyTypeMtproto }\nexport type TLProxyType = TLProxyTypeSocks5 | TLProxyTypeHttp | TLProxyTypeMtproto\nexport interface TLProxy extends TLObject {\n\treadonly \"@type\": \"proxy\"\n\treadonly id: number\n\treadonly server: string\n\treadonly port: number\n\treadonly last_used_date: number\n\treadonly is_enabled: boolean\n\treadonly type: TLProxyType\n}\nexport function proxy(object: TLObject): TLProxy { return object as TLProxy }\nexport interface TLProxies extends TLObject {\n\treadonly \"@type\": \"proxies\"\n\treadonly proxies: ReadonlyArray<TLProxy>\n}\nexport function proxies(object: TLObject): TLProxies { return object as TLProxies }\nexport interface TLInputSticker extends TLObject {\n\treadonly \"@type\": \"inputSticker\"\n\treadonly png_sticker: TLInputFile\n\treadonly emojis: string\n\treadonly mask_position: TLMaskPosition\n}\nexport function inputSticker(object: TLObject): TLInputSticker { return object as TLInputSticker }\nexport interface TLUpdateAuthorizationState extends TLObject {\n\treadonly \"@type\": \"updateAuthorizationState\"\n\treadonly authorization_state: TLAuthorizationState\n}\nexport function updateAuthorizationState(object: TLObject): TLUpdateAuthorizationState { return object as TLUpdateAuthorizationState }\nexport interface TLUpdateNewMessage extends TLObject {\n\treadonly \"@type\": \"updateNewMessage\"\n\treadonly message: TLMessage\n}\nexport function updateNewMessage(object: TLObject): TLUpdateNewMessage { return object as TLUpdateNewMessage }\nexport interface TLUpdateMessageSendAcknowledged extends TLObject {\n\treadonly \"@type\": \"updateMessageSendAcknowledged\"\n\treadonly chat_id: number\n\treadonly message_id: number\n}\nexport function updateMessageSendAcknowledged(object: TLObject): TLUpdateMessageSendAcknowledged { return object as TLUpdateMessageSendAcknowledged }\nexport interface TLUpdateMessageSendSucceeded extends TLObject {\n\treadonly \"@type\": \"updateMessageSendSucceeded\"\n\treadonly message: TLMessage\n\treadonly old_message_id: number\n}\nexport function updateMessageSendSucceeded(object: TLObject): TLUpdateMessageSendSucceeded { return object as TLUpdateMessageSendSucceeded }\nexport interface TLUpdateMessageSendFailed extends TLObject {\n\treadonly \"@type\": \"updateMessageSendFailed\"\n\treadonly message: TLMessage\n\treadonly old_message_id: number\n\treadonly error_code: number\n\treadonly error_message: string\n}\nexport function updateMessageSendFailed(object: TLObject): TLUpdateMessageSendFailed { return object as TLUpdateMessageSendFailed }\nexport interface TLUpdateMessageContent extends TLObject {\n\treadonly \"@type\": \"updateMessageContent\"\n\treadonly chat_id: number\n\treadonly message_id: number\n\treadonly new_content: TLMessageContent\n}\nexport function updateMessageContent(object: TLObject): TLUpdateMessageContent { return object as TLUpdateMessageContent }\nexport interface TLUpdateMessageEdited extends TLObject {\n\treadonly \"@type\": \"updateMessageEdited\"\n\treadonly chat_id: number\n\treadonly message_id: number\n\treadonly edit_date: number\n\treadonly reply_markup: TLReplyMarkup\n}\nexport function updateMessageEdited(object: TLObject): TLUpdateMessageEdited { return object as TLUpdateMessageEdited }\nexport interface TLUpdateMessageViews extends TLObject {\n\treadonly \"@type\": \"updateMessageViews\"\n\treadonly chat_id: number\n\treadonly message_id: number\n\treadonly views: number\n}\nexport function updateMessageViews(object: TLObject): TLUpdateMessageViews { return object as TLUpdateMessageViews }\nexport interface TLUpdateMessageContentOpened extends TLObject {\n\treadonly \"@type\": \"updateMessageContentOpened\"\n\treadonly chat_id: number\n\treadonly message_id: number\n}\nexport function updateMessageContentOpened(object: TLObject): TLUpdateMessageContentOpened { return object as TLUpdateMessageContentOpened }\nexport interface TLUpdateMessageMentionRead extends TLObject {\n\treadonly \"@type\": \"updateMessageMentionRead\"\n\treadonly chat_id: number\n\treadonly message_id: number\n\treadonly unread_mention_count: number\n}\nexport function updateMessageMentionRead(object: TLObject): TLUpdateMessageMentionRead { return object as TLUpdateMessageMentionRead }\nexport interface TLUpdateMessageLiveLocationViewed extends TLObject {\n\treadonly \"@type\": \"updateMessageLiveLocationViewed\"\n\treadonly chat_id: number\n\treadonly message_id: number\n}\nexport function updateMessageLiveLocationViewed(object: TLObject): TLUpdateMessageLiveLocationViewed { return object as TLUpdateMessageLiveLocationViewed }\nexport interface TLUpdateNewChat extends TLObject {\n\treadonly \"@type\": \"updateNewChat\"\n\treadonly chat: TLChat\n}\nexport function updateNewChat(object: TLObject): TLUpdateNewChat { return object as TLUpdateNewChat }\nexport interface TLUpdateChatChatList extends TLObject {\n\treadonly \"@type\": \"updateChatChatList\"\n\treadonly chat_id: number\n\treadonly chat_list: TLChatList\n}\nexport function updateChatChatList(object: TLObject): TLUpdateChatChatList { return object as TLUpdateChatChatList }\nexport interface TLUpdateChatTitle extends TLObject {\n\treadonly \"@type\": \"updateChatTitle\"\n\treadonly chat_id: number\n\treadonly title: string\n}\nexport function updateChatTitle(object: TLObject): TLUpdateChatTitle { return object as TLUpdateChatTitle }\nexport interface TLUpdateChatPhoto extends TLObject {\n\treadonly \"@type\": \"updateChatPhoto\"\n\treadonly chat_id: number\n\treadonly photo: TLChatPhoto\n}\nexport function updateChatPhoto(object: TLObject): TLUpdateChatPhoto { return object as TLUpdateChatPhoto }\nexport interface TLUpdateChatPermissions extends TLObject {\n\treadonly \"@type\": \"updateChatPermissions\"\n\treadonly chat_id: number\n\treadonly permissions: TLChatPermissions\n}\nexport function updateChatPermissions(object: TLObject): TLUpdateChatPermissions { return object as TLUpdateChatPermissions }\nexport interface TLUpdateChatLastMessage extends TLObject {\n\treadonly \"@type\": \"updateChatLastMessage\"\n\treadonly chat_id: number\n\treadonly last_message: TLMessage\n\treadonly order: string\n}\nexport function updateChatLastMessage(object: TLObject): TLUpdateChatLastMessage { return object as TLUpdateChatLastMessage }\nexport interface TLUpdateChatOrder extends TLObject {\n\treadonly \"@type\": \"updateChatOrder\"\n\treadonly chat_id: number\n\treadonly order: string\n}\nexport function updateChatOrder(object: TLObject): TLUpdateChatOrder { return object as TLUpdateChatOrder }\nexport interface TLUpdateChatIsPinned extends TLObject {\n\treadonly \"@type\": \"updateChatIsPinned\"\n\treadonly chat_id: number\n\treadonly is_pinned: boolean\n\treadonly order: string\n}\nexport function updateChatIsPinned(object: TLObject): TLUpdateChatIsPinned { return object as TLUpdateChatIsPinned }\nexport interface TLUpdateChatIsMarkedAsUnread extends TLObject {\n\treadonly \"@type\": \"updateChatIsMarkedAsUnread\"\n\treadonly chat_id: number\n\treadonly is_marked_as_unread: boolean\n}\nexport function updateChatIsMarkedAsUnread(object: TLObject): TLUpdateChatIsMarkedAsUnread { return object as TLUpdateChatIsMarkedAsUnread }\nexport interface TLUpdateChatIsSponsored extends TLObject {\n\treadonly \"@type\": \"updateChatIsSponsored\"\n\treadonly chat_id: number\n\treadonly is_sponsored: boolean\n\treadonly order: string\n}\nexport function updateChatIsSponsored(object: TLObject): TLUpdateChatIsSponsored { return object as TLUpdateChatIsSponsored }\nexport interface TLUpdateChatHasScheduledMessages extends TLObject {\n\treadonly \"@type\": \"updateChatHasScheduledMessages\"\n\treadonly chat_id: number\n\treadonly has_scheduled_messages: boolean\n}\nexport function updateChatHasScheduledMessages(object: TLObject): TLUpdateChatHasScheduledMessages { return object as TLUpdateChatHasScheduledMessages }\nexport interface TLUpdateChatDefaultDisableNotification extends TLObject {\n\treadonly \"@type\": \"updateChatDefaultDisableNotification\"\n\treadonly chat_id: number\n\treadonly default_disable_notification: boolean\n}\nexport function updateChatDefaultDisableNotification(object: TLObject): TLUpdateChatDefaultDisableNotification { return object as TLUpdateChatDefaultDisableNotification }\nexport interface TLUpdateChatReadInbox extends TLObject {\n\treadonly \"@type\": \"updateChatReadInbox\"\n\treadonly chat_id: number\n\treadonly last_read_inbox_message_id: number\n\treadonly unread_count: number\n}\nexport function updateChatReadInbox(object: TLObject): TLUpdateChatReadInbox { return object as TLUpdateChatReadInbox }\nexport interface TLUpdateChatReadOutbox extends TLObject {\n\treadonly \"@type\": \"updateChatReadOutbox\"\n\treadonly chat_id: number\n\treadonly last_read_outbox_message_id: number\n}\nexport function updateChatReadOutbox(object: TLObject): TLUpdateChatReadOutbox { return object as TLUpdateChatReadOutbox }\nexport interface TLUpdateChatUnreadMentionCount extends TLObject {\n\treadonly \"@type\": \"updateChatUnreadMentionCount\"\n\treadonly chat_id: number\n\treadonly unread_mention_count: number\n}\nexport function updateChatUnreadMentionCount(object: TLObject): TLUpdateChatUnreadMentionCount { return object as TLUpdateChatUnreadMentionCount }\nexport interface TLUpdateChatNotificationSettings extends TLObject {\n\treadonly \"@type\": \"updateChatNotificationSettings\"\n\treadonly chat_id: number\n\treadonly notification_settings: TLChatNotificationSettings\n}\nexport function updateChatNotificationSettings(object: TLObject): TLUpdateChatNotificationSettings { return object as TLUpdateChatNotificationSettings }\nexport interface TLUpdateScopeNotificationSettings extends TLObject {\n\treadonly \"@type\": \"updateScopeNotificationSettings\"\n\treadonly scope: TLNotificationSettingsScope\n\treadonly notification_settings: TLScopeNotificationSettings\n}\nexport function updateScopeNotificationSettings(object: TLObject): TLUpdateScopeNotificationSettings { return object as TLUpdateScopeNotificationSettings }\nexport interface TLUpdateChatActionBar extends TLObject {\n\treadonly \"@type\": \"updateChatActionBar\"\n\treadonly chat_id: number\n\treadonly action_bar: TLChatActionBar\n}\nexport function updateChatActionBar(object: TLObject): TLUpdateChatActionBar { return object as TLUpdateChatActionBar }\nexport interface TLUpdateChatPinnedMessage extends TLObject {\n\treadonly \"@type\": \"updateChatPinnedMessage\"\n\treadonly chat_id: number\n\treadonly pinned_message_id: number\n}\nexport function updateChatPinnedMessage(object: TLObject): TLUpdateChatPinnedMessage { return object as TLUpdateChatPinnedMessage }\nexport interface TLUpdateChatReplyMarkup extends TLObject {\n\treadonly \"@type\": \"updateChatReplyMarkup\"\n\treadonly chat_id: number\n\treadonly reply_markup_message_id: number\n}\nexport function updateChatReplyMarkup(object: TLObject): TLUpdateChatReplyMarkup { return object as TLUpdateChatReplyMarkup }\nexport interface TLUpdateChatDraftMessage extends TLObject {\n\treadonly \"@type\": \"updateChatDraftMessage\"\n\treadonly chat_id: number\n\treadonly draft_message: TLDraftMessage\n\treadonly order: string\n}\nexport function updateChatDraftMessage(object: TLObject): TLUpdateChatDraftMessage { return object as TLUpdateChatDraftMessage }\nexport interface TLUpdateChatOnlineMemberCount extends TLObject {\n\treadonly \"@type\": \"updateChatOnlineMemberCount\"\n\treadonly chat_id: number\n\treadonly online_member_count: number\n}\nexport function updateChatOnlineMemberCount(object: TLObject): TLUpdateChatOnlineMemberCount { return object as TLUpdateChatOnlineMemberCount }\nexport interface TLUpdateNotification extends TLObject {\n\treadonly \"@type\": \"updateNotification\"\n\treadonly notification_group_id: number\n\treadonly notification: TLNotification\n}\nexport function updateNotification(object: TLObject): TLUpdateNotification { return object as TLUpdateNotification }\nexport interface TLUpdateNotificationGroup extends TLObject {\n\treadonly \"@type\": \"updateNotificationGroup\"\n\treadonly notification_group_id: number\n\treadonly type: TLNotificationGroupType\n\treadonly chat_id: number\n\treadonly notification_settings_chat_id: number\n\treadonly is_silent: boolean\n\treadonly total_count: number\n\treadonly added_notifications: ReadonlyArray<TLNotification>\n\treadonly removed_notification_ids: ReadonlyArray<number>\n}\nexport function updateNotificationGroup(object: TLObject): TLUpdateNotificationGroup { return object as TLUpdateNotificationGroup }\nexport interface TLUpdateActiveNotifications extends TLObject {\n\treadonly \"@type\": \"updateActiveNotifications\"\n\treadonly groups: ReadonlyArray<TLNotificationGroup>\n}\nexport function updateActiveNotifications(object: TLObject): TLUpdateActiveNotifications { return object as TLUpdateActiveNotifications }\nexport interface TLUpdateHavePendingNotifications extends TLObject {\n\treadonly \"@type\": \"updateHavePendingNotifications\"\n\treadonly have_delayed_notifications: boolean\n\treadonly have_unreceived_notifications: boolean\n}\nexport function updateHavePendingNotifications(object: TLObject): TLUpdateHavePendingNotifications { return object as TLUpdateHavePendingNotifications }\nexport interface TLUpdateDeleteMessages extends TLObject {\n\treadonly \"@type\": \"updateDeleteMessages\"\n\treadonly chat_id: number\n\treadonly message_ids: ReadonlyArray<number>\n\treadonly is_permanent: boolean\n\treadonly from_cache: boolean\n}\nexport function updateDeleteMessages(object: TLObject): TLUpdateDeleteMessages { return object as TLUpdateDeleteMessages }\nexport interface TLUpdateUserChatAction extends TLObject {\n\treadonly \"@type\": \"updateUserChatAction\"\n\treadonly chat_id: number\n\treadonly user_id: number\n\treadonly action: TLChatAction\n}\nexport function updateUserChatAction(object: TLObject): TLUpdateUserChatAction { return object as TLUpdateUserChatAction }\nexport interface TLUpdateUserStatus extends TLObject {\n\treadonly \"@type\": \"updateUserStatus\"\n\treadonly user_id: number\n\treadonly status: TLUserStatus\n}\nexport function updateUserStatus(object: TLObject): TLUpdateUserStatus { return object as TLUpdateUserStatus }\nexport interface TLUpdateUser extends TLObject {\n\treadonly \"@type\": \"updateUser\"\n\treadonly user: TLUser\n}\nexport function updateUser(object: TLObject): TLUpdateUser { return object as TLUpdateUser }\nexport interface TLUpdateBasicGroup extends TLObject {\n\treadonly \"@type\": \"updateBasicGroup\"\n\treadonly basic_group: TLBasicGroup\n}\nexport function updateBasicGroup(object: TLObject): TLUpdateBasicGroup { return object as TLUpdateBasicGroup }\nexport interface TLUpdateSupergroup extends TLObject {\n\treadonly \"@type\": \"updateSupergroup\"\n\treadonly supergroup: TLSupergroup\n}\nexport function updateSupergroup(object: TLObject): TLUpdateSupergroup { return object as TLUpdateSupergroup }\nexport interface TLUpdateSecretChat extends TLObject {\n\treadonly \"@type\": \"updateSecretChat\"\n\treadonly secret_chat: TLSecretChat\n}\nexport function updateSecretChat(object: TLObject): TLUpdateSecretChat { return object as TLUpdateSecretChat }\nexport interface TLUpdateUserFullInfo extends TLObject {\n\treadonly \"@type\": \"updateUserFullInfo\"\n\treadonly user_id: number\n\treadonly user_full_info: TLUserFullInfo\n}\nexport function updateUserFullInfo(object: TLObject): TLUpdateUserFullInfo { return object as TLUpdateUserFullInfo }\nexport interface TLUpdateBasicGroupFullInfo extends TLObject {\n\treadonly \"@type\": \"updateBasicGroupFullInfo\"\n\treadonly basic_group_id: number\n\treadonly basic_group_full_info: TLBasicGroupFullInfo\n}\nexport function updateBasicGroupFullInfo(object: TLObject): TLUpdateBasicGroupFullInfo { return object as TLUpdateBasicGroupFullInfo }\nexport interface TLUpdateSupergroupFullInfo extends TLObject {\n\treadonly \"@type\": \"updateSupergroupFullInfo\"\n\treadonly supergroup_id: number\n\treadonly supergroup_full_info: TLSupergroupFullInfo\n}\nexport function updateSupergroupFullInfo(object: TLObject): TLUpdateSupergroupFullInfo { return object as TLUpdateSupergroupFullInfo }\nexport interface TLUpdateServiceNotification extends TLObject {\n\treadonly \"@type\": \"updateServiceNotification\"\n\treadonly type: string\n\treadonly content: TLMessageContent\n}\nexport function updateServiceNotification(object: TLObject): TLUpdateServiceNotification { return object as TLUpdateServiceNotification }\nexport interface TLUpdateFile extends TLObject {\n\treadonly \"@type\": \"updateFile\"\n\treadonly file: TLFile\n}\nexport function updateFile(object: TLObject): TLUpdateFile { return object as TLUpdateFile }\nexport interface TLUpdateFileGenerationStart extends TLObject {\n\treadonly \"@type\": \"updateFileGenerationStart\"\n\treadonly generation_id: string\n\treadonly original_path: string\n\treadonly destination_path: string\n\treadonly conversion: string\n}\nexport function updateFileGenerationStart(object: TLObject): TLUpdateFileGenerationStart { return object as TLUpdateFileGenerationStart }\nexport interface TLUpdateFileGenerationStop extends TLObject {\n\treadonly \"@type\": \"updateFileGenerationStop\"\n\treadonly generation_id: string\n}\nexport function updateFileGenerationStop(object: TLObject): TLUpdateFileGenerationStop { return object as TLUpdateFileGenerationStop }\nexport interface TLUpdateCall extends TLObject {\n\treadonly \"@type\": \"updateCall\"\n\treadonly call: TLCall\n}\nexport function updateCall(object: TLObject): TLUpdateCall { return object as TLUpdateCall }\nexport interface TLUpdateUserPrivacySettingRules extends TLObject {\n\treadonly \"@type\": \"updateUserPrivacySettingRules\"\n\treadonly setting: TLUserPrivacySetting\n\treadonly rules: TLUserPrivacySettingRules\n}\nexport function updateUserPrivacySettingRules(object: TLObject): TLUpdateUserPrivacySettingRules { return object as TLUpdateUserPrivacySettingRules }\nexport interface TLUpdateUnreadMessageCount extends TLObject {\n\treadonly \"@type\": \"updateUnreadMessageCount\"\n\treadonly chat_list: TLChatList\n\treadonly unread_count: number\n\treadonly unread_unmuted_count: number\n}\nexport function updateUnreadMessageCount(object: TLObject): TLUpdateUnreadMessageCount { return object as TLUpdateUnreadMessageCount }\nexport interface TLUpdateUnreadChatCount extends TLObject {\n\treadonly \"@type\": \"updateUnreadChatCount\"\n\treadonly chat_list: TLChatList\n\treadonly total_count: number\n\treadonly unread_count: number\n\treadonly unread_unmuted_count: number\n\treadonly marked_as_unread_count: number\n\treadonly marked_as_unread_unmuted_count: number\n}\nexport function updateUnreadChatCount(object: TLObject): TLUpdateUnreadChatCount { return object as TLUpdateUnreadChatCount }\nexport interface TLUpdateOption extends TLObject {\n\treadonly \"@type\": \"updateOption\"\n\treadonly name: string\n\treadonly value: TLOptionValue\n}\nexport function updateOption(object: TLObject): TLUpdateOption { return object as TLUpdateOption }\nexport interface TLUpdateInstalledStickerSets extends TLObject {\n\treadonly \"@type\": \"updateInstalledStickerSets\"\n\treadonly is_masks: boolean\n\treadonly sticker_set_ids: ReadonlyArray<string>\n}\nexport function updateInstalledStickerSets(object: TLObject): TLUpdateInstalledStickerSets { return object as TLUpdateInstalledStickerSets }\nexport interface TLUpdateTrendingStickerSets extends TLObject {\n\treadonly \"@type\": \"updateTrendingStickerSets\"\n\treadonly sticker_sets: TLStickerSets\n}\nexport function updateTrendingStickerSets(object: TLObject): TLUpdateTrendingStickerSets { return object as TLUpdateTrendingStickerSets }\nexport interface TLUpdateRecentStickers extends TLObject {\n\treadonly \"@type\": \"updateRecentStickers\"\n\treadonly is_attached: boolean\n\treadonly sticker_ids: ReadonlyArray<number>\n}\nexport function updateRecentStickers(object: TLObject): TLUpdateRecentStickers { return object as TLUpdateRecentStickers }\nexport interface TLUpdateFavoriteStickers extends TLObject {\n\treadonly \"@type\": \"updateFavoriteStickers\"\n\treadonly sticker_ids: ReadonlyArray<number>\n}\nexport function updateFavoriteStickers(object: TLObject): TLUpdateFavoriteStickers { return object as TLUpdateFavoriteStickers }\nexport interface TLUpdateSavedAnimations extends TLObject {\n\treadonly \"@type\": \"updateSavedAnimations\"\n\treadonly animation_ids: ReadonlyArray<number>\n}\nexport function updateSavedAnimations(object: TLObject): TLUpdateSavedAnimations { return object as TLUpdateSavedAnimations }\nexport interface TLUpdateSelectedBackground extends TLObject {\n\treadonly \"@type\": \"updateSelectedBackground\"\n\treadonly for_dark_theme: boolean\n\treadonly background: TLBackground\n}\nexport function updateSelectedBackground(object: TLObject): TLUpdateSelectedBackground { return object as TLUpdateSelectedBackground }\nexport interface TLUpdateLanguagePackStrings extends TLObject {\n\treadonly \"@type\": \"updateLanguagePackStrings\"\n\treadonly localization_target: string\n\treadonly language_pack_id: string\n\treadonly strings: ReadonlyArray<TLLanguagePackString>\n}\nexport function updateLanguagePackStrings(object: TLObject): TLUpdateLanguagePackStrings { return object as TLUpdateLanguagePackStrings }\nexport interface TLUpdateConnectionState extends TLObject {\n\treadonly \"@type\": \"updateConnectionState\"\n\treadonly state: TLConnectionState\n}\nexport function updateConnectionState(object: TLObject): TLUpdateConnectionState { return object as TLUpdateConnectionState }\nexport interface TLUpdateTermsOfService extends TLObject {\n\treadonly \"@type\": \"updateTermsOfService\"\n\treadonly terms_of_service_id: string\n\treadonly terms_of_service: TLTermsOfService\n}\nexport function updateTermsOfService(object: TLObject): TLUpdateTermsOfService { return object as TLUpdateTermsOfService }\nexport interface TLUpdateUsersNearby extends TLObject {\n\treadonly \"@type\": \"updateUsersNearby\"\n\treadonly users_nearby: ReadonlyArray<TLChatNearby>\n}\nexport function updateUsersNearby(object: TLObject): TLUpdateUsersNearby { return object as TLUpdateUsersNearby }\nexport interface TLUpdateNewInlineQuery extends TLObject {\n\treadonly \"@type\": \"updateNewInlineQuery\"\n\treadonly id: string\n\treadonly sender_user_id: number\n\treadonly user_location: TLLocation\n\treadonly query: string\n\treadonly offset: string\n}\nexport function updateNewInlineQuery(object: TLObject): TLUpdateNewInlineQuery { return object as TLUpdateNewInlineQuery }\nexport interface TLUpdateNewChosenInlineResult extends TLObject {\n\treadonly \"@type\": \"updateNewChosenInlineResult\"\n\treadonly sender_user_id: number\n\treadonly user_location: TLLocation\n\treadonly query: string\n\treadonly result_id: string\n\treadonly inline_message_id: string\n}\nexport function updateNewChosenInlineResult(object: TLObject): TLUpdateNewChosenInlineResult { return object as TLUpdateNewChosenInlineResult }\nexport interface TLUpdateNewCallbackQuery extends TLObject {\n\treadonly \"@type\": \"updateNewCallbackQuery\"\n\treadonly id: string\n\treadonly sender_user_id: number\n\treadonly chat_id: number\n\treadonly message_id: number\n\treadonly chat_instance: string\n\treadonly payload: TLCallbackQueryPayload\n}\nexport function updateNewCallbackQuery(object: TLObject): TLUpdateNewCallbackQuery { return object as TLUpdateNewCallbackQuery }\nexport interface TLUpdateNewInlineCallbackQuery extends TLObject {\n\treadonly \"@type\": \"updateNewInlineCallbackQuery\"\n\treadonly id: string\n\treadonly sender_user_id: number\n\treadonly inline_message_id: string\n\treadonly chat_instance: string\n\treadonly payload: TLCallbackQueryPayload\n}\nexport function updateNewInlineCallbackQuery(object: TLObject): TLUpdateNewInlineCallbackQuery { return object as TLUpdateNewInlineCallbackQuery }\nexport interface TLUpdateNewShippingQuery extends TLObject {\n\treadonly \"@type\": \"updateNewShippingQuery\"\n\treadonly id: string\n\treadonly sender_user_id: number\n\treadonly invoice_payload: string\n\treadonly shipping_address: TLAddress\n}\nexport function updateNewShippingQuery(object: TLObject): TLUpdateNewShippingQuery { return object as TLUpdateNewShippingQuery }\nexport interface TLUpdateNewPreCheckoutQuery extends TLObject {\n\treadonly \"@type\": \"updateNewPreCheckoutQuery\"\n\treadonly id: string\n\treadonly sender_user_id: number\n\treadonly currency: string\n\treadonly total_amount: number\n\treadonly invoice_payload: Uint8Array\n\treadonly shipping_option_id: string\n\treadonly order_info: TLOrderInfo\n}\nexport function updateNewPreCheckoutQuery(object: TLObject): TLUpdateNewPreCheckoutQuery { return object as TLUpdateNewPreCheckoutQuery }\nexport interface TLUpdateNewCustomEvent extends TLObject {\n\treadonly \"@type\": \"updateNewCustomEvent\"\n\treadonly event: string\n}\nexport function updateNewCustomEvent(object: TLObject): TLUpdateNewCustomEvent { return object as TLUpdateNewCustomEvent }\nexport interface TLUpdateNewCustomQuery extends TLObject {\n\treadonly \"@type\": \"updateNewCustomQuery\"\n\treadonly id: string\n\treadonly data: string\n\treadonly timeout: number\n}\nexport function updateNewCustomQuery(object: TLObject): TLUpdateNewCustomQuery { return object as TLUpdateNewCustomQuery }\nexport interface TLUpdatePoll extends TLObject {\n\treadonly \"@type\": \"updatePoll\"\n\treadonly poll: TLPoll\n}\nexport function updatePoll(object: TLObject): TLUpdatePoll { return object as TLUpdatePoll }\nexport interface TLUpdatePollAnswer extends TLObject {\n\treadonly \"@type\": \"updatePollAnswer\"\n\treadonly poll_id: string\n\treadonly user_id: number\n\treadonly option_ids: ReadonlyArray<number>\n}\nexport function updatePollAnswer(object: TLObject): TLUpdatePollAnswer { return object as TLUpdatePollAnswer }\nexport type TLUpdate = TLUpdateAuthorizationState | TLUpdateNewMessage | TLUpdateMessageSendAcknowledged | TLUpdateMessageSendSucceeded | TLUpdateMessageSendFailed | TLUpdateMessageContent | TLUpdateMessageEdited | TLUpdateMessageViews | TLUpdateMessageContentOpened | TLUpdateMessageMentionRead | TLUpdateMessageLiveLocationViewed | TLUpdateNewChat | TLUpdateChatChatList | TLUpdateChatTitle | TLUpdateChatPhoto | TLUpdateChatPermissions | TLUpdateChatLastMessage | TLUpdateChatOrder | TLUpdateChatIsPinned | TLUpdateChatIsMarkedAsUnread | TLUpdateChatIsSponsored | TLUpdateChatHasScheduledMessages | TLUpdateChatDefaultDisableNotification | TLUpdateChatReadInbox | TLUpdateChatReadOutbox | TLUpdateChatUnreadMentionCount | TLUpdateChatNotificationSettings | TLUpdateScopeNotificationSettings | TLUpdateChatActionBar | TLUpdateChatPinnedMessage | TLUpdateChatReplyMarkup | TLUpdateChatDraftMessage | TLUpdateChatOnlineMemberCount | TLUpdateNotification | TLUpdateNotificationGroup | TLUpdateActiveNotifications | TLUpdateHavePendingNotifications | TLUpdateDeleteMessages | TLUpdateUserChatAction | TLUpdateUserStatus | TLUpdateUser | TLUpdateBasicGroup | TLUpdateSupergroup | TLUpdateSecretChat | TLUpdateUserFullInfo | TLUpdateBasicGroupFullInfo | TLUpdateSupergroupFullInfo | TLUpdateServiceNotification | TLUpdateFile | TLUpdateFileGenerationStart | TLUpdateFileGenerationStop | TLUpdateCall | TLUpdateUserPrivacySettingRules | TLUpdateUnreadMessageCount | TLUpdateUnreadChatCount | TLUpdateOption | TLUpdateInstalledStickerSets | TLUpdateTrendingStickerSets | TLUpdateRecentStickers | TLUpdateFavoriteStickers | TLUpdateSavedAnimations | TLUpdateSelectedBackground | TLUpdateLanguagePackStrings | TLUpdateConnectionState | TLUpdateTermsOfService | TLUpdateUsersNearby | TLUpdateNewInlineQuery | TLUpdateNewChosenInlineResult | TLUpdateNewCallbackQuery | TLUpdateNewInlineCallbackQuery | TLUpdateNewShippingQuery | TLUpdateNewPreCheckoutQuery | TLUpdateNewCustomEvent | TLUpdateNewCustomQuery | TLUpdatePoll | TLUpdatePollAnswer\nexport interface TLUpdates extends TLObject {\n\treadonly \"@type\": \"updates\"\n\treadonly updates: ReadonlyArray<TLUpdate>\n}\nexport function updates(object: TLObject): TLUpdates { return object as TLUpdates }\nexport interface TLLogStreamDefault extends TLObject {\n\treadonly \"@type\": \"logStreamDefault\"\n}\nexport function logStreamDefault(object: TLObject): TLLogStreamDefault { return object as TLLogStreamDefault }\nexport interface TLLogStreamFile extends TLObject {\n\treadonly \"@type\": \"logStreamFile\"\n\treadonly path: string\n\treadonly max_file_size: number\n}\nexport function logStreamFile(object: TLObject): TLLogStreamFile { return object as TLLogStreamFile }\nexport interface TLLogStreamEmpty extends TLObject {\n\treadonly \"@type\": \"logStreamEmpty\"\n}\nexport function logStreamEmpty(object: TLObject): TLLogStreamEmpty { return object as TLLogStreamEmpty }\nexport type TLLogStream = TLLogStreamDefault | TLLogStreamFile | TLLogStreamEmpty\nexport interface TLLogVerbosityLevel extends TLObject {\n\treadonly \"@type\": \"logVerbosityLevel\"\n\treadonly verbosity_level: number\n}\nexport function logVerbosityLevel(object: TLObject): TLLogVerbosityLevel { return object as TLLogVerbosityLevel }\nexport interface TLLogTags extends TLObject {\n\treadonly \"@type\": \"logTags\"\n\treadonly tags: ReadonlyArray<string>\n}\nexport function logTags(object: TLObject): TLLogTags { return object as TLLogTags }\nexport interface TLTestInt extends TLObject {\n\treadonly \"@type\": \"testInt\"\n\treadonly value: number\n}\nexport function testInt(object: TLObject): TLTestInt { return object as TLTestInt }\nexport interface TLTestString extends TLObject {\n\treadonly \"@type\": \"testString\"\n\treadonly value: string\n}\nexport function testString(object: TLObject): TLTestString { return object as TLTestString }\nexport interface TLTestBytes extends TLObject {\n\treadonly \"@type\": \"testBytes\"\n\treadonly value: Uint8Array\n}\nexport function testBytes(object: TLObject): TLTestBytes { return object as TLTestBytes }\nexport interface TLTestVectorInt extends TLObject {\n\treadonly \"@type\": \"testVectorInt\"\n\treadonly value: ReadonlyArray<number>\n}\nexport function testVectorInt(object: TLObject): TLTestVectorInt { return object as TLTestVectorInt }\nexport interface TLTestVectorIntObject extends TLObject {\n\treadonly \"@type\": \"testVectorIntObject\"\n\treadonly value: ReadonlyArray<TLTestInt>\n}\nexport function testVectorIntObject(object: TLObject): TLTestVectorIntObject { return object as TLTestVectorIntObject }\nexport interface TLTestVectorString extends TLObject {\n\treadonly \"@type\": \"testVectorString\"\n\treadonly value: ReadonlyArray<string>\n}\nexport function testVectorString(object: TLObject): TLTestVectorString { return object as TLTestVectorString }\nexport interface TLTestVectorStringObject extends TLObject {\n\treadonly \"@type\": \"testVectorStringObject\"\n\treadonly value: ReadonlyArray<TLTestString>\n}\nexport function testVectorStringObject(object: TLObject): TLTestVectorStringObject { return object as TLTestVectorStringObject }\nexport class TD {\n\tpublic readonly client: TdClient\n\tpublic constructor(client: TdClient) {\n\t\tthis.client = client\n\t}\n\n\tpublic async getAuthorizationState(): Promise<TLAuthorizationState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getAuthorizationState\",\n\t\t} as any as TdObject)) as any as TLAuthorizationState\n\t}\n\n\tpublic async setTdlibParameters(parameters: TLTdlibParameters): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setTdlibParameters\",\n\t\t\t\"parameters\": parameters,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async checkDatabaseEncryptionKey(encryption_key: Uint8Array): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkDatabaseEncryptionKey\",\n\t\t\t\"encryption_key\": encryption_key,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setAuthenticationPhoneNumber(phone_number: string, settings: TLPhoneNumberAuthenticationSettings): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setAuthenticationPhoneNumber\",\n\t\t\t\"phone_number\": phone_number,\n\t\t\t\"settings\": settings,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async resendAuthenticationCode(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendAuthenticationCode\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async checkAuthenticationCode(code: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkAuthenticationCode\",\n\t\t\t\"code\": code,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async requestQrCodeAuthentication(other_user_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"requestQrCodeAuthentication\",\n\t\t\t\"other_user_ids\": other_user_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async registerUser(first_name: string, last_name: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"registerUser\",\n\t\t\t\"first_name\": first_name,\n\t\t\t\"last_name\": last_name,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async checkAuthenticationPassword(password: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkAuthenticationPassword\",\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async requestAuthenticationPasswordRecovery(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"requestAuthenticationPasswordRecovery\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async recoverAuthenticationPassword(recovery_code: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"recoverAuthenticationPassword\",\n\t\t\t\"recovery_code\": recovery_code,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async checkAuthenticationBotToken(token: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkAuthenticationBotToken\",\n\t\t\t\"token\": token,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async logOut(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"logOut\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async close(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"close\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async destroy(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"destroy\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async confirmQrCodeAuthentication(link: string): Promise<TLSession> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"confirmQrCodeAuthentication\",\n\t\t\t\"link\": link,\n\t\t} as any as TdObject)) as any as TLSession\n\t}\n\n\tpublic async getCurrentState(): Promise<TLUpdates> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getCurrentState\",\n\t\t} as any as TdObject)) as any as TLUpdates\n\t}\n\n\tpublic async setDatabaseEncryptionKey(new_encryption_key: Uint8Array): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setDatabaseEncryptionKey\",\n\t\t\t\"new_encryption_key\": new_encryption_key,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPasswordState(): Promise<TLPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPasswordState\",\n\t\t} as any as TdObject)) as any as TLPasswordState\n\t}\n\n\tpublic async setPassword(old_password: string, new_password: string, new_hint: string, set_recovery_email_address: boolean, new_recovery_email_address: string): Promise<TLPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setPassword\",\n\t\t\t\"old_password\": old_password,\n\t\t\t\"new_password\": new_password,\n\t\t\t\"new_hint\": new_hint,\n\t\t\t\"set_recovery_email_address\": set_recovery_email_address,\n\t\t\t\"new_recovery_email_address\": new_recovery_email_address,\n\t\t} as any as TdObject)) as any as TLPasswordState\n\t}\n\n\tpublic async getRecoveryEmailAddress(password: string): Promise<TLRecoveryEmailAddress> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getRecoveryEmailAddress\",\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLRecoveryEmailAddress\n\t}\n\n\tpublic async setRecoveryEmailAddress(password: string, new_recovery_email_address: string): Promise<TLPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setRecoveryEmailAddress\",\n\t\t\t\"password\": password,\n\t\t\t\"new_recovery_email_address\": new_recovery_email_address,\n\t\t} as any as TdObject)) as any as TLPasswordState\n\t}\n\n\tpublic async checkRecoveryEmailAddressCode(code: string): Promise<TLPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkRecoveryEmailAddressCode\",\n\t\t\t\"code\": code,\n\t\t} as any as TdObject)) as any as TLPasswordState\n\t}\n\n\tpublic async resendRecoveryEmailAddressCode(): Promise<TLPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendRecoveryEmailAddressCode\",\n\t\t} as any as TdObject)) as any as TLPasswordState\n\t}\n\n\tpublic async requestPasswordRecovery(): Promise<TLEmailAddressAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"requestPasswordRecovery\",\n\t\t} as any as TdObject)) as any as TLEmailAddressAuthenticationCodeInfo\n\t}\n\n\tpublic async recoverPassword(recovery_code: string): Promise<TLPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"recoverPassword\",\n\t\t\t\"recovery_code\": recovery_code,\n\t\t} as any as TdObject)) as any as TLPasswordState\n\t}\n\n\tpublic async createTemporaryPassword(password: string, valid_for: number): Promise<TLTemporaryPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createTemporaryPassword\",\n\t\t\t\"password\": password,\n\t\t\t\"valid_for\": valid_for,\n\t\t} as any as TdObject)) as any as TLTemporaryPasswordState\n\t}\n\n\tpublic async getTemporaryPasswordState(): Promise<TLTemporaryPasswordState> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getTemporaryPasswordState\",\n\t\t} as any as TdObject)) as any as TLTemporaryPasswordState\n\t}\n\n\tpublic async getMe(): Promise<TLUser> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMe\",\n\t\t} as any as TdObject)) as any as TLUser\n\t}\n\n\tpublic async getUser(user_id: number): Promise<TLUser> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getUser\",\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLUser\n\t}\n\n\tpublic async getUserFullInfo(user_id: number): Promise<TLUserFullInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getUserFullInfo\",\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLUserFullInfo\n\t}\n\n\tpublic async getBasicGroup(basic_group_id: number): Promise<TLBasicGroup> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getBasicGroup\",\n\t\t\t\"basic_group_id\": basic_group_id,\n\t\t} as any as TdObject)) as any as TLBasicGroup\n\t}\n\n\tpublic async getBasicGroupFullInfo(basic_group_id: number): Promise<TLBasicGroupFullInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getBasicGroupFullInfo\",\n\t\t\t\"basic_group_id\": basic_group_id,\n\t\t} as any as TdObject)) as any as TLBasicGroupFullInfo\n\t}\n\n\tpublic async getSupergroup(supergroup_id: number): Promise<TLSupergroup> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSupergroup\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t} as any as TdObject)) as any as TLSupergroup\n\t}\n\n\tpublic async getSupergroupFullInfo(supergroup_id: number): Promise<TLSupergroupFullInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSupergroupFullInfo\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t} as any as TdObject)) as any as TLSupergroupFullInfo\n\t}\n\n\tpublic async getSecretChat(secret_chat_id: number): Promise<TLSecretChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSecretChat\",\n\t\t\t\"secret_chat_id\": secret_chat_id,\n\t\t} as any as TdObject)) as any as TLSecretChat\n\t}\n\n\tpublic async getChat(chat_id: number): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async getMessage(chat_id: number, message_id: number): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async getMessageLocally(chat_id: number, message_id: number): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMessageLocally\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async getRepliedMessage(chat_id: number, message_id: number): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getRepliedMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async getChatPinnedMessage(chat_id: number): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatPinnedMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async getMessages(chat_id: number, message_ids: ReadonlyArray<number>): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_ids\": message_ids,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async getFile(file_id: number): Promise<TLFile> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getFile\",\n\t\t\t\"file_id\": file_id,\n\t\t} as any as TdObject)) as any as TLFile\n\t}\n\n\tpublic async getRemoteFile(remote_file_id: string, file_type: TLFileType): Promise<TLFile> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getRemoteFile\",\n\t\t\t\"remote_file_id\": remote_file_id,\n\t\t\t\"file_type\": file_type,\n\t\t} as any as TdObject)) as any as TLFile\n\t}\n\n\tpublic async getChats(chat_list: TLChatList, offset_order: string, offset_chat_id: number, limit: number): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChats\",\n\t\t\t\"chat_list\": chat_list,\n\t\t\t\"offset_order\": offset_order,\n\t\t\t\"offset_chat_id\": offset_chat_id,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async searchPublicChat(username: string): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchPublicChat\",\n\t\t\t\"username\": username,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async searchPublicChats(query: string): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchPublicChats\",\n\t\t\t\"query\": query,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async searchChats(query: string, limit: number): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchChats\",\n\t\t\t\"query\": query,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async searchChatsOnServer(query: string, limit: number): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchChatsOnServer\",\n\t\t\t\"query\": query,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async searchChatsNearby(location: TLLocation): Promise<TLChatsNearby> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchChatsNearby\",\n\t\t\t\"location\": location,\n\t\t} as any as TdObject)) as any as TLChatsNearby\n\t}\n\n\tpublic async getTopChats(category: TLTopChatCategory, limit: number): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getTopChats\",\n\t\t\t\"category\": category,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async removeTopChat(category: TLTopChatCategory, chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeTopChat\",\n\t\t\t\"category\": category,\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async addRecentlyFoundChat(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addRecentlyFoundChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeRecentlyFoundChat(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeRecentlyFoundChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async clearRecentlyFoundChats(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"clearRecentlyFoundChats\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async checkChatUsername(chat_id: number, username: string): Promise<TLCheckChatUsernameResult> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkChatUsername\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"username\": username,\n\t\t} as any as TdObject)) as any as TLCheckChatUsernameResult\n\t}\n\n\tpublic async getCreatedPublicChats(type: TLPublicChatType): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getCreatedPublicChats\",\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async checkCreatedPublicChatsLimit(type: TLPublicChatType): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkCreatedPublicChatsLimit\",\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getSuitableDiscussionChats(): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSuitableDiscussionChats\",\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async getInactiveSupergroupChats(): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getInactiveSupergroupChats\",\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async getGroupsInCommon(user_id: number, offset_chat_id: number, limit: number): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getGroupsInCommon\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"offset_chat_id\": offset_chat_id,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async getChatHistory(chat_id: number, from_message_id: number, offset: number, limit: number, only_local: boolean): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatHistory\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"from_message_id\": from_message_id,\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t\t\"only_local\": only_local,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async deleteChatHistory(chat_id: number, remove_from_chat_list: boolean, revoke: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteChatHistory\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"remove_from_chat_list\": remove_from_chat_list,\n\t\t\t\"revoke\": revoke,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async searchChatMessages(chat_id: number, query: string, sender_user_id: number, from_message_id: number, offset: number, limit: number, filter: TLSearchMessagesFilter): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchChatMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"query\": query,\n\t\t\t\"sender_user_id\": sender_user_id,\n\t\t\t\"from_message_id\": from_message_id,\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t\t\"filter\": filter,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async searchMessages(chat_list: TLChatList, query: string, offset_date: number, offset_chat_id: number, offset_message_id: number, limit: number): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchMessages\",\n\t\t\t\"chat_list\": chat_list,\n\t\t\t\"query\": query,\n\t\t\t\"offset_date\": offset_date,\n\t\t\t\"offset_chat_id\": offset_chat_id,\n\t\t\t\"offset_message_id\": offset_message_id,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async searchSecretMessages(chat_id: number, query: string, from_search_id: string, limit: number, filter: TLSearchMessagesFilter): Promise<TLFoundMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchSecretMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"query\": query,\n\t\t\t\"from_search_id\": from_search_id,\n\t\t\t\"limit\": limit,\n\t\t\t\"filter\": filter,\n\t\t} as any as TdObject)) as any as TLFoundMessages\n\t}\n\n\tpublic async searchCallMessages(from_message_id: number, limit: number, only_missed: boolean): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchCallMessages\",\n\t\t\t\"from_message_id\": from_message_id,\n\t\t\t\"limit\": limit,\n\t\t\t\"only_missed\": only_missed,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async searchChatRecentLocationMessages(chat_id: number, limit: number): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchChatRecentLocationMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async getActiveLiveLocationMessages(): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getActiveLiveLocationMessages\",\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async getChatMessageByDate(chat_id: number, date: number): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatMessageByDate\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"date\": date,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async getChatMessageCount(chat_id: number, filter: TLSearchMessagesFilter, return_local: boolean): Promise<TLCount> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatMessageCount\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"filter\": filter,\n\t\t\t\"return_local\": return_local,\n\t\t} as any as TdObject)) as any as TLCount\n\t}\n\n\tpublic async getChatScheduledMessages(chat_id: number): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatScheduledMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async removeNotification(notification_group_id: number, notification_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeNotification\",\n\t\t\t\"notification_group_id\": notification_group_id,\n\t\t\t\"notification_id\": notification_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeNotificationGroup(notification_group_id: number, max_notification_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeNotificationGroup\",\n\t\t\t\"notification_group_id\": notification_group_id,\n\t\t\t\"max_notification_id\": max_notification_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPublicMessageLink(chat_id: number, message_id: number, for_album: boolean): Promise<TLPublicMessageLink> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPublicMessageLink\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"for_album\": for_album,\n\t\t} as any as TdObject)) as any as TLPublicMessageLink\n\t}\n\n\tpublic async getMessageLink(chat_id: number, message_id: number): Promise<TLHttpUrl> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMessageLink\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLHttpUrl\n\t}\n\n\tpublic async getMessageLinkInfo(url: string): Promise<TLMessageLinkInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMessageLinkInfo\",\n\t\t\t\"url\": url,\n\t\t} as any as TdObject)) as any as TLMessageLinkInfo\n\t}\n\n\tpublic async sendMessage(chat_id: number, reply_to_message_id: number, options: TLSendMessageOptions, reply_markup: TLReplyMarkup, input_message_content: TLInputMessageContent): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"reply_to_message_id\": reply_to_message_id,\n\t\t\t\"options\": options,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"input_message_content\": input_message_content,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async sendMessageAlbum(chat_id: number, reply_to_message_id: number, options: TLSendMessageOptions, input_message_contents: ReadonlyArray<TLInputMessageContent>): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendMessageAlbum\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"reply_to_message_id\": reply_to_message_id,\n\t\t\t\"options\": options,\n\t\t\t\"input_message_contents\": input_message_contents,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async sendBotStartMessage(bot_user_id: number, chat_id: number, parameter: string): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendBotStartMessage\",\n\t\t\t\"bot_user_id\": bot_user_id,\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"parameter\": parameter,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async sendInlineQueryResultMessage(chat_id: number, reply_to_message_id: number, options: TLSendMessageOptions, query_id: string, result_id: string, hide_via_bot: boolean): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendInlineQueryResultMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"reply_to_message_id\": reply_to_message_id,\n\t\t\t\"options\": options,\n\t\t\t\"query_id\": query_id,\n\t\t\t\"result_id\": result_id,\n\t\t\t\"hide_via_bot\": hide_via_bot,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async forwardMessages(chat_id: number, from_chat_id: number, message_ids: ReadonlyArray<number>, options: TLSendMessageOptions, as_album: boolean, send_copy: boolean, remove_caption: boolean): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"forwardMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"from_chat_id\": from_chat_id,\n\t\t\t\"message_ids\": message_ids,\n\t\t\t\"options\": options,\n\t\t\t\"as_album\": as_album,\n\t\t\t\"send_copy\": send_copy,\n\t\t\t\"remove_caption\": remove_caption,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async resendMessages(chat_id: number, message_ids: ReadonlyArray<number>): Promise<TLMessages> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_ids\": message_ids,\n\t\t} as any as TdObject)) as any as TLMessages\n\t}\n\n\tpublic async sendChatSetTtlMessage(chat_id: number, ttl: number): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendChatSetTtlMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"ttl\": ttl,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async sendChatScreenshotTakenNotification(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendChatScreenshotTakenNotification\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async addLocalMessage(chat_id: number, sender_user_id: number, reply_to_message_id: number, disable_notification: boolean, input_message_content: TLInputMessageContent): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addLocalMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"sender_user_id\": sender_user_id,\n\t\t\t\"reply_to_message_id\": reply_to_message_id,\n\t\t\t\"disable_notification\": disable_notification,\n\t\t\t\"input_message_content\": input_message_content,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async deleteMessages(chat_id: number, message_ids: ReadonlyArray<number>, revoke: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_ids\": message_ids,\n\t\t\t\"revoke\": revoke,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async deleteChatMessagesFromUser(chat_id: number, user_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteChatMessagesFromUser\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editMessageText(chat_id: number, message_id: number, reply_markup: TLReplyMarkup, input_message_content: TLInputMessageContent): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editMessageText\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"input_message_content\": input_message_content,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async editMessageLiveLocation(chat_id: number, message_id: number, reply_markup: TLReplyMarkup, location: TLLocation): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editMessageLiveLocation\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"location\": location,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async editMessageMedia(chat_id: number, message_id: number, reply_markup: TLReplyMarkup, input_message_content: TLInputMessageContent): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editMessageMedia\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"input_message_content\": input_message_content,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async editMessageCaption(chat_id: number, message_id: number, reply_markup: TLReplyMarkup, caption: TLFormattedText): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editMessageCaption\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"caption\": caption,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async editMessageReplyMarkup(chat_id: number, message_id: number, reply_markup: TLReplyMarkup): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editMessageReplyMarkup\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async editInlineMessageText(inline_message_id: string, reply_markup: TLReplyMarkup, input_message_content: TLInputMessageContent): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editInlineMessageText\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"input_message_content\": input_message_content,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editInlineMessageLiveLocation(inline_message_id: string, reply_markup: TLReplyMarkup, location: TLLocation): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editInlineMessageLiveLocation\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"location\": location,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editInlineMessageMedia(inline_message_id: string, reply_markup: TLReplyMarkup, input_message_content: TLInputMessageContent): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editInlineMessageMedia\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"input_message_content\": input_message_content,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editInlineMessageCaption(inline_message_id: string, reply_markup: TLReplyMarkup, caption: TLFormattedText): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editInlineMessageCaption\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t\t\"caption\": caption,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editInlineMessageReplyMarkup(inline_message_id: string, reply_markup: TLReplyMarkup): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editInlineMessageReplyMarkup\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editMessageSchedulingState(chat_id: number, message_id: number, scheduling_state: TLMessageSchedulingState): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editMessageSchedulingState\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"scheduling_state\": scheduling_state,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getTextEntities(text: string): Promise<TLTextEntities> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getTextEntities\",\n\t\t\t\"text\": text,\n\t\t} as any as TdObject)) as any as TLTextEntities\n\t}\n\n\tpublic async parseTextEntities(text: string, parse_mode: TLTextParseMode): Promise<TLFormattedText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"parseTextEntities\",\n\t\t\t\"text\": text,\n\t\t\t\"parse_mode\": parse_mode,\n\t\t} as any as TdObject)) as any as TLFormattedText\n\t}\n\n\tpublic async getFileMimeType(file_name: string): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getFileMimeType\",\n\t\t\t\"file_name\": file_name,\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async getFileExtension(mime_type: string): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getFileExtension\",\n\t\t\t\"mime_type\": mime_type,\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async cleanFileName(file_name: string): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"cleanFileName\",\n\t\t\t\"file_name\": file_name,\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async getLanguagePackString(language_pack_database_path: string, localization_target: string, language_pack_id: string, key: string): Promise<TLLanguagePackStringValue> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLanguagePackString\",\n\t\t\t\"language_pack_database_path\": language_pack_database_path,\n\t\t\t\"localization_target\": localization_target,\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t\t\"key\": key,\n\t\t} as any as TdObject)) as any as TLLanguagePackStringValue\n\t}\n\n\tpublic async getJsonValue(json: string): Promise<TLJsonValue> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getJsonValue\",\n\t\t\t\"json\": json,\n\t\t} as any as TdObject)) as any as TLJsonValue\n\t}\n\n\tpublic async getJsonString(json_value: TLJsonValue): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getJsonString\",\n\t\t\t\"json_value\": json_value,\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async setPollAnswer(chat_id: number, message_id: number, option_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setPollAnswer\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"option_ids\": option_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPollVoters(chat_id: number, message_id: number, option_id: number, offset: number, limit: number): Promise<TLUsers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPollVoters\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"option_id\": option_id,\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLUsers\n\t}\n\n\tpublic async stopPoll(chat_id: number, message_id: number, reply_markup: TLReplyMarkup): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"stopPoll\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"reply_markup\": reply_markup,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getLoginUrlInfo(chat_id: number, message_id: number, button_id: number): Promise<TLLoginUrlInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLoginUrlInfo\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"button_id\": button_id,\n\t\t} as any as TdObject)) as any as TLLoginUrlInfo\n\t}\n\n\tpublic async getLoginUrl(chat_id: number, message_id: number, button_id: number, allow_write_access: boolean): Promise<TLHttpUrl> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLoginUrl\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"button_id\": button_id,\n\t\t\t\"allow_write_access\": allow_write_access,\n\t\t} as any as TdObject)) as any as TLHttpUrl\n\t}\n\n\tpublic async getInlineQueryResults(bot_user_id: number, chat_id: number, user_location: TLLocation, query: string, offset: string): Promise<TLInlineQueryResults> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getInlineQueryResults\",\n\t\t\t\"bot_user_id\": bot_user_id,\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_location\": user_location,\n\t\t\t\"query\": query,\n\t\t\t\"offset\": offset,\n\t\t} as any as TdObject)) as any as TLInlineQueryResults\n\t}\n\n\tpublic async answerInlineQuery(inline_query_id: string, is_personal: boolean, results: ReadonlyArray<TLInputInlineQueryResult>, cache_time: number, next_offset: string, switch_pm_text: string, switch_pm_parameter: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"answerInlineQuery\",\n\t\t\t\"inline_query_id\": inline_query_id,\n\t\t\t\"is_personal\": is_personal,\n\t\t\t\"results\": results,\n\t\t\t\"cache_time\": cache_time,\n\t\t\t\"next_offset\": next_offset,\n\t\t\t\"switch_pm_text\": switch_pm_text,\n\t\t\t\"switch_pm_parameter\": switch_pm_parameter,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getCallbackQueryAnswer(chat_id: number, message_id: number, payload: TLCallbackQueryPayload): Promise<TLCallbackQueryAnswer> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getCallbackQueryAnswer\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"payload\": payload,\n\t\t} as any as TdObject)) as any as TLCallbackQueryAnswer\n\t}\n\n\tpublic async answerCallbackQuery(callback_query_id: string, text: string, show_alert: boolean, url: string, cache_time: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"answerCallbackQuery\",\n\t\t\t\"callback_query_id\": callback_query_id,\n\t\t\t\"text\": text,\n\t\t\t\"show_alert\": show_alert,\n\t\t\t\"url\": url,\n\t\t\t\"cache_time\": cache_time,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async answerShippingQuery(shipping_query_id: string, shipping_options: ReadonlyArray<TLShippingOption>, error_message: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"answerShippingQuery\",\n\t\t\t\"shipping_query_id\": shipping_query_id,\n\t\t\t\"shipping_options\": shipping_options,\n\t\t\t\"error_message\": error_message,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async answerPreCheckoutQuery(pre_checkout_query_id: string, error_message: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"answerPreCheckoutQuery\",\n\t\t\t\"pre_checkout_query_id\": pre_checkout_query_id,\n\t\t\t\"error_message\": error_message,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setGameScore(chat_id: number, message_id: number, edit_message: boolean, user_id: number, score: number, force: boolean): Promise<TLMessage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setGameScore\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"edit_message\": edit_message,\n\t\t\t\"user_id\": user_id,\n\t\t\t\"score\": score,\n\t\t\t\"force\": force,\n\t\t} as any as TdObject)) as any as TLMessage\n\t}\n\n\tpublic async setInlineGameScore(inline_message_id: string, edit_message: boolean, user_id: number, score: number, force: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setInlineGameScore\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"edit_message\": edit_message,\n\t\t\t\"user_id\": user_id,\n\t\t\t\"score\": score,\n\t\t\t\"force\": force,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getGameHighScores(chat_id: number, message_id: number, user_id: number): Promise<TLGameHighScores> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getGameHighScores\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLGameHighScores\n\t}\n\n\tpublic async getInlineGameHighScores(inline_message_id: string, user_id: number): Promise<TLGameHighScores> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getInlineGameHighScores\",\n\t\t\t\"inline_message_id\": inline_message_id,\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLGameHighScores\n\t}\n\n\tpublic async deleteChatReplyMarkup(chat_id: number, message_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteChatReplyMarkup\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sendChatAction(chat_id: number, action: TLChatAction): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendChatAction\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"action\": action,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async openChat(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"openChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async closeChat(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"closeChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async viewMessages(chat_id: number, message_ids: ReadonlyArray<number>, force_read: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"viewMessages\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_ids\": message_ids,\n\t\t\t\"force_read\": force_read,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async openMessageContent(chat_id: number, message_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"openMessageContent\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async readAllChatMentions(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"readAllChatMentions\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async createPrivateChat(user_id: number, force: boolean): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createPrivateChat\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"force\": force,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createBasicGroupChat(basic_group_id: number, force: boolean): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createBasicGroupChat\",\n\t\t\t\"basic_group_id\": basic_group_id,\n\t\t\t\"force\": force,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createSupergroupChat(supergroup_id: number, force: boolean): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createSupergroupChat\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"force\": force,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createSecretChat(secret_chat_id: number): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createSecretChat\",\n\t\t\t\"secret_chat_id\": secret_chat_id,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createNewBasicGroupChat(user_ids: ReadonlyArray<number>, title: string): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createNewBasicGroupChat\",\n\t\t\t\"user_ids\": user_ids,\n\t\t\t\"title\": title,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createNewSupergroupChat(title: string, is_channel: boolean, description: string, location: TLChatLocation): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createNewSupergroupChat\",\n\t\t\t\"title\": title,\n\t\t\t\"is_channel\": is_channel,\n\t\t\t\"description\": description,\n\t\t\t\"location\": location,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createNewSecretChat(user_id: number): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createNewSecretChat\",\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async upgradeBasicGroupChatToSupergroupChat(chat_id: number): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"upgradeBasicGroupChatToSupergroupChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async setChatChatList(chat_id: number, chat_list: TLChatList): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatChatList\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"chat_list\": chat_list,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatTitle(chat_id: number, title: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatTitle\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"title\": title,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatPhoto(chat_id: number, photo: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatPhoto\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"photo\": photo,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatPermissions(chat_id: number, permissions: TLChatPermissions): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatPermissions\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"permissions\": permissions,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatDraftMessage(chat_id: number, draft_message: TLDraftMessage): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatDraftMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"draft_message\": draft_message,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatNotificationSettings(chat_id: number, notification_settings: TLChatNotificationSettings): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatNotificationSettings\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"notification_settings\": notification_settings,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async toggleChatIsPinned(chat_id: number, is_pinned: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"toggleChatIsPinned\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"is_pinned\": is_pinned,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async toggleChatIsMarkedAsUnread(chat_id: number, is_marked_as_unread: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"toggleChatIsMarkedAsUnread\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"is_marked_as_unread\": is_marked_as_unread,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async toggleChatDefaultDisableNotification(chat_id: number, default_disable_notification: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"toggleChatDefaultDisableNotification\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"default_disable_notification\": default_disable_notification,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatClientData(chat_id: number, client_data: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatClientData\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"client_data\": client_data,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatDescription(chat_id: number, description: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatDescription\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"description\": description,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatDiscussionGroup(chat_id: number, discussion_chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatDiscussionGroup\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"discussion_chat_id\": discussion_chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatLocation(chat_id: number, location: TLChatLocation): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatLocation\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"location\": location,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatSlowModeDelay(chat_id: number, slow_mode_delay: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatSlowModeDelay\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"slow_mode_delay\": slow_mode_delay,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async pinChatMessage(chat_id: number, message_id: number, disable_notification: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"pinChatMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"disable_notification\": disable_notification,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async unpinChatMessage(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"unpinChatMessage\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async joinChat(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"joinChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async leaveChat(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"leaveChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async addChatMember(chat_id: number, user_id: number, forward_limit: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addChatMember\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_id\": user_id,\n\t\t\t\"forward_limit\": forward_limit,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async addChatMembers(chat_id: number, user_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addChatMembers\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_ids\": user_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setChatMemberStatus(chat_id: number, user_id: number, status: TLChatMemberStatus): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setChatMemberStatus\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_id\": user_id,\n\t\t\t\"status\": status,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async canTransferOwnership(): Promise<TLCanTransferOwnershipResult> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"canTransferOwnership\",\n\t\t} as any as TdObject)) as any as TLCanTransferOwnershipResult\n\t}\n\n\tpublic async transferChatOwnership(chat_id: number, user_id: number, password: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"transferChatOwnership\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_id\": user_id,\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getChatMember(chat_id: number, user_id: number): Promise<TLChatMember> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatMember\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLChatMember\n\t}\n\n\tpublic async searchChatMembers(chat_id: number, query: string, limit: number, filter: TLChatMembersFilter): Promise<TLChatMembers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchChatMembers\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"query\": query,\n\t\t\t\"limit\": limit,\n\t\t\t\"filter\": filter,\n\t\t} as any as TdObject)) as any as TLChatMembers\n\t}\n\n\tpublic async getChatAdministrators(chat_id: number): Promise<TLChatAdministrators> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatAdministrators\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLChatAdministrators\n\t}\n\n\tpublic async clearAllDraftMessages(exclude_secret_chats: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"clearAllDraftMessages\",\n\t\t\t\"exclude_secret_chats\": exclude_secret_chats,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getChatNotificationSettingsExceptions(scope: TLNotificationSettingsScope, compare_sound: boolean): Promise<TLChats> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatNotificationSettingsExceptions\",\n\t\t\t\"scope\": scope,\n\t\t\t\"compare_sound\": compare_sound,\n\t\t} as any as TdObject)) as any as TLChats\n\t}\n\n\tpublic async getScopeNotificationSettings(scope: TLNotificationSettingsScope): Promise<TLScopeNotificationSettings> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getScopeNotificationSettings\",\n\t\t\t\"scope\": scope,\n\t\t} as any as TdObject)) as any as TLScopeNotificationSettings\n\t}\n\n\tpublic async setScopeNotificationSettings(scope: TLNotificationSettingsScope, notification_settings: TLScopeNotificationSettings): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setScopeNotificationSettings\",\n\t\t\t\"scope\": scope,\n\t\t\t\"notification_settings\": notification_settings,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async resetAllNotificationSettings(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resetAllNotificationSettings\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setPinnedChats(chat_list: TLChatList, chat_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setPinnedChats\",\n\t\t\t\"chat_list\": chat_list,\n\t\t\t\"chat_ids\": chat_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async downloadFile(file_id: number, priority: number, offset: number, limit: number, synchronous: boolean): Promise<TLFile> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"downloadFile\",\n\t\t\t\"file_id\": file_id,\n\t\t\t\"priority\": priority,\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t\t\"synchronous\": synchronous,\n\t\t} as any as TdObject)) as any as TLFile\n\t}\n\n\tpublic async getFileDownloadedPrefixSize(file_id: number, offset: number): Promise<TLCount> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getFileDownloadedPrefixSize\",\n\t\t\t\"file_id\": file_id,\n\t\t\t\"offset\": offset,\n\t\t} as any as TdObject)) as any as TLCount\n\t}\n\n\tpublic async cancelDownloadFile(file_id: number, only_if_pending: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"cancelDownloadFile\",\n\t\t\t\"file_id\": file_id,\n\t\t\t\"only_if_pending\": only_if_pending,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async uploadFile(file: TLInputFile, file_type: TLFileType, priority: number): Promise<TLFile> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"uploadFile\",\n\t\t\t\"file\": file,\n\t\t\t\"file_type\": file_type,\n\t\t\t\"priority\": priority,\n\t\t} as any as TdObject)) as any as TLFile\n\t}\n\n\tpublic async cancelUploadFile(file_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"cancelUploadFile\",\n\t\t\t\"file_id\": file_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async writeGeneratedFilePart(generation_id: string, offset: number, data: Uint8Array): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"writeGeneratedFilePart\",\n\t\t\t\"generation_id\": generation_id,\n\t\t\t\"offset\": offset,\n\t\t\t\"data\": data,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setFileGenerationProgress(generation_id: string, expected_size: number, local_prefix_size: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setFileGenerationProgress\",\n\t\t\t\"generation_id\": generation_id,\n\t\t\t\"expected_size\": expected_size,\n\t\t\t\"local_prefix_size\": local_prefix_size,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async finishFileGeneration(generation_id: string, error: TLError): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"finishFileGeneration\",\n\t\t\t\"generation_id\": generation_id,\n\t\t\t\"error\": error,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async readFilePart(file_id: number, offset: number, count: number): Promise<TLFilePart> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"readFilePart\",\n\t\t\t\"file_id\": file_id,\n\t\t\t\"offset\": offset,\n\t\t\t\"count\": count,\n\t\t} as any as TdObject)) as any as TLFilePart\n\t}\n\n\tpublic async deleteFile(file_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteFile\",\n\t\t\t\"file_id\": file_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async generateChatInviteLink(chat_id: number): Promise<TLChatInviteLink> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"generateChatInviteLink\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLChatInviteLink\n\t}\n\n\tpublic async checkChatInviteLink(invite_link: string): Promise<TLChatInviteLinkInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkChatInviteLink\",\n\t\t\t\"invite_link\": invite_link,\n\t\t} as any as TdObject)) as any as TLChatInviteLinkInfo\n\t}\n\n\tpublic async joinChatByInviteLink(invite_link: string): Promise<TLChat> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"joinChatByInviteLink\",\n\t\t\t\"invite_link\": invite_link,\n\t\t} as any as TdObject)) as any as TLChat\n\t}\n\n\tpublic async createCall(user_id: number, protocol: TLCallProtocol): Promise<TLCallId> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createCall\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"protocol\": protocol,\n\t\t} as any as TdObject)) as any as TLCallId\n\t}\n\n\tpublic async acceptCall(call_id: number, protocol: TLCallProtocol): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"acceptCall\",\n\t\t\t\"call_id\": call_id,\n\t\t\t\"protocol\": protocol,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async discardCall(call_id: number, is_disconnected: boolean, duration: number, connection_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"discardCall\",\n\t\t\t\"call_id\": call_id,\n\t\t\t\"is_disconnected\": is_disconnected,\n\t\t\t\"duration\": duration,\n\t\t\t\"connection_id\": connection_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sendCallRating(call_id: number, rating: number, comment: string, problems: ReadonlyArray<TLCallProblem>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendCallRating\",\n\t\t\t\"call_id\": call_id,\n\t\t\t\"rating\": rating,\n\t\t\t\"comment\": comment,\n\t\t\t\"problems\": problems,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sendCallDebugInformation(call_id: number, debug_information: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendCallDebugInformation\",\n\t\t\t\"call_id\": call_id,\n\t\t\t\"debug_information\": debug_information,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async blockUser(user_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"blockUser\",\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async unblockUser(user_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"unblockUser\",\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getBlockedUsers(offset: number, limit: number): Promise<TLUsers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getBlockedUsers\",\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLUsers\n\t}\n\n\tpublic async addContact(contact: TLContact, share_phone_number: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addContact\",\n\t\t\t\"contact\": contact,\n\t\t\t\"share_phone_number\": share_phone_number,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async importContacts(contacts: ReadonlyArray<TLContact>): Promise<TLImportedContacts> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"importContacts\",\n\t\t\t\"contacts\": contacts,\n\t\t} as any as TdObject)) as any as TLImportedContacts\n\t}\n\n\tpublic async getContacts(): Promise<TLUsers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getContacts\",\n\t\t} as any as TdObject)) as any as TLUsers\n\t}\n\n\tpublic async searchContacts(query: string, limit: number): Promise<TLUsers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchContacts\",\n\t\t\t\"query\": query,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLUsers\n\t}\n\n\tpublic async removeContacts(user_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeContacts\",\n\t\t\t\"user_ids\": user_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getImportedContactCount(): Promise<TLCount> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getImportedContactCount\",\n\t\t} as any as TdObject)) as any as TLCount\n\t}\n\n\tpublic async changeImportedContacts(contacts: ReadonlyArray<TLContact>): Promise<TLImportedContacts> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"changeImportedContacts\",\n\t\t\t\"contacts\": contacts,\n\t\t} as any as TdObject)) as any as TLImportedContacts\n\t}\n\n\tpublic async clearImportedContacts(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"clearImportedContacts\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sharePhoneNumber(user_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sharePhoneNumber\",\n\t\t\t\"user_id\": user_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getUserProfilePhotos(user_id: number, offset: number, limit: number): Promise<TLUserProfilePhotos> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getUserProfilePhotos\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLUserProfilePhotos\n\t}\n\n\tpublic async getStickers(emoji: string, limit: number): Promise<TLStickers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getStickers\",\n\t\t\t\"emoji\": emoji,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLStickers\n\t}\n\n\tpublic async searchStickers(emoji: string, limit: number): Promise<TLStickers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchStickers\",\n\t\t\t\"emoji\": emoji,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLStickers\n\t}\n\n\tpublic async getInstalledStickerSets(is_masks: boolean): Promise<TLStickerSets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getInstalledStickerSets\",\n\t\t\t\"is_masks\": is_masks,\n\t\t} as any as TdObject)) as any as TLStickerSets\n\t}\n\n\tpublic async getArchivedStickerSets(is_masks: boolean, offset_sticker_set_id: string, limit: number): Promise<TLStickerSets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getArchivedStickerSets\",\n\t\t\t\"is_masks\": is_masks,\n\t\t\t\"offset_sticker_set_id\": offset_sticker_set_id,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLStickerSets\n\t}\n\n\tpublic async getTrendingStickerSets(): Promise<TLStickerSets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getTrendingStickerSets\",\n\t\t} as any as TdObject)) as any as TLStickerSets\n\t}\n\n\tpublic async getAttachedStickerSets(file_id: number): Promise<TLStickerSets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getAttachedStickerSets\",\n\t\t\t\"file_id\": file_id,\n\t\t} as any as TdObject)) as any as TLStickerSets\n\t}\n\n\tpublic async getStickerSet(set_id: string): Promise<TLStickerSet> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getStickerSet\",\n\t\t\t\"set_id\": set_id,\n\t\t} as any as TdObject)) as any as TLStickerSet\n\t}\n\n\tpublic async searchStickerSet(name: string): Promise<TLStickerSet> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchStickerSet\",\n\t\t\t\"name\": name,\n\t\t} as any as TdObject)) as any as TLStickerSet\n\t}\n\n\tpublic async searchInstalledStickerSets(is_masks: boolean, query: string, limit: number): Promise<TLStickerSets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchInstalledStickerSets\",\n\t\t\t\"is_masks\": is_masks,\n\t\t\t\"query\": query,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLStickerSets\n\t}\n\n\tpublic async searchStickerSets(query: string): Promise<TLStickerSets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchStickerSets\",\n\t\t\t\"query\": query,\n\t\t} as any as TdObject)) as any as TLStickerSets\n\t}\n\n\tpublic async changeStickerSet(set_id: string, is_installed: boolean, is_archived: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"changeStickerSet\",\n\t\t\t\"set_id\": set_id,\n\t\t\t\"is_installed\": is_installed,\n\t\t\t\"is_archived\": is_archived,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async viewTrendingStickerSets(sticker_set_ids: ReadonlyArray<string>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"viewTrendingStickerSets\",\n\t\t\t\"sticker_set_ids\": sticker_set_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async reorderInstalledStickerSets(is_masks: boolean, sticker_set_ids: ReadonlyArray<string>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"reorderInstalledStickerSets\",\n\t\t\t\"is_masks\": is_masks,\n\t\t\t\"sticker_set_ids\": sticker_set_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getRecentStickers(is_attached: boolean): Promise<TLStickers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getRecentStickers\",\n\t\t\t\"is_attached\": is_attached,\n\t\t} as any as TdObject)) as any as TLStickers\n\t}\n\n\tpublic async addRecentSticker(is_attached: boolean, sticker: TLInputFile): Promise<TLStickers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addRecentSticker\",\n\t\t\t\"is_attached\": is_attached,\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLStickers\n\t}\n\n\tpublic async removeRecentSticker(is_attached: boolean, sticker: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeRecentSticker\",\n\t\t\t\"is_attached\": is_attached,\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async clearRecentStickers(is_attached: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"clearRecentStickers\",\n\t\t\t\"is_attached\": is_attached,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getFavoriteStickers(): Promise<TLStickers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getFavoriteStickers\",\n\t\t} as any as TdObject)) as any as TLStickers\n\t}\n\n\tpublic async addFavoriteSticker(sticker: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addFavoriteSticker\",\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeFavoriteSticker(sticker: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeFavoriteSticker\",\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getStickerEmojis(sticker: TLInputFile): Promise<TLEmojis> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getStickerEmojis\",\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLEmojis\n\t}\n\n\tpublic async searchEmojis(text: string, exact_match: boolean, input_language_code: string): Promise<TLEmojis> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchEmojis\",\n\t\t\t\"text\": text,\n\t\t\t\"exact_match\": exact_match,\n\t\t\t\"input_language_code\": input_language_code,\n\t\t} as any as TdObject)) as any as TLEmojis\n\t}\n\n\tpublic async getEmojiSuggestionsUrl(language_code: string): Promise<TLHttpUrl> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getEmojiSuggestionsUrl\",\n\t\t\t\"language_code\": language_code,\n\t\t} as any as TdObject)) as any as TLHttpUrl\n\t}\n\n\tpublic async getSavedAnimations(): Promise<TLAnimations> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSavedAnimations\",\n\t\t} as any as TdObject)) as any as TLAnimations\n\t}\n\n\tpublic async addSavedAnimation(animation: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addSavedAnimation\",\n\t\t\t\"animation\": animation,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeSavedAnimation(animation: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeSavedAnimation\",\n\t\t\t\"animation\": animation,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getRecentInlineBots(): Promise<TLUsers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getRecentInlineBots\",\n\t\t} as any as TdObject)) as any as TLUsers\n\t}\n\n\tpublic async searchHashtags(prefix: string, limit: number): Promise<TLHashtags> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchHashtags\",\n\t\t\t\"prefix\": prefix,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLHashtags\n\t}\n\n\tpublic async removeRecentHashtag(hashtag: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeRecentHashtag\",\n\t\t\t\"hashtag\": hashtag,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getWebPagePreview(text: TLFormattedText): Promise<TLWebPage> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getWebPagePreview\",\n\t\t\t\"text\": text,\n\t\t} as any as TdObject)) as any as TLWebPage\n\t}\n\n\tpublic async getWebPageInstantView(url: string, force_full: boolean): Promise<TLWebPageInstantView> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getWebPageInstantView\",\n\t\t\t\"url\": url,\n\t\t\t\"force_full\": force_full,\n\t\t} as any as TdObject)) as any as TLWebPageInstantView\n\t}\n\n\tpublic async setProfilePhoto(photo: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setProfilePhoto\",\n\t\t\t\"photo\": photo,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async deleteProfilePhoto(profile_photo_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteProfilePhoto\",\n\t\t\t\"profile_photo_id\": profile_photo_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setName(first_name: string, last_name: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setName\",\n\t\t\t\"first_name\": first_name,\n\t\t\t\"last_name\": last_name,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setBio(bio: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setBio\",\n\t\t\t\"bio\": bio,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setUsername(username: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setUsername\",\n\t\t\t\"username\": username,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async changePhoneNumber(phone_number: string, settings: TLPhoneNumberAuthenticationSettings): Promise<TLAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"changePhoneNumber\",\n\t\t\t\"phone_number\": phone_number,\n\t\t\t\"settings\": settings,\n\t\t} as any as TdObject)) as any as TLAuthenticationCodeInfo\n\t}\n\n\tpublic async resendChangePhoneNumberCode(): Promise<TLAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendChangePhoneNumberCode\",\n\t\t} as any as TdObject)) as any as TLAuthenticationCodeInfo\n\t}\n\n\tpublic async checkChangePhoneNumberCode(code: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkChangePhoneNumberCode\",\n\t\t\t\"code\": code,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getActiveSessions(): Promise<TLSessions> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getActiveSessions\",\n\t\t} as any as TdObject)) as any as TLSessions\n\t}\n\n\tpublic async terminateSession(session_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"terminateSession\",\n\t\t\t\"session_id\": session_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async terminateAllOtherSessions(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"terminateAllOtherSessions\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getConnectedWebsites(): Promise<TLConnectedWebsites> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getConnectedWebsites\",\n\t\t} as any as TdObject)) as any as TLConnectedWebsites\n\t}\n\n\tpublic async disconnectWebsite(website_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"disconnectWebsite\",\n\t\t\t\"website_id\": website_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async disconnectAllWebsites(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"disconnectAllWebsites\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setSupergroupUsername(supergroup_id: number, username: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setSupergroupUsername\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"username\": username,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setSupergroupStickerSet(supergroup_id: number, sticker_set_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setSupergroupStickerSet\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"sticker_set_id\": sticker_set_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async toggleSupergroupSignMessages(supergroup_id: number, sign_messages: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"toggleSupergroupSignMessages\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"sign_messages\": sign_messages,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async toggleSupergroupIsAllHistoryAvailable(supergroup_id: number, is_all_history_available: boolean): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"toggleSupergroupIsAllHistoryAvailable\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"is_all_history_available\": is_all_history_available,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async reportSupergroupSpam(supergroup_id: number, user_id: number, message_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"reportSupergroupSpam\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"user_id\": user_id,\n\t\t\t\"message_ids\": message_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getSupergroupMembers(supergroup_id: number, filter: TLSupergroupMembersFilter, offset: number, limit: number): Promise<TLChatMembers> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSupergroupMembers\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t\t\"filter\": filter,\n\t\t\t\"offset\": offset,\n\t\t\t\"limit\": limit,\n\t\t} as any as TdObject)) as any as TLChatMembers\n\t}\n\n\tpublic async deleteSupergroup(supergroup_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteSupergroup\",\n\t\t\t\"supergroup_id\": supergroup_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async closeSecretChat(secret_chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"closeSecretChat\",\n\t\t\t\"secret_chat_id\": secret_chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getChatEventLog(chat_id: number, query: string, from_event_id: string, limit: number, filters: TLChatEventLogFilters, user_ids: ReadonlyArray<number>): Promise<TLChatEvents> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatEventLog\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"query\": query,\n\t\t\t\"from_event_id\": from_event_id,\n\t\t\t\"limit\": limit,\n\t\t\t\"filters\": filters,\n\t\t\t\"user_ids\": user_ids,\n\t\t} as any as TdObject)) as any as TLChatEvents\n\t}\n\n\tpublic async getPaymentForm(chat_id: number, message_id: number): Promise<TLPaymentForm> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPaymentForm\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLPaymentForm\n\t}\n\n\tpublic async validateOrderInfo(chat_id: number, message_id: number, order_info: TLOrderInfo, allow_save: boolean): Promise<TLValidatedOrderInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"validateOrderInfo\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"order_info\": order_info,\n\t\t\t\"allow_save\": allow_save,\n\t\t} as any as TdObject)) as any as TLValidatedOrderInfo\n\t}\n\n\tpublic async sendPaymentForm(chat_id: number, message_id: number, order_info_id: string, shipping_option_id: string, credentials: TLInputCredentials): Promise<TLPaymentResult> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendPaymentForm\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t\t\"order_info_id\": order_info_id,\n\t\t\t\"shipping_option_id\": shipping_option_id,\n\t\t\t\"credentials\": credentials,\n\t\t} as any as TdObject)) as any as TLPaymentResult\n\t}\n\n\tpublic async getPaymentReceipt(chat_id: number, message_id: number): Promise<TLPaymentReceipt> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPaymentReceipt\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"message_id\": message_id,\n\t\t} as any as TdObject)) as any as TLPaymentReceipt\n\t}\n\n\tpublic async getSavedOrderInfo(): Promise<TLOrderInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSavedOrderInfo\",\n\t\t} as any as TdObject)) as any as TLOrderInfo\n\t}\n\n\tpublic async deleteSavedOrderInfo(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteSavedOrderInfo\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async deleteSavedCredentials(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteSavedCredentials\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getSupportUser(): Promise<TLUser> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getSupportUser\",\n\t\t} as any as TdObject)) as any as TLUser\n\t}\n\n\tpublic async getBackgrounds(for_dark_theme: boolean): Promise<TLBackgrounds> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getBackgrounds\",\n\t\t\t\"for_dark_theme\": for_dark_theme,\n\t\t} as any as TdObject)) as any as TLBackgrounds\n\t}\n\n\tpublic async getBackgroundUrl(name: string, type: TLBackgroundType): Promise<TLHttpUrl> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getBackgroundUrl\",\n\t\t\t\"name\": name,\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLHttpUrl\n\t}\n\n\tpublic async searchBackground(name: string): Promise<TLBackground> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"searchBackground\",\n\t\t\t\"name\": name,\n\t\t} as any as TdObject)) as any as TLBackground\n\t}\n\n\tpublic async setBackground(background: TLInputBackground, type: TLBackgroundType, for_dark_theme: boolean): Promise<TLBackground> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setBackground\",\n\t\t\t\"background\": background,\n\t\t\t\"type\": type,\n\t\t\t\"for_dark_theme\": for_dark_theme,\n\t\t} as any as TdObject)) as any as TLBackground\n\t}\n\n\tpublic async removeBackground(background_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeBackground\",\n\t\t\t\"background_id\": background_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async resetBackgrounds(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resetBackgrounds\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getLocalizationTargetInfo(only_local: boolean): Promise<TLLocalizationTargetInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLocalizationTargetInfo\",\n\t\t\t\"only_local\": only_local,\n\t\t} as any as TdObject)) as any as TLLocalizationTargetInfo\n\t}\n\n\tpublic async getLanguagePackInfo(language_pack_id: string): Promise<TLLanguagePackInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLanguagePackInfo\",\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t} as any as TdObject)) as any as TLLanguagePackInfo\n\t}\n\n\tpublic async getLanguagePackStrings(language_pack_id: string, keys: ReadonlyArray<string>): Promise<TLLanguagePackStrings> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLanguagePackStrings\",\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t\t\"keys\": keys,\n\t\t} as any as TdObject)) as any as TLLanguagePackStrings\n\t}\n\n\tpublic async synchronizeLanguagePack(language_pack_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"synchronizeLanguagePack\",\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async addCustomServerLanguagePack(language_pack_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addCustomServerLanguagePack\",\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setCustomLanguagePack(info: TLLanguagePackInfo, strings: ReadonlyArray<TLLanguagePackString>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setCustomLanguagePack\",\n\t\t\t\"info\": info,\n\t\t\t\"strings\": strings,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async editCustomLanguagePackInfo(info: TLLanguagePackInfo): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editCustomLanguagePackInfo\",\n\t\t\t\"info\": info,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setCustomLanguagePackString(language_pack_id: string, new_string: TLLanguagePackString): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setCustomLanguagePackString\",\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t\t\"new_string\": new_string,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async deleteLanguagePack(language_pack_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteLanguagePack\",\n\t\t\t\"language_pack_id\": language_pack_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async registerDevice(device_token: TLDeviceToken, other_user_ids: ReadonlyArray<number>): Promise<TLPushReceiverId> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"registerDevice\",\n\t\t\t\"device_token\": device_token,\n\t\t\t\"other_user_ids\": other_user_ids,\n\t\t} as any as TdObject)) as any as TLPushReceiverId\n\t}\n\n\tpublic async processPushNotification(payload: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"processPushNotification\",\n\t\t\t\"payload\": payload,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPushReceiverId(payload: string): Promise<TLPushReceiverId> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPushReceiverId\",\n\t\t\t\"payload\": payload,\n\t\t} as any as TdObject)) as any as TLPushReceiverId\n\t}\n\n\tpublic async getRecentlyVisitedTMeUrls(referrer: string): Promise<TLTMeUrls> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getRecentlyVisitedTMeUrls\",\n\t\t\t\"referrer\": referrer,\n\t\t} as any as TdObject)) as any as TLTMeUrls\n\t}\n\n\tpublic async setUserPrivacySettingRules(setting: TLUserPrivacySetting, rules: TLUserPrivacySettingRules): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setUserPrivacySettingRules\",\n\t\t\t\"setting\": setting,\n\t\t\t\"rules\": rules,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getUserPrivacySettingRules(setting: TLUserPrivacySetting): Promise<TLUserPrivacySettingRules> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getUserPrivacySettingRules\",\n\t\t\t\"setting\": setting,\n\t\t} as any as TdObject)) as any as TLUserPrivacySettingRules\n\t}\n\n\tpublic async getOption(name: string): Promise<TLOptionValue> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getOption\",\n\t\t\t\"name\": name,\n\t\t} as any as TdObject)) as any as TLOptionValue\n\t}\n\n\tpublic async setOption(name: string, value: TLOptionValue): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setOption\",\n\t\t\t\"name\": name,\n\t\t\t\"value\": value,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setAccountTtl(ttl: TLAccountTtl): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setAccountTtl\",\n\t\t\t\"ttl\": ttl,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getAccountTtl(): Promise<TLAccountTtl> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getAccountTtl\",\n\t\t} as any as TdObject)) as any as TLAccountTtl\n\t}\n\n\tpublic async deleteAccount(reason: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deleteAccount\",\n\t\t\t\"reason\": reason,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeChatActionBar(chat_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeChatActionBar\",\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async reportChat(chat_id: number, reason: TLChatReportReason, message_ids: ReadonlyArray<number>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"reportChat\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"reason\": reason,\n\t\t\t\"message_ids\": message_ids,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getChatStatisticsUrl(chat_id: number, parameters: string, is_dark: boolean): Promise<TLHttpUrl> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getChatStatisticsUrl\",\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"parameters\": parameters,\n\t\t\t\"is_dark\": is_dark,\n\t\t} as any as TdObject)) as any as TLHttpUrl\n\t}\n\n\tpublic async getStorageStatistics(chat_limit: number): Promise<TLStorageStatistics> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getStorageStatistics\",\n\t\t\t\"chat_limit\": chat_limit,\n\t\t} as any as TdObject)) as any as TLStorageStatistics\n\t}\n\n\tpublic async getStorageStatisticsFast(): Promise<TLStorageStatisticsFast> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getStorageStatisticsFast\",\n\t\t} as any as TdObject)) as any as TLStorageStatisticsFast\n\t}\n\n\tpublic async getDatabaseStatistics(): Promise<TLDatabaseStatistics> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getDatabaseStatistics\",\n\t\t} as any as TdObject)) as any as TLDatabaseStatistics\n\t}\n\n\tpublic async optimizeStorage(size: number, ttl: number, count: number, immunity_delay: number, file_types: ReadonlyArray<TLFileType>, chat_ids: ReadonlyArray<number>, exclude_chat_ids: ReadonlyArray<number>, chat_limit: number): Promise<TLStorageStatistics> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"optimizeStorage\",\n\t\t\t\"size\": size,\n\t\t\t\"ttl\": ttl,\n\t\t\t\"count\": count,\n\t\t\t\"immunity_delay\": immunity_delay,\n\t\t\t\"file_types\": file_types,\n\t\t\t\"chat_ids\": chat_ids,\n\t\t\t\"exclude_chat_ids\": exclude_chat_ids,\n\t\t\t\"chat_limit\": chat_limit,\n\t\t} as any as TdObject)) as any as TLStorageStatistics\n\t}\n\n\tpublic async setNetworkType(type: TLNetworkType): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setNetworkType\",\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getNetworkStatistics(only_current: boolean): Promise<TLNetworkStatistics> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getNetworkStatistics\",\n\t\t\t\"only_current\": only_current,\n\t\t} as any as TdObject)) as any as TLNetworkStatistics\n\t}\n\n\tpublic async addNetworkStatistics(entry: TLNetworkStatisticsEntry): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addNetworkStatistics\",\n\t\t\t\"entry\": entry,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async resetNetworkStatistics(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resetNetworkStatistics\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getAutoDownloadSettingsPresets(): Promise<TLAutoDownloadSettingsPresets> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getAutoDownloadSettingsPresets\",\n\t\t} as any as TdObject)) as any as TLAutoDownloadSettingsPresets\n\t}\n\n\tpublic async setAutoDownloadSettings(settings: TLAutoDownloadSettings, type: TLNetworkType): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setAutoDownloadSettings\",\n\t\t\t\"settings\": settings,\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPassportElement(type: TLPassportElementType, password: string): Promise<TLPassportElement> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPassportElement\",\n\t\t\t\"type\": type,\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLPassportElement\n\t}\n\n\tpublic async getAllPassportElements(password: string): Promise<TLPassportElements> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getAllPassportElements\",\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLPassportElements\n\t}\n\n\tpublic async setPassportElement(element: TLInputPassportElement, password: string): Promise<TLPassportElement> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setPassportElement\",\n\t\t\t\"element\": element,\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLPassportElement\n\t}\n\n\tpublic async deletePassportElement(type: TLPassportElementType): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"deletePassportElement\",\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setPassportElementErrors(user_id: number, errors: ReadonlyArray<TLInputPassportElementError>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setPassportElementErrors\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"errors\": errors,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPreferredCountryLanguage(country_code: string): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPreferredCountryLanguage\",\n\t\t\t\"country_code\": country_code,\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async sendPhoneNumberVerificationCode(phone_number: string, settings: TLPhoneNumberAuthenticationSettings): Promise<TLAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendPhoneNumberVerificationCode\",\n\t\t\t\"phone_number\": phone_number,\n\t\t\t\"settings\": settings,\n\t\t} as any as TdObject)) as any as TLAuthenticationCodeInfo\n\t}\n\n\tpublic async resendPhoneNumberVerificationCode(): Promise<TLAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendPhoneNumberVerificationCode\",\n\t\t} as any as TdObject)) as any as TLAuthenticationCodeInfo\n\t}\n\n\tpublic async checkPhoneNumberVerificationCode(code: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkPhoneNumberVerificationCode\",\n\t\t\t\"code\": code,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sendEmailAddressVerificationCode(email_address: string): Promise<TLEmailAddressAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendEmailAddressVerificationCode\",\n\t\t\t\"email_address\": email_address,\n\t\t} as any as TdObject)) as any as TLEmailAddressAuthenticationCodeInfo\n\t}\n\n\tpublic async resendEmailAddressVerificationCode(): Promise<TLEmailAddressAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendEmailAddressVerificationCode\",\n\t\t} as any as TdObject)) as any as TLEmailAddressAuthenticationCodeInfo\n\t}\n\n\tpublic async checkEmailAddressVerificationCode(code: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkEmailAddressVerificationCode\",\n\t\t\t\"code\": code,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getPassportAuthorizationForm(bot_user_id: number, scope: string, public_key: string, nonce: string): Promise<TLPassportAuthorizationForm> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPassportAuthorizationForm\",\n\t\t\t\"bot_user_id\": bot_user_id,\n\t\t\t\"scope\": scope,\n\t\t\t\"public_key\": public_key,\n\t\t\t\"nonce\": nonce,\n\t\t} as any as TdObject)) as any as TLPassportAuthorizationForm\n\t}\n\n\tpublic async getPassportAuthorizationFormAvailableElements(autorization_form_id: number, password: string): Promise<TLPassportElementsWithErrors> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getPassportAuthorizationFormAvailableElements\",\n\t\t\t\"autorization_form_id\": autorization_form_id,\n\t\t\t\"password\": password,\n\t\t} as any as TdObject)) as any as TLPassportElementsWithErrors\n\t}\n\n\tpublic async sendPassportAuthorizationForm(autorization_form_id: number, types: ReadonlyArray<TLPassportElementType>): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendPassportAuthorizationForm\",\n\t\t\t\"autorization_form_id\": autorization_form_id,\n\t\t\t\"types\": types,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sendPhoneNumberConfirmationCode(hash: string, phone_number: string, settings: TLPhoneNumberAuthenticationSettings): Promise<TLAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendPhoneNumberConfirmationCode\",\n\t\t\t\"hash\": hash,\n\t\t\t\"phone_number\": phone_number,\n\t\t\t\"settings\": settings,\n\t\t} as any as TdObject)) as any as TLAuthenticationCodeInfo\n\t}\n\n\tpublic async resendPhoneNumberConfirmationCode(): Promise<TLAuthenticationCodeInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"resendPhoneNumberConfirmationCode\",\n\t\t} as any as TdObject)) as any as TLAuthenticationCodeInfo\n\t}\n\n\tpublic async checkPhoneNumberConfirmationCode(code: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"checkPhoneNumberConfirmationCode\",\n\t\t\t\"code\": code,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setBotUpdatesStatus(pending_update_count: number, error_message: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setBotUpdatesStatus\",\n\t\t\t\"pending_update_count\": pending_update_count,\n\t\t\t\"error_message\": error_message,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async uploadStickerFile(user_id: number, png_sticker: TLInputFile): Promise<TLFile> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"uploadStickerFile\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"png_sticker\": png_sticker,\n\t\t} as any as TdObject)) as any as TLFile\n\t}\n\n\tpublic async createNewStickerSet(user_id: number, title: string, name: string, is_masks: boolean, stickers: ReadonlyArray<TLInputSticker>): Promise<TLStickerSet> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"createNewStickerSet\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"title\": title,\n\t\t\t\"name\": name,\n\t\t\t\"is_masks\": is_masks,\n\t\t\t\"stickers\": stickers,\n\t\t} as any as TdObject)) as any as TLStickerSet\n\t}\n\n\tpublic async addStickerToSet(user_id: number, name: string, sticker: TLInputSticker): Promise<TLStickerSet> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addStickerToSet\",\n\t\t\t\"user_id\": user_id,\n\t\t\t\"name\": name,\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLStickerSet\n\t}\n\n\tpublic async setStickerPositionInSet(sticker: TLInputFile, position: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setStickerPositionInSet\",\n\t\t\t\"sticker\": sticker,\n\t\t\t\"position\": position,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeStickerFromSet(sticker: TLInputFile): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeStickerFromSet\",\n\t\t\t\"sticker\": sticker,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getMapThumbnailFile(location: TLLocation, zoom: number, width: number, height: number, scale: number, chat_id: number): Promise<TLFile> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getMapThumbnailFile\",\n\t\t\t\"location\": location,\n\t\t\t\"zoom\": zoom,\n\t\t\t\"width\": width,\n\t\t\t\"height\": height,\n\t\t\t\"scale\": scale,\n\t\t\t\"chat_id\": chat_id,\n\t\t} as any as TdObject)) as any as TLFile\n\t}\n\n\tpublic async acceptTermsOfService(terms_of_service_id: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"acceptTermsOfService\",\n\t\t\t\"terms_of_service_id\": terms_of_service_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async sendCustomRequest(method: string, parameters: string): Promise<TLCustomRequestResult> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"sendCustomRequest\",\n\t\t\t\"method\": method,\n\t\t\t\"parameters\": parameters,\n\t\t} as any as TdObject)) as any as TLCustomRequestResult\n\t}\n\n\tpublic async answerCustomQuery(custom_query_id: string, data: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"answerCustomQuery\",\n\t\t\t\"custom_query_id\": custom_query_id,\n\t\t\t\"data\": data,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async setAlarm(seconds: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setAlarm\",\n\t\t\t\"seconds\": seconds,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getCountryCode(): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getCountryCode\",\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async getInviteText(): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getInviteText\",\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async getDeepLinkInfo(link: string): Promise<TLDeepLinkInfo> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getDeepLinkInfo\",\n\t\t\t\"link\": link,\n\t\t} as any as TdObject)) as any as TLDeepLinkInfo\n\t}\n\n\tpublic async getApplicationConfig(): Promise<TLJsonValue> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getApplicationConfig\",\n\t\t} as any as TdObject)) as any as TLJsonValue\n\t}\n\n\tpublic async saveApplicationLogEvent(type: string, chat_id: number, data: TLJsonValue): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"saveApplicationLogEvent\",\n\t\t\t\"type\": type,\n\t\t\t\"chat_id\": chat_id,\n\t\t\t\"data\": data,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async addProxy(server: string, port: number, enable: boolean, type: TLProxyType): Promise<TLProxy> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addProxy\",\n\t\t\t\"server\": server,\n\t\t\t\"port\": port,\n\t\t\t\"enable\": enable,\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLProxy\n\t}\n\n\tpublic async editProxy(proxy_id: number, server: string, port: number, enable: boolean, type: TLProxyType): Promise<TLProxy> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"editProxy\",\n\t\t\t\"proxy_id\": proxy_id,\n\t\t\t\"server\": server,\n\t\t\t\"port\": port,\n\t\t\t\"enable\": enable,\n\t\t\t\"type\": type,\n\t\t} as any as TdObject)) as any as TLProxy\n\t}\n\n\tpublic async enableProxy(proxy_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"enableProxy\",\n\t\t\t\"proxy_id\": proxy_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async disableProxy(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"disableProxy\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async removeProxy(proxy_id: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"removeProxy\",\n\t\t\t\"proxy_id\": proxy_id,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getProxies(): Promise<TLProxies> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getProxies\",\n\t\t} as any as TdObject)) as any as TLProxies\n\t}\n\n\tpublic async getProxyLink(proxy_id: number): Promise<TLText> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getProxyLink\",\n\t\t\t\"proxy_id\": proxy_id,\n\t\t} as any as TdObject)) as any as TLText\n\t}\n\n\tpublic async pingProxy(proxy_id: number): Promise<TLSeconds> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"pingProxy\",\n\t\t\t\"proxy_id\": proxy_id,\n\t\t} as any as TdObject)) as any as TLSeconds\n\t}\n\n\tpublic async setLogStream(log_stream: TLLogStream): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setLogStream\",\n\t\t\t\"log_stream\": log_stream,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getLogStream(): Promise<TLLogStream> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLogStream\",\n\t\t} as any as TdObject)) as any as TLLogStream\n\t}\n\n\tpublic async setLogVerbosityLevel(new_verbosity_level: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setLogVerbosityLevel\",\n\t\t\t\"new_verbosity_level\": new_verbosity_level,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getLogVerbosityLevel(): Promise<TLLogVerbosityLevel> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLogVerbosityLevel\",\n\t\t} as any as TdObject)) as any as TLLogVerbosityLevel\n\t}\n\n\tpublic async getLogTags(): Promise<TLLogTags> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLogTags\",\n\t\t} as any as TdObject)) as any as TLLogTags\n\t}\n\n\tpublic async setLogTagVerbosityLevel(tag: string, new_verbosity_level: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"setLogTagVerbosityLevel\",\n\t\t\t\"tag\": tag,\n\t\t\t\"new_verbosity_level\": new_verbosity_level,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async getLogTagVerbosityLevel(tag: string): Promise<TLLogVerbosityLevel> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"getLogTagVerbosityLevel\",\n\t\t\t\"tag\": tag,\n\t\t} as any as TdObject)) as any as TLLogVerbosityLevel\n\t}\n\n\tpublic async addLogMessage(verbosity_level: number, text: string): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"addLogMessage\",\n\t\t\t\"verbosity_level\": verbosity_level,\n\t\t\t\"text\": text,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async testCallEmpty(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallEmpty\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async testCallString(x: string): Promise<TLTestString> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallString\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestString\n\t}\n\n\tpublic async testCallBytes(x: Uint8Array): Promise<TLTestBytes> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallBytes\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestBytes\n\t}\n\n\tpublic async testCallVectorInt(x: ReadonlyArray<number>): Promise<TLTestVectorInt> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallVectorInt\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestVectorInt\n\t}\n\n\tpublic async testCallVectorIntObject(x: ReadonlyArray<TLTestInt>): Promise<TLTestVectorIntObject> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallVectorIntObject\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestVectorIntObject\n\t}\n\n\tpublic async testCallVectorString(x: ReadonlyArray<string>): Promise<TLTestVectorString> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallVectorString\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestVectorString\n\t}\n\n\tpublic async testCallVectorStringObject(x: ReadonlyArray<TLTestString>): Promise<TLTestVectorStringObject> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testCallVectorStringObject\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestVectorStringObject\n\t}\n\n\tpublic async testSquareInt(x: number): Promise<TLTestInt> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testSquareInt\",\n\t\t\t\"x\": x,\n\t\t} as any as TdObject)) as any as TLTestInt\n\t}\n\n\tpublic async testNetwork(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testNetwork\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async testProxy(server: string, port: number, type: TLProxyType, dc_id: number, timeout: number): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testProxy\",\n\t\t\t\"server\": server,\n\t\t\t\"port\": port,\n\t\t\t\"type\": type,\n\t\t\t\"dc_id\": dc_id,\n\t\t\t\"timeout\": timeout,\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async testGetDifference(): Promise<TLOk> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testGetDifference\",\n\t\t} as any as TdObject)) as any as TLOk\n\t}\n\n\tpublic async testUseUpdate(): Promise<TLUpdate> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testUseUpdate\",\n\t\t} as any as TdObject)) as any as TLUpdate\n\t}\n\n\tpublic async testReturnError(error: TLError): Promise<TLError> {\n\t\treturn (await this.client.send({\n\t\t\t\"@type\": \"testReturnError\",\n\t\t\t\"error\": error,\n\t\t} as any as TdObject)) as any as TLError\n\t}\n}\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport TdClient, { TdOptions, TdObject } from 'tdweb'\r\nimport * as TL from './tdapi'\r\n\r\nexport const dispatchTelegramEventHandler = { handle: null as any }\r\nexport const downloadFileHandler = { handle: null as any }\r\n\r\nconst apiId = '116322'\r\nconst apiHash = '1d39f9a88adbb2c9ef11b63d25fbf3ec'\r\nconst instanceName = 'user0'\r\n\r\nconst options: TdOptions = {\r\n\t/**\r\n\t * Callback for all incoming updates.\r\n\t */\r\n\tonUpdate: async (update: TdObject) => {\r\n\t\tconst dispatchTelegramEvent = dispatchTelegramEventHandler.handle\r\n\t\tconst downloadFile = downloadFileHandler.handle\r\n\r\n\t\tconsole.log('receive update!', update)\r\n\r\n\t\tswitch (update['@type']) {\r\n\t\t\tcase \"ok\": break; // Just Ok\r\n\t\t\tcase \"updateAuthorizationState\":\r\n\t\t\t\tswitch ((update as any).authorization_state['@type']) {\r\n\t\t\t\t\tcase \"authorizationStateWaitTdlibParameters\":\r\n\t\t\t\t\t\tawait td.send({\r\n\t\t\t\t\t\t\t'@type': 'setTdlibParameters',\r\n\t\t\t\t\t\t\tparameters: {\r\n\t\t\t\t\t\t\t\t'@type': 'tdParameters',\r\n\t\t\t\t\t\t\t\tuse_test_dc: false,\r\n\t\t\t\t\t\t\t\tapi_id: apiId,\r\n\t\t\t\t\t\t\t\tapi_hash: apiHash,\r\n\t\t\t\t\t\t\t\tsystem_language_code: navigator.language || 'en',\r\n\t\t\t\t\t\t\t\tdevice_model: 'WebAssembly',\r\n\t\t\t\t\t\t\t\tsystem_version: 'WebAssembly',\r\n\t\t\t\t\t\t\t\tapplication_version: '1.0.0',\r\n\t\t\t\t\t\t\t\tuse_secret_chats: true,\r\n\t\t\t\t\t\t\t\tuse_message_database: true,\r\n\t\t\t\t\t\t\t\tuse_file_database: false,\r\n\t\t\t\t\t\t\t\tdatabase_directory: '/db',\r\n\t\t\t\t\t\t\t\tfiles_directory: '/'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"authorizationStateWaitEncryptionKey\":\r\n\t\t\t\t\t\tawait td.send({\r\n\t\t\t\t\t\t\t'@type': 'checkDatabaseEncryptionKey',\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//case \"authorizationStateWaitPhoneNumber\":\r\n\t\t\t\t\t//\t//await td.send({\r\n\t\t\t\t\t//\t//\t'@type': 'checkAuthenticationBotToken',\r\n\t\t\t\t\t//\t//\ttoken\r\n\t\t\t\t\t//\t//})\r\n\t\t\t\t\t//\tconst phone = phoneNumber.trim().split(' ').join('')\r\n\t\t\t\t\t//\tawait td.send({\r\n\t\t\t\t\t//\t\t'@type': 'setAuthenticationPhoneNumber',\r\n\t\t\t\t\t//\t\t'phone_number': phone,\r\n\t\t\t\t\t//\t})\r\n\t\t\t\t\t//\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tdispatchTelegramEvent(update)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"updateFile\":\r\n\t\t\t\t//const updateFile = TL.updateFile(update as any)\r\n\t\t\t\t//dispatchTelegramEvent(update)\r\n\t\t\t\t//console.warn('~~~~~updateFile', updateFile)\r\n\t\t\t\t//if (updateFile.file.local.is_downloading_completed) {\r\n\t\t\t\t//\tdownloadFile(updateFile.file.id)\r\n\t\t\t\t//}\r\n\t\t\t\t//return;\r\n\r\n\t\t\t\tdispatchTelegramEvent(update)\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"updateOption\":\r\n\t\t\t\tif ((update as any).name == \"my_id\") { // Ready\r\n\t\t\t\t\t// Avoid rendering before dialogs loaded\r\n\t\t\t\t\tdispatchTelegramEvent(update)\r\n\r\n\t\t\t\t\t// Trigger TDLib to load dialogs\r\n\t\t\t\t\tconst CHAT_SLICE_LIMIT = 25\r\n\t\t\t\t\tconst chats = await td.send({\r\n\t\t\t\t\t\t'@type': 'getChats',\r\n\t\t\t\t\t\tchat_list: { '@type': 'chatListMain' },\r\n\t\t\t\t\t\toffset_chat_id: 0,\r\n\t\t\t\t\t\toffset_order: '9223372036854775807',\r\n\t\t\t\t\t\tlimit: CHAT_SLICE_LIMIT\r\n\t\t\t\t\t}) as any\r\n\r\n\t\t\t\t\t//console.warn('chatListMain', chats)\r\n\t\t\t\t\t//dispatchTelegramEvent(chats)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdispatchTelegramEvent(update)\r\n\r\n\t\t\t\tbreak;\r\n//\t\t\t\tswitch ((update as any).name) {\r\n//\t\t\t\t\tcase \"my_id\": // Ready\r\n\r\n//\t\t\t\t\t\tconst CHAT_SLICE_LIMIT = 25\r\n//\r\n//\t\t\t\t\t\tconst chats = await td.send({\r\n//\t\t\t\t\t\t\t'@type': 'getChats',\r\n//\t\t\t\t\t\t\tchat_list: { '@type': 'chatListMain' },\r\n//\t\t\t\t\t\t\toffset_chat_id: 0,\r\n//\t\t\t\t\t\t\toffset_order: '9223372036854775807',\r\n//\t\t\t\t\t\t\tlimit: CHAT_SLICE_LIMIT\r\n//\t\t\t\t\t\t}) as any\r\n//\r\n//\t\t\t\t\t\tconsole.log('getChats:', chats)\r\n//\r\n//\t\t\t\t\t\tfor (const chat_id of chats.chat_ids) {\r\n//\t\t\t\t\t\t\tconst chat = await td.send({\r\n//\t\t\t\t\t            \"@type\": \"getChat\",\r\n//\t\t\t\t\t            \"chat_id\": chat_id\r\n//\t\t\t\t\t        }) as any\r\n//\r\n//\t\t\t\t\t        console.log('getChat:', chat)\r\n//\r\n//\t\t\t\t\t       \t//const history = await td.send({\r\n//\t\t\t\t\t        //    \"@type\": \"getChatHistory\",\r\n//\t\t\t\t\t        //    \"chat_id\": chat_id,\r\n//\t\t\t\t\t        //    \"from_message_id\": chat.last_message? chat.last_message.id : 0,\r\n//\t\t\t\t\t        //    \"offset\": 0,\r\n//\t\t\t\t\t        //    \"limit\": 10,\r\n//\t\t\t\t\t        //    \"only_local\": false\r\n//\t\t\t\t\t        //}) as any\r\n//\t\t\t\t\t        //console.log(`getChatHistory for ${chat_id}:`, history)\r\n//\t\t\t\t\t\t}\r\n//\r\n//\t\t\t\t\t\tbreak;\r\n//\r\n//\t\t\t\t}\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tdispatchTelegramEvent(update)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * Name of the TDLib instance. Currently only one instance of TdClient with a given name is allowed.\r\n\t * All but one instances with the same name will be automatically closed. Usually, the newest non-background instance is kept alive.\r\n\t * Files will be stored in an IndexedDb table with the same name.\r\n\t */\r\n\tinstanceName: instanceName,\r\n\t/**\r\n\t * Pass true, if the instance is opened from the background.\r\n\t */\r\n\t//isBackground: false,\r\n\t/**\r\n\t * The initial verbosity level for the TDLib internal logging (0-1023).\r\n\t */\r\n\tlogVerbosityLevel: 1,\r\n\t/**\r\n\t * The initial verbosity level of the JavaScript part of the code (one of 'error', 'warning', 'info', 'log', 'debug').\r\n\t */\r\n\tjsLogVerbosityLevel: 'error',\r\n\t/**\r\n\t * Pass false to use TDLib without database and secret chats. It will significantly improve loading time, but some functionality will be unavailable.\r\n\t */\r\n\tuseDatabase: true,\r\n\t/**\r\n\t * For debug only. PaPass false to use TDLib without database and secret chats.\r\n\t * It will significantly improve loading time, but some functionality will be unavailable.ss true\r\n\t * to open TDLib database in read-only mode\r\n\t */\r\n\treadOnly: false,\r\n\t/**\r\n\t * For debug only. The type of the TDLib build to use. 'asmjs' for asm.js and 'wasm' for WebAssembly.\r\n\t * If mode == 'auto' WebAbassembly will be used if supported by browser, asm.js otherwise.\r\n\t */\r\n\tmode: 'wasm'\r\n}\r\n\r\nexport const td:TdClient = new TdClient(options)\r\nexport const tg:TL.TD = new TL.TD(td)\r\n\r\n//export async function send(query: TL.TLObject): Promise<TL.TLError | TL.TLObject> {\r\n//\treturn (await td.send(query as TdObject)) as TL.TLError | TL.TLObject\r\n//}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// First Last => FL\r\nexport function nameToInitials(nameCombined: string): string {\r\n\tif (nameCombined.length < 2) return nameCombined.toUpperCase()\r\n\treturn nameCombined.indexOf(' ') != -1? (nameCombined.split(' ')[0][0] + nameCombined.split(' ')[1][0]).substr(0, 2).toUpperCase() : nameCombined.substr(0, 2).toUpperCase()\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { nameToInitials } from '../../utils/UserInfo'\r\nimport './MessageTypes.scss'\r\n\r\nexport function CenterSystemMessage({text}: {text: string}) {\r\n\treturn <div className=\"centerSystemMessage\">\r\n\t\t<div>{text}</div>\r\n\t</div>\r\n}\r\n\r\nfunction CenterSystemMessageGroupPic({src}: {src: string}) {\r\n\t\t//<img src={src}/>\r\n\treturn <div className=\"centerSystemMessageGroupPic\">\r\n\t\t<div style={{backgroundImage: 'url(' + src + ')' }}>{' '}</div>\r\n\t</div>\r\n}\r\n\r\nexport function StickerMy({src, time, state, downloadFile, sticker}: any) {\r\n\tconst file: TL.TLFile = sticker\r\n\r\n\tconst srcAva: string | null = state.fileURL[file.id]\r\n\r\n\tif (srcAva == null) downloadFile(file)\r\n\r\n\treturn <div className=\"stickerMy\">\r\n\t\t<div className=\"webp\" style={{backgroundImage: 'url(' + (srcAva || 'blur.png') + ')' }}>{' '}</div>\r\n\t\t<div className=\"time\">{time}</div>\r\n\t</div>\r\n}\r\n\r\nexport function MessageMy({text, time, reactions}: {text: any, time: string, reactions?: any[]}) {\r\n\tconst timeTitle = 'Wednesday' // TODO\r\n\t\t//<div className=\"text\"><span>{text}</span></div>\r\n\treturn <div className=\"messageMy\">\r\n\t\t{text}\r\n\t\t<div className=\"text\">&nbsp;&nbsp;&nbsp;</div>\r\n\t\t{reactions}\r\n\t\t<div className=\"time\" title={timeTitle}>{time}</div>\r\n\t</div>\r\n}\r\n\r\nexport function MessageTheirs({text, time, author, avatar, views, reactions}: any) {\r\n\tconst timeTitle = 'Wednesday' // TODO\r\n\treturn <div>\r\n\t\t{ null &&  avatar && <img className=\"messageAvatar\" src={avatar} /> }\r\n\t\t<div className=\"messageTheirs\">\r\n\t\t\t{ author && <div className=\"author\">{author}</div> }\r\n\t\t\t{text}\r\n\t\t\t{false && <div className=\"text\">{text}</div>}\r\n\t\t\t<div className=\"text\">&nbsp;&nbsp;&nbsp;</div>\r\n\t\t\t<div className=\"right\">\r\n\t\t\t\t{reactions}\r\n\t\t\t\t<div className=\"time\" title={timeTitle}>{time}</div>\r\n\t\t\t\t{ views && <div className=\"views\" title={views + ' views'}>{views}</div> }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nexport function MessageSameSender({children}: any) {\r\n\treturn <div className=\"messageSameSender\">\r\n\t\t{children}\r\n\t</div>\r\n}\r\n\r\n// TODO const MessageSameSenderTheirs = connect()(=>)\r\nexport function MessageSameSenderTheirs({children, state, senderUserId, saveFileUrl, downloadFile}: any) {\r\n\tconst user = state.users[senderUserId]\r\n\tconst chat = state.chats[state.currentChatId]\r\n\r\n\t//const [srcAva, setSrcAva] = useState(\r\n\t//\tuser && user.photo && state.fileURL[user.photo.small.id]\r\n\t//\t||\r\n\t//\t'blur.jpg'\r\n\t//)\r\n\r\n\tconst srcAva: string | null =\r\n\t\tuser?\r\n\t\t(user && user.photo && state.fileURL[user.photo.small.id])\r\n\t\t:\r\n\t\t(chat && chat.photo && state.fileURL[chat.photo.small.id])\r\n\r\n\t//useEffect(() => {\r\n\t\tif (srcAva == null && user && user.photo) downloadFile(user.photo.small.id)\r\n\t\tif (srcAva == null && chat && chat.photo) downloadFile(chat.photo.small.id)\r\n\t//}, [user && user.photo && user.photo.small.id])\r\n\r\n//\tconst [loaded, setLoaded] = useState(srcAva != 'blur.jpg')\r\n//\r\n//\tuseEffect(() => {\r\n//\t\tif (\r\n//\t\t\tuser &&\r\n//\t\t\tuser.photo &&\r\n//\t\t\tsrcAva == 'blur.jpg' &&\r\n//\t\t\tstate.files[user.photo.small.id] &&\r\n//\t\t\tstate.files[user.photo.small.id].local.can_be_downloaded == true &&\r\n//\t\t\tstate.files[user.photo.small.id].local.is_downloading_completed == false &&\r\n//\t\t\tstate.files[user.photo.small.id].local.is_downloading_active == false\r\n//\t\t) {\r\n//\t\t\t// TODO seems like it restarts downloadFile for as much as many same avas shown\r\n//\t\t\tconsole.warn('downloadFile', user.photo.small.id)\r\n//\t\t\ttg.downloadFile(user.photo.small.id, 30, 0, 0, false).then(\r\n//\t\t\t\tfile => {\r\n//\t\t\t\t\tconsole.warn('file', file)\r\n//\t\t\t\t\tsetLoaded(true)\r\n//\t\t\t\t}\r\n//\t\t\t)\r\n//\t\t}\r\n//\r\n//\t\tif (\r\n//\t\t\tuser &&\r\n//\t\t\tuser.photo &&\r\n//\t\t\tsrcAva == 'blur.jpg' &&\r\n//\t\t\tstate.files[user.photo.small.id] &&\r\n//\t\t\tstate.files[user.photo.small.id].local.is_downloading_completed == true\r\n//\t\t) {\r\n//\t\t\t// TODO seems like it restarts readFilePart for as much as many same avas shown\r\n//\t\t\tconsole.warn('readFilePart', user.photo.small.id)\r\n//\t\t\ttg.readFilePart(user.photo.small.id, 0, 0).then(\r\n//\t\t\t\tfilePart => {\r\n//\t\t\t\t\tlet blobURL = window.URL.createObjectURL(filePart.data)\r\n//\t\t\t\t\tsaveFileUrl(user.photo.small.id, blobURL)\r\n//\t\t\t\t\t//setSrcAva(blobURL)\r\n//\t\t\t\t\tsetLoaded(false)\r\n//\t\t\t\t}\r\n//\t\t\t)\r\n//\t\t}\r\n//\t}, [loaded])\r\n\r\n\tlet name: string =\r\n\t\tuser?\r\n\t\t(user && (user.firstName + ' ' + user.lastName).trim())\r\n\t\t:\r\n\t\t(chat && (chat.title).trim() || '??')\r\n\r\n\r\n\tif (\r\n\t\tuser &&\r\n\t\tuser.type['@type'] == 'userTypeDeleted'\r\n\t) name = 'Deleted Account'\r\n\r\n\treturn <div className=\"messageSameSenderTheirs\" key={senderUserId}>\r\n\t\t{ srcAva != null && <img className=\"messageAvatar\" src={srcAva || 'blur.jpg'} key={senderUserId}/>}\r\n\t\t{ srcAva == null && <span className=\"messageAvatarPlaceholder\" key={senderUserId}>{nameToInitials(name)}</span>}\r\n\t\t{children}\r\n\t</div>\r\n}\r\n\r\nexport function MessagePhotoTheirs({state, sized, downloadFile, text, time, author, views}: any) {\r\n\tconst file: TL.TLFile = sized\r\n\r\n\tconst srcAva: string | null = state.fileURL[file.id]\r\n\r\n\tif (srcAva == null) downloadFile(file)\r\n\r\n\tconst timeTitle = 'Wednesday' // TODO\r\n\r\n\treturn <div>\r\n\t\t<div className={text.length != 0? \"messageTheirs messageTheirsPhoto\" : \"messageTheirs messageTheirsPhoto messageTheirsPhotoNoCaption\"}>\r\n\t\t\t{ author && <div className=\"author\">{author}</div> }\r\n\t\t\t<div className=\"messagePhoto\"><img className=\"\" src={srcAva || 'blur.jpg'}/></div>\r\n\t\t\t{text}\r\n\t\t\t<div className=\"text\">&nbsp;&nbsp;&nbsp;</div>\r\n\t\t\t<div className=\"right\">\r\n\t\t\t\t<div className=\"time\" title={timeTitle}>{time}</div>\r\n\t\t\t\t{ views && <div className=\"views\" title={views + ' views'}>{views}</div> }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nexport function StickerOnMessage({state, sticker, downloadFile, pos, senderName}: any) {\r\n\tconst file: TL.TLFile = sticker\r\n\r\n\tconst srcAva: string | null = state.fileURL[file.id]\r\n\tif (srcAva == null) downloadFile(file)\r\n\t\t//  style={{ left: 100 + (pos*28) + 'px', bottom: (pos%2)*6 + 'px' }}\r\n\treturn <img src={srcAva || 'blur.png'} className=\"stickerOnMessage\" title={`${senderName} reacted with sticker`}/>\r\n}\r\n\r\n//function ForceRender({children, trigger}: any) {\r\n//\treturn <>{children}</>\r\n//}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { State } from '../../redux/store'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { tg } from '../../tdlib/tdlib'\r\nimport './Input.scss'\r\n\r\nfunction replaceCaret(el: HTMLElement) {\r\n\t// Place the caret at the end of the element\r\n\tconst target = document.createTextNode('');\r\n\tel.appendChild(target);\r\n\t// do not move caret if element was not focused\r\n\tconst isTargetFocused = document.activeElement === el;\r\n\tif (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n\tvar sel = window.getSelection();\r\n\tif (sel !== null) {\r\n\t\tvar range = document.createRange();\r\n\t\trange.setStart(target, target.nodeValue.length);\r\n\t\trange.collapse(true);\r\n\t\tsel.removeAllRanges();\r\n\t\tsel.addRange(range);\r\n\t}\r\n\tif (el instanceof HTMLElement) el.focus();\r\n\t}\r\n}\r\n\r\nexport default function Input({state}:{state: State}) {\r\n\tconst [value, setValue] = useState('')\r\n\tconst messagesEndRef = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst current = messagesEndRef.current\r\n\t\tif (current) replaceCaret(current)\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst chat = state.chats[state.currentChatId]\r\n\t\t// Get draft\r\n\t\tconst draft = chat && chat.draft\r\n\t\tif (\r\n\t\t\tdraft &&\r\n\t\t\tdraft['@type'] == 'inputMessageText' &&\r\n\t\t\tTL.inputMessageText(draft).text['@type'] == 'formattedText'\r\n\t\t) {\r\n\t\t\tconst draftText: string = TL.formattedText(TL.inputMessageText(draft).text).text\r\n\t\t\tsetValue(draftText.trim())\r\n\t\t} else setValue('')\r\n\r\n\t}, [state.currentChatId])\r\n\r\n\tfunction updateValue(text: string) {\r\n\t\tsetValue(text.trim())\r\n\t}\r\n\r\n\tfunction onKeyDown(e: any) {\r\n\t\tif (e.key == 'Enter') {\r\n\t\t\ttg.parseTextEntities(\r\n\t\t\t\tvalue,\r\n\t\t\t\t{ '@type': 'textParseModeMarkdown', version: 1 }\r\n\t\t\t).then(text => {\r\n\t\t\t\ttg.sendMessage(\r\n\t\t\t\t\tstate.currentChatId, // chat_id\r\n\t\t\t\t\t0, // reply_to_message_id\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"@type\": \"sendMessageOptions\",\r\n\t\t\t\t\t\tdisable_notification: false,\r\n\t\t\t\t\t\tfrom_background: false,\r\n\t\t\t\t\t\t// TODO\r\n\t\t\t\t\t\tscheduling_state: null as any\r\n\t\t\t\t\t},// options\r\n\t\t\t\t\tnull as any,// reply_markup\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'@type': 'inputMessageText',\r\n\t\t\t\t\t\ttext: text,\r\n\t\t\t\t\t\tdisable_web_page_preview: false,\r\n\t\t\t\t\t\tclear_draft: true\r\n\t\t\t\t\t}// input_message_content\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tsetValue('')\r\n\t\t\te.preventDefault()\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tconst chat = state.chats[state.currentChatId]\r\n\r\n\tif (chat == null) return null\r\n\r\n\tif (\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].type['@type'] == 'userTypeDeleted'\r\n\t) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tif (\r\n\t\tchat.type['@type'] == 'chatTypeSupergroup' &&\r\n\t\tstate.supergroups[TL.chatTypeSupergroup(chat.type).supergroup_id]\r\n\t) {\r\n\t\tconst supergroup = state.supergroups[TL.chatTypeSupergroup(chat.type).supergroup_id]\r\n\t\tif (supergroup.isChannel == true) return null\r\n\t}\r\n\r\n\treturn <div className=\"bottom\">\r\n\t\t<div className=\"input\">\r\n\t\t\t{(value == '') && <div className=\"placeholder\">Write a message...</div>}\r\n\t\t\t<div ref={messagesEndRef} className=\"editor\" contentEditable={true} onKeyDown={onKeyDown} onInput={e => updateValue((e.target as any).innerHTML)} dangerouslySetInnerHTML={{__html:value}}></div>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"thinVerticalLine\"/>\r\n\t</div>\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { State } from '../../redux/store'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport './Top.scss'\r\n\r\nexport default function Top({state}:{state: State}) {\r\n\tconst chat = state.chats[state.currentChatId]\r\n\tconst savedMessages = state.myId == chat.id\r\n\tlet larger = savedMessages\r\n\r\n\tlet name = chat? (savedMessages? 'Saved Messages' : chat.title) : ''\r\n\tlet summary = ''\r\n\r\n\tif (\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypeSupergroup' &&\r\n\t\tstate.supergroups[TL.chatTypeSupergroup(chat.type).supergroup_id]\r\n\t) {\r\n\t\tconst supergroup = state.supergroups[TL.chatTypeSupergroup(chat.type).supergroup_id]\r\n\t\tconst memberCount = supergroup.memberCount\r\n\t\tif (supergroup.isChannel == false) {\r\n\t\t\tsummary = '' + memberCount + ' members' // TODO 1 member/ N members\r\n\t\t\tif (chat.onlineMemberCount > 1) summary += ', ' + chat.onlineMemberCount + ' online'\r\n\t\t}\r\n\t\tif (supergroup.isChannel == true) summary = '' + memberCount + ' subscribers'\r\n\t}\r\n\r\n\tconst bot = (\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\t// TODO TL.userTypeBot(...) != null\r\n\t\t// ^ or better isUserTypeBot\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].type['@type'] == 'userTypeBot'\r\n\t)\r\n\r\n\tif (bot) summary = 'bot'\r\n\r\n\tif (\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].type['@type'] == 'userTypeDeleted'\r\n\t) {\r\n\t\tname = 'Deleted Account'\r\n\t\tlarger = true\r\n\t}\r\n\r\n\telse\r\n\r\n\tif (\r\n\t\tsavedMessages == false &&\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].type['@type'] == 'userTypeRegular'\r\n\t) {\r\n\t\tconst user = state.users[TL.chatTypePrivate(chat.type).user_id]\r\n\t\tname = (user.firstName + ' ' + user.lastName).trim()\r\n\t\tif (user.status['@type'] == 'userStatusEmpty') summary = 'service notifications'\r\n\t\tif (user.status['@type'] == 'userStatusOnline') summary = 'online'\r\n\t\tif (user.status['@type'] == 'userStatusOffline') {\r\n\t\t\tconst was_online: number = TL.userStatusOffline(user.status).was_online * 1000\r\n\t\t\tconst second = 1\r\n\t\t\tconst minute = 60 * second\r\n\t\t\tconst hour = 60 * minute\r\n\t\t\tconst day = hour * 24\r\n\t\t\tconst week = day * 7\r\n\t\t\tconst moth = week * 4\r\n\t\t\tconst now: number = Date.now()\r\n\t\t\tconst diff: number = (now - was_online) / 1000\r\n\t\t\t//window.document.title = '' + Date.now() + ' > ' + was_online\r\n\r\n\t\t\tif (diff < 10) summary = 'last seen right now'\r\n\t\t\telse if (diff < minute) summary = Math.round(diff) + ' seconds ago'\r\n\t\t\telse if (diff < hour) summary = Math.round(diff / minute) + ' minutes ago'\r\n\t\t\telse if (diff < day) summary = Math.round(diff / hour) + ' hours ago'\r\n\t\t\telse if (diff < week) summary = Math.round(diff / day) + ' days ago'\r\n\t\t\telse if (diff < moth) summary = Math.round(diff / week) + ' weeks ago'\r\n\t\t\telse if (diff < moth * 2) summary = 'last seen a month ago'\r\n\t\t\telse summary = 'last seen a long time ago'\r\n\r\n\t\t\t//else summary = '' + diff + ' m:' + minute + ' h:' + hour\r\n\r\n//\t\t\tsummary = 'last seen right now'\r\n//\r\n//\t\t\tif (diff > moth) summary = 'last seen a long time ago'; else\r\n//\t\t\tif (diff > week) summary = 'last seen within a month'; else\r\n//\t\t\tif (diff > day) summary = 'last seen within a week'; else\r\n//\t\t\tif (diff > hour) summary = 'last seen within a day'; else\r\n//\t\t\tif (diff > minute) summary = 'last seen within a hour'; else\r\n//\t\t\tif (diff > second) summary = 'last seen within a minute'\r\n\t\t}\r\n\t\tif (user.status['@type'] == 'userStatusRecently') summary = 'last seen recently'\r\n\t\tif (user.status['@type'] == 'userStatusLastWeek') summary = 'last seen within a week'\r\n\t\tif (user.status['@type'] == 'userStatusLastMonth') summary = 'last seen within a month'\r\n\t}\r\n\r\n\treturn <div className=\"top\">\r\n\t\t<div className=\"about\">\r\n\t\t\t<div className={larger? \"bold larger\" : \"bold\"}>{name}</div>\r\n\t\t\t<div className=\"light\">{summary}</div>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"thinVerticalLine\"/>\r\n\t</div>\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport * as TL from '../tdlib/tdapi'\r\nimport { Dispatch } from 'redux'\r\nimport { State } from '../redux/store'\r\nimport { tg } from '../tdlib/tdlib'\r\n\r\n//let busyLoading = false\r\nlet busyConverting = false\r\n// TODO rename to downloadPhoto cause it creates blob URL?\r\n// TODO Take TLFile instead of raw id\r\nexport function downloadFile(idOrFile: number | TL.TLFile) {\r\n\treturn async (dispatch:Dispatch, getState: () => State) => {\r\n\t\t//if (busy) return;\r\n\t\t//;(window as any).downloadFileBusy = (window as any).downloadFileBusy || 0\r\n\t\t//if ((window as any).downloadFileBusy > 1) alert('downloadFileBusy = ' + (window as any).downloadFileBusy)\r\n\t\t//if ((window as any).downloadFileBusy < 0) alert('downloadFileBusy<0 = ' + (window as any).downloadFileBusy)\r\n\t\t//if ((window as any).downloadFileBusy == 1) return;\r\n\r\n\t\t//console.warn('SAVE_FILE_URL from thunk', id, url)\r\n\t\tconst id = typeof(idOrFile) == 'number'? idOrFile as number : (idOrFile as TL.TLFile).id\r\n\t\t//console.warn('downloadFile from thunk', id)\r\n\r\n\t\tconst state = getState()\r\n\r\n\t\t//if (state.fileLoads[id] == true) {\r\n\t\t//\tconsole.warn('downloadFile from thunk already loads', id)\r\n\t\t//\treturn\r\n\t\t//}\r\n\r\n\t\t//dispatch({ type: 'SAVE_FILE_LOADS', payload: { id, loads: true } })\r\n\r\n\t\t//console.warn('downloadFile from thunk starts loading', id)\r\n\r\n\t\tconst file: TL.TLFile | null = state.files[id] ?? ((typeof(idOrFile) != 'number') && (idOrFile as TL.TLFile))\r\n\r\n\t\tif (file == null) return\r\n\t\t// console.warn('downloadFile->state.files[id] == null')\r\n\t\tif (state.fileURL[id] != null) return\r\n\r\n\t\tif (\r\n\t\t\tstate.fileLoads[id] == null &&\r\n\t\t\tfile.local.can_be_downloaded == true &&\r\n\t\t\tfile.local.is_downloading_completed == false &&\r\n\t\t\tfile.local.is_downloading_active == false\r\n\t\t) {\r\n\t\t\t//if (busyLoading) return\r\n\t\t\t//busyLoading = true\r\n\t\t\tdispatch({ type: 'SAVE_FILE_LOADS', payload: { id, loads: 1 } })\r\n\t\t\tconst file = await tg.downloadFile(id, 30, 0, 0, false)\r\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 100))\r\n\t\t\t//busyLoading = false\r\n\t\t\t// TODO try\r\n\t\t\t//console.warn('Handle this file please (not critical)', file)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//await new Promise(resolve => setTimeout(resolve, 1000))\r\n\t\tif (\r\n\t\t\t(state.fileLoads[id] == null || state.fileLoads[id] == 1) &&\r\n\t\t\tfile.local.is_downloading_completed == true\r\n\t\t) {\r\n\t\t\t//busyLoading = false\r\n\t\t\tif (busyConverting) return\r\n\t\t\tbusyConverting = true\r\n\t\t\tdispatch({ type: 'SAVE_FILE_LOADS', payload: { id, loads: 2 } })\r\n\t\t\tconst filePart = await tg.readFilePart(id, 0, 0)\r\n\t\t\t// TODO try\r\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 100))\r\n\t\t\tlet blobURL = window.URL.createObjectURL(filePart.data)\r\n\t\t\t//let blobURL = (window as any).blobURL || window.URL.createObjectURL(filePart.data)\r\n\t\t\tbusyConverting = false\r\n\t\t\tdispatch({ type: 'SAVE_FILE_URL', payload: { id, url: blobURL } })\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { State } from '../../redux/store'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { tg } from '../../tdlib/tdlib'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { MessageSameSender, MessageSameSenderTheirs, CenterSystemMessage, MessagePhotoTheirs } from '../messages/MessageTypes'\r\nimport { StickerMy, StickerOnMessage, MessageMy, MessageTheirs } from '../messages/MessageTypes'\r\nimport Input from './Input'\r\nimport Top from './Top'\r\nimport { downloadFile as downloadFile } from '../../tdlib/loader'\r\nimport './CurrentChatPanel.scss'\r\n\r\nfunction History({state, saveChatHistory, saveFileUrl, downloadFile}:{state: State, saveChatHistory: SaveChatHistory, saveFileUrl: SaveFileUrl, downloadFile: any}) {\r\n\tconst messagesEndRef = useRef(null)\r\n\r\n\tconst [dragging, setDragging] = useState(false)\r\n\tconst [position, setPosition] = useState(0)\r\n\tconst [lastPosition, setLastPosition] = useState(0)\r\n\tconst [progress, setProgress] = useState(0.0)\r\n\r\n\tconst chatListScrollBar = useRef(null)\r\n\tconst chatListScrollPane = useRef(null)\r\n\r\n\tconst sliderMaxY = chatListScrollBar.current != null? (chatListScrollBar.current as any).offsetHeight : 0\r\n\tconst sliderHeight = 100 // TODO\r\n\tconst sliderY = Math.min(Math.max(position, 0), sliderMaxY - sliderHeight)\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst onMouseMove = (e: any) => {\r\n\t\t\tconst positionNew = Math.max(0, position + e.pageY - lastPosition)\r\n\t\t\tsetPosition(positionNew)\r\n\t\t\tsetLastPosition(e.pageY)\r\n\r\n\t\t\tconst sliderMaxY = chatListScrollBar.current != null? (chatListScrollBar.current as any).offsetHeight : 0\r\n\t\t\tconst sliderY = Math.min(Math.max(positionNew, 0), sliderMaxY - sliderHeight)\r\n\t\t\tconst progressNew = Math.min(sliderY / (sliderMaxY - sliderHeight), 1.0)\r\n\t\t\tsetProgress(progressNew)\r\n\t\t\t//if (chatListScrollBar.current) (chatListScrollBar.current as any).style.top = sliderY + 3 + 'px'\r\n\t\t}\r\n\r\n\t\tconst onMouseUp = () => {\r\n\t\t\tsetDragging(false)\r\n\t\t}\r\n\r\n\t\tif (dragging) {\r\n\t\t\tdocument.addEventListener('mousemove', onMouseMove)\r\n\t\t\tdocument.addEventListener('mouseup', onMouseUp)\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('mousemove', onMouseMove)\r\n\t\t\tdocument.removeEventListener('mouseup', onMouseUp)\r\n\t\t}\r\n\t}, [dragging])\r\n\r\n\t//useEffect(() => {\r\n\t//}, [state.currentChatId])\r\n\r\n\t//const something = <div></div>\r\n\t//const messages: (typeof something)[] = []\r\n\tconst messages: React.ReactNode[] = []\r\n\r\n\tconst chat = state.chats[state.currentChatId]\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\t// TODO remember scroll position for each chat separately\r\n\t\tsetTimeout( () => {\r\n\t\t\tsetProgress(Math.min(1.0, (1.0 - 0.00001) + Math.random() * 0.00001))\r\n\t\t\tconst sliderMaxY = chatListScrollBar.current != null? (chatListScrollBar.current as any).offsetHeight : 0\r\n\t\t\tsetPosition(sliderMaxY - sliderHeight)\r\n\t\t}, 100)\r\n\t\t//const current = messagesEndRef.current\r\n\t\t//return\r\n\t\t////alert('scrollToBottom ' + current)\r\n\t\t//if (current) (current as any).scrollIntoView({ behavior: \"smooth\" })\r\n\t}\r\n\r\n\tuseEffect(scrollToBottom, [chatListScrollPane.current, state.currentChatId, messages.length, chat && chat.lastMessage]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tchat &&\r\n\t\t\t(state.history[state.currentChatId] == null || state.history[state.currentChatId].length < 10)\r\n\t\t) {\r\n\t\t\t// Fix race condition\r\n\t\t\tconst currentChatId = state.currentChatId\r\n\t\t\t// Avoid repeating of getChatHistory\r\n\t\t\t//alert('saveChatHistory')\r\n\t\t\tsaveChatHistory(currentChatId, [])\r\n\t\t\tconst howMuch = 25\r\n\t\t\ttg.getChatHistory(\r\n\t\t\t\tcurrentChatId,\r\n\t\t\t\t0, //chat.lastMessage,\r\n\t\t\t\t0,\r\n\t\t\t\thowMuch,\r\n\t\t\t\tfalse\r\n\t\t\t).then(messages => {\r\n\t\t\t\t//alert('saveChatHistory messages ' + messages.messages.length + ' ' + messages.messages)\r\n\t\t\t\t//saveChatHistory(currentChatId, messages.messages)\r\n\t\t\t\ttg.getChatHistory(\r\n\t\t\t\t\tcurrentChatId,\r\n\t\t\t\t\t0, //chat.lastMessage,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\thowMuch,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t).then(messages => {\r\n\t\t\t\t\tsaveChatHistory(currentChatId, messages.messages)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, [state.currentChatId])\r\n\r\n\tif (\r\n\t\tchat &&\r\n\t\tstate.history[state.currentChatId] &&\r\n\t\tstate.history[state.currentChatId].length > 0\r\n\t) {\r\n\t\tlet destination = messages\r\n\t\tlet lastSender = 0\r\n\t\tlet lastMessageId = 0\r\n\r\n\t\tconst mergeDestination = () => {\r\n\t\t\tif (lastSender == state.myId)\r\n\t\t\t\tmessages.push(<MessageSameSender key={lastMessageId}>{destination}</MessageSameSender>)\r\n\t\t\telse if (lastSender == -1) // System message\r\n\t\t\t\tmessages.push(<>{destination}</>)\r\n\t\t\t//else if (lastSender == 0)\r\n\t\t\t//\tmessages.push(<>{destination}</>)\r\n\t\t\t// Note: for channels and auto-forward from channels `lastSender == 0`!\r\n\t\t\telse messages.push(<MessageSameSenderTheirs\r\n\t\t\t\t\tdownloadFile={downloadFile}\r\n\t\t\t\t\tsaveFileUrl={saveFileUrl}\r\n\t\t\t\t\tsenderUserId={lastSender}\r\n\t\t\t\t\tstate={state}\r\n\t\t\t\t\tkey={'~' + lastSender + '~' + state.currentChatId + '~' + lastMessageId}>\r\n\t\t\t\t\t{destination}\r\n\t\t\t\t</MessageSameSenderTheirs>\r\n\t\t\t)\r\n\r\n\t\t//\tmessages.push(\r\n\t\t//\t\tlastSender == state.myId?\r\n\t\t//\t\t<MessageSameSender key={lastMessageId}>{destination}</MessageSameSender>\r\n\t\t//\t\t:\r\n\t\t//\t\t//  key={Math.random()}\r\n\t\t//\t\t// TODO no avatar offset for private chats\r\n\t\t//\t\t<MessageSameSenderTheirs downloadFile={downloadFile} saveFileUrl={saveFileUrl} senderUserId={lastSender} state={state} key={'' + lastSender + '~' + state.currentChatId/* + '~' + lastMessageId*/}>\r\n\t\t//\t\t\t{destination}\r\n\t\t//\t\t</MessageSameSenderTheirs>\r\n\t\t//\t)\r\n\t\t}\r\n\r\n\t\tconst updateDestination = (senderUserId: number) => {\r\n\t\t\tif (destination == messages) {\r\n\t\t\t\tdestination = []\r\n\t\t\t\tlastSender = senderUserId\r\n\t\t\t} else {\r\n\t\t\t\tif (lastSender != senderUserId) {\r\n\t\t\t\t\tmergeDestination()\r\n\t\t\t\t\tdestination = []\r\n\t\t\t\t\tlastSender = senderUserId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const messageId of [...state.history[state.currentChatId].slice().reverse()/*, chat.lastMessage*/]) {\r\n\t\t\tconst messageState = state.messages[chat.id][messageId]\r\n\t\t\tif (messageState == null) continue\r\n\t\t\tconst key = messageState.id\r\n\t\t\tlastMessageId = key\r\n\t\t\tconst time = (date => {\r\n\t\t\t\treturn new Date(date * 1000).toLocaleTimeString(navigator.language, {\r\n\t\t\t\t\thour: '2-digit',\r\n\t\t\t\t\tminute: '2-digit'\r\n\t\t\t\t})\r\n\t\t\t})(messageState.date)\r\n\t\t\t//const sameSender =\r\n\t\t\tswitch (messageState.content['@type']) {\r\n\t\t\t\tcase \"messageChatUpgradeFrom\":\r\n\t\t\t\t\tlet messageChatUpgradeFrom = TL.messageChatUpgradeFrom(messageState.content)\r\n\t\t\t\t\tupdateDestination(-1)\r\n\t\t\t\t\tdestination.push(<CenterSystemMessage key={key} text={`Group ${messageChatUpgradeFrom.title} upgraded to supergroup`}/>)\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"messageChatJoinByLink\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tupdateDestination(-1)\r\n\t\t\t\t\t\tlet messageChatJoinByLink = TL.messageChatJoinByLink(messageState.content)\r\n\t\t\t\t\t\tconst senderName = state.users[messageState.senderUserId]?\r\n\t\t\t\t\t\t\t(state.users[messageState.senderUserId].firstName + ' ' + state.users[messageState.senderUserId].lastName).trim()\r\n\t\t\t\t\t\t: 'User'\r\n\t\t\t\t\t\tconst text = `${senderName} joined the group via invite link`\r\n\t\t\t\t\t\tdestination.push(<CenterSystemMessage key={key} text={text}/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"messagePhoto\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst messagePhoto = TL.messagePhoto(messageState.content)\r\n\t\t\t\t\t\tconst photo = messagePhoto.photo\r\n\t\t\t\t\t\tconst caption: TL.TLFormattedText = messagePhoto.caption\r\n\t\t\t\t\t\tconst text = caption.text != \"\"? [<div className=\"text\">{caption.text}</div>] : []\r\n\t\t\t\t\t\t//const sized: TL.TLFile = photo.sizes[0].photo\r\n\t\t\t\t\t\tconst sized: TL.TLFile = photo.sizes.reduce((prev, curr) => prev.height > curr.height? prev : curr).photo\r\n\t\t\t\t\t\tupdateDestination(messageState.senderUserId)\r\n\t\t\t\t\t\t//if (messageState.senderUserId == 0 || messageState.senderUserId == null) destination.push(<>{JSON.stringify(messageState)}</>)\r\n\t\t\t\t\t\tconst senderName = destination.length == 0 && state.users[messageState.senderUserId]? state.users[messageState.senderUserId].firstName : null\r\n\t\t\t\t\t\tdestination.push(<MessagePhotoTheirs key={key} state={state} sized={sized} downloadFile={downloadFile} author={senderName} text={text} time={time}/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"messageSticker\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst messageSticker = TL.messageSticker(messageState.content)\r\n\t\t\t\t\t\tconst sticker: TL.TLFile = messageSticker.sticker.is_animated? messageSticker.sticker.thumbnail.photo : messageSticker.sticker.sticker\r\n\t\t\t\t\t\tupdateDestination(messageState.senderUserId)\r\n\t\t\t\t\t\tdestination.push(<StickerMy key={key} state={state} src=\"sticker.webp\" downloadFile={downloadFile} sticker={sticker} time={time}/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"messageText\":\r\n\t\t\t\t\t//if (destination == messages) {\r\n\t\t\t\t\t//\tdestination = []\r\n\t\t\t\t\t//\tlastSender = messageState.senderUserId\r\n\t\t\t\t\t//} else {\r\n\t\t\t\t\t//\tif (lastSender != messageState.senderUserId) {\r\n\t\t\t\t\t//\t\tmergeDestination()\r\n\t\t\t\t\t//\t\tdestination = []\r\n\t\t\t\t\t//\t\tlastSender = messageState.senderUserId\r\n\t\t\t\t\t//\t}\r\n\t\t\t\t\t//}\r\n\r\n\t\t\t\t\tupdateDestination(messageState.senderUserId)\r\n\r\n\t\t\t\t\t// TODO no sender name for private chats\r\n\t\t\t\t\tconst senderName = destination.length == 0 && state.users[messageState.senderUserId]? state.users[messageState.senderUserId].firstName : null\r\n\t\t\t\t\tlet lines = TL.messageText(messageState.content).text.text//.trim()\r\n\t\t\t\t\tlet text = [<div className=\"text\">{lines}</div>]\r\n\r\n\t\t\t\t\tif (lines.includes('\\n')) {\r\n\t\t\t\t\t\ttext = []\r\n\t\t\t\t\t\tconst parts = lines.split('\\n')\r\n\r\n\t\t\t\t\t\tfor (let line of parts) {\r\n\t\t\t\t\t\t\t//const className = ((text.length == (parts.length - 1))? \"text\" : \"text textLine\");\r\n\t\t\t\t\t\t\tlet className = \"text\"\r\n\r\n\t\t\t\t\t\t\tif (text.length != (parts.length - 1)) {\r\n\t\t\t\t\t\t\t\tclassName = \"text textLine\"\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (line == '') {\r\n\t\t\t\t\t\t\t\tline = <>&nbsp;</> as any\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst what = <div className={className}>{line}</div>\r\n\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t//text.push(<div className=\"text\">{line}</div>)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//for (const line of lines.split('\\n')) {\r\n\t\t\t\t\t\t//\ttext.push(<div className=\"text\">{line}</div>)\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (TL.messageText(messageState.content).text.entities.length > 0) {\r\n\t\t\t\t\t\t//alert(JSON.stringify(TL.messageText(messageState.content).text.entities))\r\n\r\n\t\t\t\t\t\tlet lastOffset = 0\r\n\t\t\t\t\t\tlet lastLength = 0\r\n\t\t\t\t\t\ttext = []\r\n\t\t\t\t\t\tfor (const entity of TL.messageText(messageState.content).text.entities) {\r\n\t\t\t\t\t\t\tif (entity.offset > lastOffset + lastLength) {\r\n\t\t\t\t\t\t\t\tconst string = lines.substr(lastOffset + lastLength, entity.offset - (lastOffset + lastLength))\r\n\t\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlastOffset = entity.offset\r\n\t\t\t\t\t\t\tlastLength = entity.length\r\n\t\t\t\t\t\t\tconst string = lines.substr(entity.offset, entity.length)\r\n\r\n\t\t\t\t\t\t\tswitch (entity.type[\"@type\"]) {\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeBold': {\r\n\t\t\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text textEntityTypeBold\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeItalic': {\r\n\t\t\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text textEntityTypeItalic\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeCode': {\r\n\t\t\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text textEntityTypeCode\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeStrikethrough': {\r\n\t\t\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text textEntityTypeStrikethrough\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeUnderline': {\r\n\t\t\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text textEntityTypeUnderline\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeUrl': {\r\n\t\t\t\t\t\t\t\t\tconst href = string\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeTextUrl': {\r\n\t\t\t\t\t\t\t\t\tconst textEntityTypeTextUrl = TL.textEntityTypeTextUrl(entity.type)\r\n\t\t\t\t\t\t\t\t\tconst href = textEntityTypeTextUrl.url\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeMention': {\r\n\t\t\t\t\t\t\t\t\tconst href = 'https://t.me/' + string.substr(1)\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeHashtag': {\r\n\t\t\t\t\t\t\t\t\tconst href = 'https://t.me/TODO_' + string // TODO\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeCashtag': {\r\n\t\t\t\t\t\t\t\t\tconst href = 'https://t.me/TODO_' + string // TODO\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeBotCommand': {\r\n\t\t\t\t\t\t\t\t\tconst href = 'https://t.me/TODO_' + string // TODO\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypeEmailAddress': {\r\n\t\t\t\t\t\t\t\t\tconst href = 'mailto:' + string\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcase 'textEntityTypePhoneNumber': {\r\n\t\t\t\t\t\t\t\t\tconst href = 'tel:' + string\r\n\t\t\t\t\t\t\t\t\tconst what = <div onClick={_ => window.open(href, '_blank')} title={href} key={lastOffset} className=\"text textEntityTypeUrl\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t\tconst what = <div className=\"text\">{'(?' + entity.type[\"@type\"] + '=' + string + '?)'}</div>\r\n\t\t\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (lastOffset + lastLength != lines.length) {\r\n\t\t\t\t\t\t\tconst string = lines.substr(lastOffset + lastLength)\r\n\t\t\t\t\t\t\tconst what = <div key={lastOffset} className=\"text\">{'' + string + ''}</div>\r\n\t\t\t\t\t\t\ttext.push(what)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet pos = 0\r\n\t\t\t\t\tconst reactions = []\r\n\t\t\t\t\tfor (const messageId of state.history[chat.id]) {\r\n\t\t\t\t\t\tconst message = state.messages[chat.id][messageId]\r\n\t\t\t\t\t\tif (message.replyToMessageId == messageState.id && message.content['@type'] == \"messageSticker\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst messageSticker = TL.messageSticker(message.content)\r\n\t\t\t\t\t\t\tconst sticker: TL.TLFile = messageSticker.sticker.thumbnail.photo\r\n\t\t\t\t\t\t\tconst senderName = state.users[message.senderUserId] && state.users[message.senderUserId].firstName || 'Someone'\r\n\r\n\t\t\t\t\t\t\t//destination.push(<CenterSystemMessage key={key} text={`Has reply messageSticker ^`}/>)\r\n\t\t\t\t\t\t\treactions.push(<StickerOnMessage senderName={senderName} state={state} key={key} pos={pos++} downloadFile={downloadFile} sticker={sticker} />)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdestination.push(\r\n\t\t\t\t\t\tlastSender == state.myId?\r\n\t\t\t\t\t\t<MessageMy key={key} text={text} time={time} reactions={reactions}/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<MessageTheirs key={key} author={senderName} text={text} time={time} reactions={reactions}/>\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(`Unsupported message history type ${messageState.content['@type']}`, messageState.content)\r\n\t\t\t\t\tdestination.push(<CenterSystemMessage key={key} text={`Unsupported message type ${messageState.content['@type']}`}/>)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (destination != messages && destination.length > 0) mergeDestination()\r\n\t}\r\n\r\n\t//const scrollToBottomInstant = () => {\r\n\t//\tconst current = messagesEndRef.current\r\n\t//\t//alert('scrollToBottomInstant ' + current)\r\n\t//\tif (current) (current as any).scrollTop = (current as any).offsetHeight\r\n\t//}\r\n\r\n\t//useEffect(scrollToBottomInstant, [state.currentChatId]);\r\n\tconst onMouseDown = (e: any) => {\r\n\t\tsetLastPosition(e.pageY)\r\n\t\tsetDragging(true)\r\n\t\te.stopPropagation()\r\n\t}\r\n\r\n\t//while (messages.length > 15) messages.shift()\r\n\tconst onMouseClick = (e: any) => {\r\n\t}\r\n\r\n\tconst onWheel = (e: any) => {\r\n\t\t//const positionFixed = Math.min(sliderMaxY - sliderHeight, position)\r\n\t\t//setPosition(Math.min(Math.max(0, positionFixed + e.deltaY * 0.5), sliderMaxY - sliderHeight))\r\n\r\n\t\t// e.deltaY is -100 ... 100\r\n\t\tconst progressNew = progress + e.deltaY * 0.01 * 0.085\r\n\t\tconst progressClamp = Math.max(Math.min(1.0, progressNew), 0.0)\r\n\t\tsetProgress(progressClamp)\r\n\r\n\t\tconst sliderMaxY = chatListScrollBar.current != null? (chatListScrollBar.current as any).offsetHeight : 0\r\n\t\tconst sliderY = (sliderMaxY - sliderHeight) * progressClamp\r\n\t\tsetPosition(sliderY)\r\n\t\tsetLastPosition(sliderY)\r\n\t}\r\n\r\n\t//const _progress = Math.min(sliderY / (sliderMaxY - sliderHeight), 1.0)\r\n\tconst _progress = progress\r\n\tconst paneH = chatListScrollPane.current != null? (chatListScrollPane.current as any).offsetHeight : 0\r\n\tconst paneY = -Math.round(_progress * (paneH - sliderMaxY))\r\n\t//window.document.title = 'paneH=' + paneH + ' _progress=' + (_progress * 100) + '% sliderMaxY=' + sliderMaxY\r\n\r\n\t// TODO use return (<>) everywhere\r\n\t//<div ref={messagesEndRef} />\r\n\treturn <div className=\"history\" key={state.currentChatId}>\r\n\t\t<div className=\"historyView\" onWheel={onWheel} key={state.currentChatId} ref={chatListScrollPane} style={{top: paneY + 'px'}}>\r\n\t\t\t{messages}\r\n\t\t</div>\r\n\t\t<div className=\"chatListScrollBar\" onWheel={onWheel} onMouseDown={onMouseClick} ref={chatListScrollBar}></div>\r\n\t\t<div className=\"chatListScrollBarSlider\" onWheel={onWheel} onMouseDown={onMouseDown} style={{top: sliderY + 3 + 'px'}}></div>\r\n\t</div>\r\n//\tlet avatar = \"blow.jpg\"\r\n//\tlet key = 0\r\n//\treturn <div className=\"history\"><div className=\"historyView\">\r\n//\t\t<CenterSystemMessage key={key++} text=\"9 октября 2019\"/>\r\n//\t\t<CenterSystemMessage key={key++} text=\"M'aiq создал(а) группу «Greentea español»\"/>\r\n//\t\t<CenterSystemMessage key={key++} text=\"M'aiq изменил(а) фотографию группы\"/>\r\n//\t\t<CenterSystemMessageGroupPic key={key++} src=\"group.jpg\"/>\r\n//\t\t<CenterSystemMessage key={key++} text=\"Victor Mare Nostrum вступил(а) в группу по ссылке-приглашению\"/>\r\n//\t\t<StickerMy key={key++} src=\"sticker.webp\"/>\r\n//\r\n//\t\t<MessageSameSender>\r\n//\t\t\t<MessageMy key={key++} text=\"l;l;\" time=\"6:19 AM\"/>\r\n//\t\t\t<MessageMy key={key++} text=\"ghhhg\" time=\"6:21 AM\"/>\r\n//\t\t\t<MessageMy key={key++} text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<MessageMy key={key++} text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<MessageMy key={key++} text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<MessageMy key={key++} text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<MessageMy key={key++} text=\"HO_4c EbQ7wNmNZ82Rm mNRwHO_4cEb Q7wNmNZ82R R R R r mmNRwHO_4 cEbQ7wNmNZ82Rm mNRwHO_4cEbQ7wNmNZ 82RmmN RwHO_4cEbQ 7wNmNZ82RmmNRwHO_4c bQ7wNmNZ82Rm mN RwHO_4cEbQ7wNmNZ82R mmNRwHO_4cEbQ7wNmNZ8 2RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t</MessageSameSender>\r\n//\r\n//\t\t<MessageSameSenderTheirs>\r\n//\t\t\t<MessageTheirs key={key++} author=\"Victor Mare Nostrum\" text=\"l;l;\" time=\"6:19 AM\"/>\r\n//\t\t\t<img className=\"messageAvatar\" src={avatar} />\r\n//\t\t</MessageSameSenderTheirs>\r\n//\t\t<MessageSameSenderTheirs>\r\n//\t\t\t<MessageTheirs key={key++} author=\"Victor Mare Nostrum\" text=\"You're welcome!\" time=\"9:19 AM\"/>\r\n//\t\t\t<img className=\"messageAvatar\" src={avatar} />\r\n//\t\t</MessageSameSenderTheirs>\r\n//\t\t<MessageSameSenderTheirs>\r\n//\t\t\t<MessageTheirs key={key++} author=\"expwez\" text=\"ghhhg\" time=\"6:21 AM\"/>\r\n//\t\t\t<MessageTheirs key={key++} author=\"expwez\" avatar=\"blow.jpg\" text=\"ghhhg\" time=\"6:21 AM\"/>\r\n//\t\t\t<MessageTheirs key={key++} text=\"ghhhg\" views={160} time=\"6:21 AM\"/>\r\n//\t\t\t<MessageTheirs key={key++} text=\"ghhhg\" time=\"6:21 AM\"/>\r\n//\t\t\t<MessageTheirs key={key++} author=\"expwez\" text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<MessageTheirs key={key++} author=\"expwez\" text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<img className=\"messageAvatar\" src={avatar} />\r\n//\t\t</MessageSameSenderTheirs>\r\n//\t\t<MessageSameSenderTheirs>\r\n//\t\t\t<MessageTheirs key={key++} author=\"Victor Mare Nostrum\" text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t</MessageSameSenderTheirs>\r\n//\t\t<MessageSameSenderTheirs>\r\n//\t\t\t<MessageTheirs key={key++} author=\"expwez\" text=\"https___t.me_joinchat/HO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRwHO_4cEbQ7wNmNZ82RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<MessageTheirs key={key++} author=\"expwez\" text=\"HO_4c EbQ7wNmNZ82Rm mNRwHO_4cEb Q7wNmNZ82R R R R r mmNRwHO_4 cEbQ7wNmNZ82Rm mNRwHO_4cEbQ7wNmNZ 82RmmN RwHO_4cEbQ 7wNmNZ82RmmNRwHO_4c bQ7wNmNZ82Rm mN RwHO_4cEbQ7wNmNZ82R mmNRwHO_4cEbQ7wNmNZ8 2RmmNRw\" time=\"12:30 AM\"/>\r\n//\t\t\t<img className=\"messageAvatar\" src={avatar} />\r\n//\t\t</MessageSameSenderTheirs>\r\n//\r\n//\r\n//\t\t<div className=\"thinVerticalLine\"/>\r\n//\t\t<div className=\"thinTopLine\"/>\r\n//\t\t<div className=\"thinBottomLine\"/>\r\n//\t</div>\r\n//\t</div>\r\n};\r\n\r\n//function DownloadsManager({state}:{state: State}) {\r\n//\t//console.warn(Object.keys(state.files))\r\n//\treturn null\r\n//}\r\n\r\nconst CurrentChatPanel = ({state, saveChatHistory, saveFileUrl, downloadFile}:{state: State, saveChatHistory: SaveChatHistory, saveFileUrl: SaveFileUrl, downloadFile: any}) => {\r\n\tconst chatSelected = state.chats[state.currentChatId] && state.chatIds.includes(state.currentChatId)\r\n\t\t\t//<div className=\"centerBackground\" style={chatSelected? {} : {filter: 'blur(30px)'}}></div>\r\n\t\t//<DownloadsManager state={state}/>\r\n\treturn <>\r\n\t\t<div className=\"blow center\">\r\n\t\t{\r\n\t\t\t// TODO handle status . left the group\r\n\t\t\tchatSelected?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Top state={state}/>\r\n\t\t\t\t\t<History state={state} saveChatHistory={saveChatHistory} {...{downloadFile}} saveFileUrl={saveFileUrl}/>\r\n\t\t\t\t\t<Input state={state}/>\r\n\t\t\t\t</>\r\n\t\t\t:\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"pleaseSelectChat \"><div>Please select a chat to start messaging</div></div>\r\n\t\t\t\t\t<div className=\"pleaseSelectChat \"><a href=\"https://www.patreon.com/PeyTy\">Made for you by PeyTy</a></div>\r\n\t\t\t\t</>\r\n\t\t}\r\n\t\t</div>\r\n\t</>\r\n}\r\n\r\ntype SaveChatHistory = (id: number, messages: ReadonlyArray<TL.TLMessage>) => void\r\ntype SaveFileUrl = (id: number, url: string) => void\r\n\r\nconst mapStateToProps = (state: State, ownProps: any) => ({ state })\r\n\r\nfunction saveFileUrl(id: number, url: string) {\r\n\treturn async (dispatch:Dispatch, getState: () => State) => {\r\n\t\tconsole.warn('SAVE_FILE_URL from thunk', id, url)\r\n\t\tdispatch({ type: 'SAVE_FILE_URL', payload: { id, url } })\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n\treturn {\r\n\t\tsaveChatHistory: (id: number, messages: ReadonlyArray<TL.TLMessage>) => {\r\n\t\t\treturn dispatch({ type: 'SAVE_CHAT_HISTORY', payload: { chat_id: id, messages } })\r\n\t\t},\r\n\t\tsaveFileUrl: (id: number, url: string) => {\r\n\t\t\treturn dispatch(saveFileUrl(id, url) as any)\r\n\t\t\t//return dispatch({ type: 'SAVE_FILE_URL', payload: { id, url } })\r\n\t\t},\r\n\t\tdownloadFile: (id: number) => {\r\n\t\t\t//console.warn('SAVE_FILE_URL from thunk', id, url)\r\n\t\t\treturn dispatch(downloadFile(id) as any)\r\n\t\t\t//return dispatch({ type: 'SAVE_FILE_URL', payload: { id, url } })\r\n\t\t},\r\n\t}\r\n}\r\n\r\nconst CurrentChatPanelConnected = connect(mapStateToProps, mapDispatchToProps)(CurrentChatPanel)\r\n\r\nexport { CurrentChatPanelConnected as CurrentChatPanel }\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from 'react'\r\n\r\nexport function Footer() {\r\n\treturn <> </> // TODO Loading, Proxy, etc\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from 'react'\r\n\r\nexport function Header({showSidePanel}:{showSidePanel: (event: unknown) => void}) {\r\n\treturn <div className=\"header\">\r\n\t\t<div className=\"burger\" onClick={showSidePanel}>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t\t<div className=\"search\" title=\"Not yet implemented\"><span>Search</span></div>\r\n\t</div> // TODO Search, etc\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from 'react'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { State } from '../../redux/store'\r\nimport { formatTime } from '../../utils/Time'\r\nimport { nameToInitials } from '../../utils/UserInfo'\r\n\r\nfunction messageContentToPreview(tl: TL.TLMessageContent): {textPreview:string, systemPreview?:string} {\r\n\tswitch (tl['@type']) {\r\n\t\tcase \"messageText\":\r\n\t\t\treturn {\r\n\t\t\t\ttextPreview: TL.messageText(tl).text.text,\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"messagePhoto\":\r\n\t\t\tconst caption = TL.messagePhoto(tl).caption.text\r\n\t\t\treturn {textPreview:caption, systemPreview: caption == ''? \"Photo\" : \"Photo, \"}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"messageChatJoinByLink\":\r\n\t\t\t// TODO should not have \"Sender:\"\r\n\t\t\treturn {textPreview:'', systemPreview: \"joined the group via invite link\"}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"messageSticker\":\r\n\t\t\tconst messageSticker = TL.messageSticker(tl)\r\n\t\t\treturn {textPreview: messageSticker.sticker.emoji, systemPreview: \"Sticker \"}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\t//console.warn(`Unsupported message type ${tl['@type']}`, tl)\r\n\t\t\treturn {textPreview:`Unsupported message type ${tl['@type']}`}\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport function ChatListElement({state, chatId, selectChat, downloadFile}:{state: State, chatId: number, selectChat: (id: number) => void, downloadFile: Function}) {\r\n\t//const [loadingAva, setLoadingAva] = useState(false)\r\n\t//const [srcAva, setSrcAva] = useState('blur.jpg')\r\n\r\n\r\n\r\n\t// {name, date, text, unread, who, current}\r\n\tconst current = state.currentChatId == chatId //false\r\n\t//const chat = state.chats.find((chat, chats) => chat.id == chatId)\r\n\tconst chat = state.chats[chatId]\r\n\r\n\t// TODO 'SM.png' to constant somewhere?\r\n\tconst srcAva: string | null = (chatId == state.myId && 'SM.png') || (chat && chat.photo && state.fileURL[chat.photo.small.id])\r\n\r\n\tif (\r\n\t\tchat &&\r\n\t\t// TODO if(let TL.chatTypeSupergroup(chat.type)) i.e. func does @type check or ret null\r\n\t\tchat.type['@type'] == 'chatTypeSupergroup' &&\r\n\t\tstate.supergroups[TL.chatTypeSupergroup(chat.type).supergroup_id] &&\r\n\t\tstate.supergroups[TL.chatTypeSupergroup(chat.type).supergroup_id].chatMemberStatus['@type'] == 'chatMemberStatusLeft'\r\n\t) return null\r\n\r\n\tconst message = (state.messages[chat.id] ?? {})[chat.lastMessage] ?? null\r\n\r\n\t// Ignore inactive chats\r\n\t// TODO they may have drafts!\r\n\tif (message == null) return null\r\n\r\n\tlet name = chat? (state.myId == chat.id? 'Saved Messages' : chat.title) : ''\r\n\r\n\tif (\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].type['@type'] == 'userTypeDeleted'\r\n\t) name = 'Deleted Account'\r\n\r\n\tconst unread = chat? chat.unreadCount : 0\r\n\tconst date = message? formatTime(message.date)  : ''\r\n\tconst dateHint = message? new Date(message.date * 1000).toLocaleDateString() : ''\r\n\r\n\tconst preview = message? messageContentToPreview(message.content) : null\r\n\r\n\t// TODO hexa switch (chat, message, user) case null, null, null:\r\n\r\n\tconst text = preview? preview.textPreview : ''\r\n\tconst system = preview? preview.systemPreview : null\r\n\r\n\tlet who = ''\r\n\r\n\tif (chat && message) {\r\n\t\t// Works for any chat type\r\n\t\tif (state.myId == message.senderUserId) who = 'You: '\r\n\t\telse\r\n\t\tif (chat.type['@type'] == 'chatTypePrivate') {\r\n\t\t\t// Just empty\r\n\t\t\t//if (TL.chatTypePrivate(chat.type).user_id == message.senderUserId)\r\n\t\t}\r\n\t\telse\r\n\t\tif (chat.type['@type'] == 'chatTypeSupergroup' && TL.chatTypeSupergroup(chat.type).is_channel == false) {\r\n\t\t\tconst sender = state.users[message.senderUserId]\r\n\t\t\tif (sender) who = sender.firstName + ': '\r\n\t\t\tif (sender && sender.type['@type'] == 'userTypeDeleted') who = 'Deleted: '\r\n\t\t\t// If senderUserId == 0 then it's a channel\r\n\t\t\t// If sender == null then it's service messages\r\n\t\t\t//else console.warn('No sender for supergroup', message.senderUserId, name, state.users)\r\n\t\t}\r\n\t}\r\n\r\n\tconst pinned = chat && chat.isPinned\r\n\tconst verified = (\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].verified\r\n\t)\r\n\tconst channel = (chat && chat.type['@type'] == 'chatTypeSupergroup' && TL.chatTypeSupergroup(chat.type).is_channel == true)\r\n\tconst supergroup = (chat && chat.type['@type'] == 'chatTypeSupergroup' && channel == false)\r\n\tconst bot = (\r\n\t\tchat &&\r\n\t\tchat.type['@type'] == 'chatTypePrivate' &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id] &&\r\n\t\tstate.users[TL.chatTypePrivate(chat.type).user_id].type['@type'] == 'userTypeBot'\r\n\t)\r\n\r\n//\tconst who = (() => {\r\n//\t\t//message && (state.myId == message.senderUserId)? 'You:' : '?:'\r\n//\t\tif (message) {\r\n//\t\t\tif (state.myId == message.senderUserId) return 'You: '\r\n//\r\n//\t\t\t//if (state.users[])\r\n//\r\n//\t\t} else return ''\r\n//\t})()\r\n\r\n\t//const preview = message?\r\n\t//const text = message? message.textPreview : ''\r\n\t//const who = message? message.systemPreview : null\r\n\t//const system: {textPreview:string, systemPreview?:string} = message? 'null' : null\r\n\r\n\tconst active = current? \"chatListElement chatListElement__active\" : \"chatListElement\"\r\n\r\n\tif (srcAva == null && chat && chat.photo) downloadFile(chat.photo.small.id)\r\n\r\n/*\r\n\tif (\r\n\t\tchat &&\r\n\t\tchat.photo &&\r\n\t\tstate.files[chat.photo.small.id] &&\r\n\t\tstate.files[chat.photo.small.id].local.can_be_downloaded == true &&\r\n\t\tstate.files[chat.photo.small.id].local.is_downloading_completed == false &&\r\n\t\tstate.files[chat.photo.small.id].local.is_downloading_active == false\r\n\t\t//state.files[chat.photo.small.id] == null &&\r\n\t\t//loadingAva == false\r\n\t) {\r\n\t\t//send(TL.downloadFile({\r\n\t\t//    '@type': 'downloadFile',\r\n\t\t//    file_id: chat.photo.small.id,\r\n\t\t//    priority: 30\r\n\t\t//})\r\n\t\ttg.downloadFile(chat.photo.small.id, 30, 0, 0, false).then(file => console.warn('file', file))\r\n\t\t//setLoadingAva(true)\r\n\t}\r\n\r\n//\tif (\r\n//\t\tchat &&\r\n//\t\tchat.photo &&\r\n//\t\tstate.files[chat.photo.small.id] &&\r\n//\t\tstate.files[chat.photo.small.id].local.is_downloading_completed == false &&\r\n//\t\tloadingAva == false\r\n//\t) {\r\n//\t\t//send(TL.downloadFile({\r\n//        //    '@type': 'downloadFile',\r\n//        //    file_id: chat.photo.small.id,\r\n//        //    priority: 30\r\n//        //})\r\n//        tg.downloadFile(chat.photo.small.id, 30, 0, 0, false).then(file => console.warn('file', file))\r\n//\t\tsetLoadingAva(true)\r\n//\t}\r\n//\r\n\t//let avatar = \"blur.jpg\"\r\n\r\n\tif (\r\n\t\tchat &&\r\n\t\tchat.photo &&\r\n\t\t//loadingAva == true &&\r\n\t\tsrcAva == 'blur.jpg' &&\r\n\t\tstate.files[chat.photo.small.id] &&\r\n\t\tstate.files[chat.photo.small.id].local.is_downloading_completed == true\r\n\t) {\r\n\t\ttg.readFilePart(chat.photo.small.id, 0, 0).then(\r\n\t\t\tfilePart => {\r\n\t\t\t\t//console.warn('filePart', filePart)\r\n\t\t\t\t//let mime = 'image/jpeg'\r\n\t\t\t\t//let blob = new Blob([filePart.data], { type: mime || 'application/octet-stream' })\r\n\t\t\t\tlet blobURL = window.URL.createObjectURL(filePart.data)\r\n\t\t\t\tsetSrcAva(blobURL)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n*/\r\n\r\n\tconst draft = chat && chat.draft\r\n\tlet draftText = ''\r\n\t// TODO handle only-reply no-text drafts as \"(reply)\"\r\n\r\n\tif (chat && chat.draft) switch (chat.draft['@type']) {\r\n\t\tcase 'inputMessageText': {\r\n\t\t\tswitch (TL.inputMessageText(chat.draft).text['@type']) {\r\n\t\t\t\tcase 'formattedText': {\r\n\t\t\t\t\tdraftText = TL.formattedText(TL.inputMessageText(chat.draft).text).text\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('Unknown draft type ' + TL.inputMessageText(chat.draft).text['@type'])\r\n\t\t\t\t\tdraftText = TL.inputMessageText(chat.draft).text['@type']\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tconsole.warn('Unknown draft type ' + chat.draft['@type'])\r\n\t\t\tdraftText = chat.draft['@type']\r\n\t}\r\n\r\n\t//const draftText: string | null = chat.draft && chat.draft['@type'] == \"inputMessageText\" && TL.inputMessageText(chat.draft).text['@type'] == 'formattedText' && TL.formattedText(inputMessageText(chat.draft).text).text\r\n\r\n\treturn <div className={active} onClick={e => selectChat(chatId)}>\r\n\t\t<div className=\"wrap\">\r\n\r\n\t\t{ srcAva && <img title={chat.order} className=\"avatar\" src={srcAva || 'blur.jpg'}/> || <div className=\"avatarEmpty\">{\r\n\t\t\tnameToInitials(name)\r\n\t\t}</div> }\r\n\t\t<div className=\"namedatetext\">\r\n\t\t\t<div className=\"namedate\">\r\n\t\t\t\t<span className=\"bold name\">\r\n\t\t\t\t\t{channel && <img className=\"channel\" title=\"This is a news channel or blog\" src=\"icons/dialogs_channel.png\"/>}\r\n\t\t\t\t\t{supergroup && <img className=\"supergroup\" title=\"This is a group chat\" src=\"icons/dialogs_chat.png\"/>}\r\n\t\t\t\t\t{bot && <img className=\"bot\" title=\"This is a bot, not a human\" src=\"icons/dialogs_bot.png\"/>}\r\n\t\t\t\t\t<div title={name}>{name}</div>\r\n\t\t\t\t\t{verified && <img className=\"verified\" title=\"Account verified by Telegram team\" src=\"icons/dialogs_verified_star.png\"/>}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"light date\" title={dateHint}>{date}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"textcounter\">\r\n\t\t\t{\r\n\t\t\t\tdraft == null?\r\n\t\t\t\t<span className=\"light text\">{who && <div className=\"who\">{who}</div>}{system && <div className=\"who\">{system}</div>}<div title={text}>{text}</div></span>\r\n\t\t\t\t:\r\n\t\t\t\t<span className=\"light text\"><div className=\"draft\">{'Draft:'}</div><div title={draftText}>{draftText}</div></span>\r\n\t\t\t}\r\n\t\t\t\t{unread == 0 && pinned && <span className=\"light pinned\" title={\"You pinned this chat for quick access\\n\\nOnly 5 chats may be pinned\"}><img src=\"icons/dialogs_pinned.png\"/></span>}\r\n\t\t\t\t{unread > 0 && <span className=\"light unread\" title=\"You have unread messages in this chat\"><div>{unread}</div></span>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Shows XX:XX or XX.XX.XX\r\nexport function formatTime(dateTime: number): string {\r\n\tconst now = new Date()\r\n\tconst day = (60 * 60 * 24 * 1000)\r\n\tconst week = day * 7\r\n\tconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\n\tconst date = new Date(dateTime * 1000)\r\n\tconst diff = now.getTime() - date.getTime()\r\n\r\n\tif (diff >= week) {\r\n\t\treturn date.toLocaleDateString(navigator.language, {\r\n\t\t\tdateStyle: 'short'\r\n\t\t} as any)\r\n\t}\r\n\r\n\tif (diff >= day) {\r\n\t\treturn days[date.getDay()]\r\n\t}\r\n\r\n\treturn date.toLocaleTimeString(navigator.language, {\r\n\t\thour: '2-digit',\r\n\t\tminute: '2-digit'\r\n\t}).replace(/^0/, \"\") /* remove leading zero */\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { ChatListElement } from './ChatListElement'\r\nimport { State } from '../../redux/store'\r\n\r\nexport function ChatList({state, selectChat, downloadFile}:{state: State, selectChat: (id: number) => void, downloadFile: Function}) {\r\n\tconst [dragging, setDragging] = useState(false)\r\n\tconst [position, setPosition] = useState({left: 0, top: 0})\r\n\tconst [lastPosition, setLastPosition] = useState({left: 0, top: 0})\r\n\r\n\tconst chatListScrollBar = useRef(null)\r\n\tconst chatListScrollPane = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst onMouseMove = (e: any) => {\r\n\t\t\tsetPosition({\r\n\t\t\t\tleft: position.left + e.pageX - lastPosition.left,\r\n\t\t\t\ttop: Math.max(0, position.top + e.pageY - lastPosition.top)\r\n\t\t\t})\r\n\t\t\tsetLastPosition({left: e.pageX, top: e.pageY})\r\n\t\t}\r\n\r\n\t\tconst onMouseUp = () => {\r\n\t\t\tsetDragging(false)\r\n\t\t}\r\n\r\n\t\tif (dragging) {\r\n\t\t\tdocument.addEventListener('mousemove', onMouseMove)\r\n\t\t\tdocument.addEventListener('mouseup', onMouseUp)\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('mousemove', onMouseMove)\r\n\t\t\tdocument.removeEventListener('mouseup', onMouseUp)\r\n\t\t}\r\n\t}, [dragging])\r\n\r\n\tconst onMouseDown = (e: any) => {\r\n\t\tsetLastPosition({left: e.pageX, top: e.pageY})\r\n\t\tsetDragging(true)\r\n\t}\r\n\r\n\tconst sliderMaxY = chatListScrollBar.current != null? (chatListScrollBar.current as any).offsetHeight : 0\r\n\tconst sliderHeight = 100 // TODO\r\n\tconst sliderY = Math.min(Math.max(position.top, 0), sliderMaxY - sliderHeight)\r\n\tconst progress = Math.min(sliderY / (sliderMaxY - sliderHeight), 1.0)\r\n\tconst paneH = chatListScrollPane.current != null? (chatListScrollPane.current as any).offsetHeight : 0\r\n\tconst paneY = -Math.round(progress * (paneH - sliderMaxY))\r\n\t//window.document.title = '' + progress + '%'\r\n\t// TODO use \"progress%\" state instead\r\n\r\n\t// TODO\r\n\tconst onMouseClick = (e: unknown) => {\r\n\t\t//setPosition({\r\n\t\t//\tleft: position.left,\r\n\t\t//\ttop: e.offsetY\r\n\t\t//})\r\n\t}\r\n\r\n\tconst onWheel = (e: any) => {\r\n\t\t//progress = Math.min(sliderY / (sliderMaxY - sliderHeight), 1.0)\r\n\t\t//progress = Math.min(sliderY / (sliderMaxY - sliderHeight), 1.0)\r\n\t\tsetPosition({...position, top: Math.min(Math.max(0, position.top + e.deltaY * 0.5), sliderMaxY - sliderHeight)})\r\n\t}\r\n\r\n\tconst sortedChats: number[] = [...state.chatIds].sort((a: number, b: number): number => {\r\n\t\tconst ordera: BigInt = BigInt(state.chats[a].order)\r\n\t\tconst orderb: BigInt = BigInt(state.chats[b].order)\r\n\t\t//return Math.random() - 0.5\r\n\t\tif (ordera > orderb) return -1\r\n\t\tif (ordera < orderb) return +1\r\n\t\treturn 0\r\n\t})\r\n\r\n\treturn <div className=\"chats\" onWheel={onWheel}>\r\n\t\t<div className=\"chatListScrollPane\" ref={chatListScrollPane} style={{top: paneY + 'px'}}>\r\n\t\t{\r\n\t\tsortedChats.map(chatId => <ChatListElement downloadFile={downloadFile} key={chatId} chatId={chatId} state={state} selectChat={selectChat}/>)\r\n\t\t}\r\n\t\t</div>\r\n\t\t<div className=\"chatListScrollBar\" onMouseDown={onMouseClick} ref={chatListScrollBar}></div>\r\n\t\t<div className=\"chatListScrollBarSlider\" onMouseDown={onMouseDown} style={{top: sliderY + 3+ 'px'}}></div>\r\n\t</div>\r\n\r\n//\tconst demo = [\r\n//\t\t{ name: 'Saved Messages', date: 'Tue', text: 'Hellooooooooooooooooooooo', unread: 12000, current: true },\r\n//\t\t{ name: 'Saved Messages', date: 'Tue', text: 'Hellooooooooooooooooooooo', unread: 0, who: 'expwez' },\r\n//\t\t{ name: 'Hello Kitty', date: '1:43 AM', text: 'Heil miledy', unread: 95, who: 'expwez' },\r\n//\t\t{ name: 'Hello Kitty', date: '1:43 AM', text: 'Heil miledy y y y y y y y y y', unread: 95, who: 'expwez' },\r\n//\t\t{ name: 'TON isAFail!!!!!!!!!!!!!!', date: '11.04.20', text: 'Ha-ha true' },\r\n//\t]\r\n//\r\n//\tlet key = 0\r\n//\treturn <div className=\"chats\">{demo.map(props => <ChatElement key={key++} {...props}/>)}</div>\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { State } from '../../redux/store'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { tg } from '../../tdlib/tdlib'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { downloadFile as $downloadFile } from '../../tdlib/loader'\r\nimport { Footer } from './Footer'\r\nimport { Header } from './Header'\r\nimport { ChatList } from './ChatList'\r\nimport './ChatsPanel.scss'\r\n\r\n//function ChatElement({name, date, text, unread, who, current}: any) {\r\n//\tconst active = current? \"chatListElement chatListElement__active\" : \"chatListElement\"\r\n//\treturn <div className={active}>\r\n//\t\t<div className=\"wrap\">\r\n//\r\n//\t\t<img className=\"avatar\" src=\"blur.jpg\"/>\r\n//\t\t<div className=\"namedatetext\">\r\n//\t\t\t<div className=\"namedate\">\r\n//\t\t\t\t<span className=\"bold name\"><div>{name}</div></span>\r\n//\t\t\t\t<span className=\"light date\">{date}</span>\r\n//\t\t\t</div>\r\n//\t\t\t<div className=\"textcounter\">\r\n//\t\t\t\t<span className=\"light text\">{who && <div className=\"who\">{who}:</div>}<div>{text}</div></span>\r\n//\t\t\t\t{unread && <span className=\"light unread\"><div>{unread}</div></span>}\r\n//\t\t\t</div>\r\n//\t\t</div>\r\n//\t</div>\r\n//\t</div>\r\n//}\r\n\r\nconst ChatsPanel = ({state, selectChat, downloadFile, showSidePanel}:{state: State, showSidePanel: any, selectChat: (id: number) => void, downloadFile: Function}) => (\r\n\t<div className=\"chatList\">\r\n\t\t<Header showSidePanel={showSidePanel}/>\r\n\t\t<ChatList state={state} selectChat={selectChat} downloadFile={downloadFile}/>\r\n\t\t<Footer/>\r\n\t</div>\r\n)\r\n\r\n//export {ChatsPanel}\r\n\r\nconst mapStateToProps = (state: State, ownProps: any) => ({ state })\r\n\r\n//const mapDispatchToProps = { }\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n\treturn {\r\n\t\t// dispatching plain actions\r\n\t\tselectChat: (id: number) => {\r\n\t\t\ttg.openChat(id)\r\n\t\t\treturn dispatch({ type: 'SELECT_CHAT', payload: id })\r\n\t\t},\r\n\t\tshowSidePanel: (id: number) => {\r\n\t\t\treturn dispatch({ type: 'SET_SIDEBAR_VISIBILITY', payload: { showSideBar: true } })\r\n\t\t},\r\n\t\tdownloadFile: (id: number) => {\r\n\t\t\t//console.warn('SAVE_FILE_URL from thunk', id, url)\r\n\t\t\treturn dispatch($downloadFile(id) as any)\r\n\t\t\t//return dispatch({ type: 'SAVE_FILE_URL', payload: { id, url } })\r\n\t\t},\r\n\t\t//increment: () => dispatch({ type: 'INCREMENT' }),\r\n\t\t//decrement: () => dispatch({ type: 'DECREMENT' }),\r\n\t\t//reset: () => dispatch({ type: 'RESET' })\r\n\t}\r\n}\r\n\r\nconst ChatsPanelConnected = connect(mapStateToProps, mapDispatchToProps)(ChatsPanel)\r\n\r\nexport { ChatsPanelConnected as ChatsPanel }\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from 'react'\r\nimport { State } from '../../redux/store'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { tg } from '../../tdlib/tdlib'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch, AnyAction } from 'redux'\r\nimport './SidePanel.scss'\r\n\r\n//function picOrInitials() {\r\n//\treturn <>\r\n//\t\tTODO\r\n//\t</>\r\n//}\r\n\r\nconst SidePanel = ({state, hideSidePanel, logOut}:{state: State, hideSidePanel: (e: unknown) => void, logOut: Function}) => {\r\n\tconst user = state.users[state.myId]\r\n\tconst name = user? (user.firstName + ' ' + user.lastName).trim() : 'Hexagram'\r\n\tconst phone = '+' + (user? user.phone : '')\r\n\r\n\tconst askLogout = () => {\r\n\t\tif (window.confirm(\"Log out?\") == true) {\r\n\t\t\tlogOut()\r\n\t\t}\r\n\t}\r\n\r\n\treturn <div className=\"sidePanel\">\r\n\t\t<div className=\"sideBar\">\r\n\t\t\t<div className=\"sideInfo\">\r\n\t\t\t\t<div className=\"sideInfoName\">{name}</div>\r\n\t\t\t\t<div className=\"sideInfoName\">{phone}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"button\" onClick={_ => askLogout()}><span>Log out</span></div>\r\n\t\t\t<div className=\"button patreon\" onClick={_ => window.open('https://www.patreon.com/PeyTy', '_blank')}><span>Donate on Patreon</span></div>\r\n\t\t\t<div className=\"button github\" onClick={_ => window.open('https://github.com/hexalang/hexagram', '_blank')}><span>Source code on GitHub</span></div>\r\n\t\t</div>\r\n\t\t<div className=\"fade\" onClick={hideSidePanel}>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst mapStateToProps = (state: State, ownProps: any) => ({ state })\r\n\r\nfunction logOut() {\r\n\treturn async (dispatch:Dispatch<AnyAction>, getState: () => State): Promise<void> => {\r\n\t\tawait tg.logOut()\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.location.reload()\r\n\t\t}, 1000);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n\treturn {\r\n\t\tlogOut: () => {\r\n\t\t\treturn dispatch(logOut() as any as AnyAction)\r\n\t\t},\r\n\t\thideSidePanel: (e: unknown) => {\r\n\t\t\treturn dispatch({ type: 'SET_SIDEBAR_VISIBILITY', payload: { showSideBar: false } })\r\n\t\t},\r\n\t}\r\n}\r\n\r\nconst SidePanelConnected = connect(mapStateToProps, mapDispatchToProps)(SidePanel)\r\n\r\nexport { SidePanelConnected as SidePanel }\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport * as TL from '../tdlib/tdapi'\r\nimport { Chat, User, Message, Supergroup } from './types'\r\nimport { chatToState, messageToState, supergroupToState, userToState } from './converters'\r\n\r\n//import reducer from './reducers'\r\nexport enum LoginState {\r\n  WaitTDLib,\r\n  WaitPhoneNumber,\r\n  WaitCode,\r\n  WaitRegistration,\r\n  WaitPassword,\r\n  Ready\r\n}\r\n\r\nexport interface State {\r\n\t// GUI\r\n\treadonly loaded: boolean\r\n\treadonly showSideBar: boolean\r\n\treadonly loginState: LoginState\r\n\treadonly myId: number\r\n\treadonly currentChatId: number\r\n\r\n\t// Opened dialogs\r\n\treadonly chatIds: ReadonlyArray<number>\r\n\treadonly chats: { readonly [chat_id: number]: Chat }\r\n\treadonly users: { readonly [user_id: number]: User }\r\n\treadonly messages: {\r\n\t\treadonly [chat_id: number]: { readonly [message_id: number]: Message }\r\n\t}\r\n\treadonly supergroups: { readonly [supergroup_id: number]: Supergroup }\r\n\treadonly history: { readonly [chat_id: number]: number[] }\r\n\r\n\t// Files\r\n\treadonly files: { readonly [file_id: number]: TL.TLFile }\r\n\treadonly fileURL: { readonly [file_id: number]: string }\r\n\t// If true, then downloadFile & readFilePart should NOT be repeated\r\n\treadonly fileLoads: { readonly [file_id: number]: number }\r\n}\r\n\r\n//type TelegramStates = const { }\r\n\r\nconst initialState: State = {\r\n\tloaded: false,\r\n\tloginState: LoginState.WaitTDLib,\r\n\tshowSideBar: false,\r\n\tmyId: 0,\r\n\tcurrentChatId: 0,\r\n\tchatIds: [],\r\n\tchats: {},\r\n\tusers: {},\r\n\tmessages: {},\r\n\tsupergroups: {},\r\n\tfiles: {},\r\n\tfileURL: {},\r\n\tfileLoads: {},\r\n\thistory: {},\r\n}\r\n\r\n//interface DemoAction {\r\n//\treadonly type: 'DELETE_MESSAGE'\r\n//\treadonly payload: {\r\n//\t\treadonly demo: boolean\r\n//\t}\r\n//}\r\n\r\nexport interface TDLIB_UPDATE {\r\n\treadonly type: 'TDLIB_UPDATE'\r\n\treadonly payload: TL.TLObject\r\n}\r\n\r\nexport interface TDLIB_MANUAL_UPDATE {\r\n\treadonly type: 'TDLIB_MANUAL_UPDATE'\r\n\treadonly payload: TL.TLObject | null\r\n}\r\n\r\nexport interface SELECT_CHAT {\r\n\treadonly type: 'SELECT_CHAT'\r\n\treadonly payload: number\r\n}\r\n\r\nexport interface SAVE_CHAT_HISTORY {\r\n\treadonly type: 'SAVE_CHAT_HISTORY'\r\n\treadonly payload: {\r\n\t\tchat_id: number,\r\n\t\tmessages: ReadonlyArray<TL.TLMessage>\r\n\t}\r\n}\r\n\r\nexport interface SAVE_FILE_URL {\r\n\treadonly type: 'SAVE_FILE_URL'\r\n\treadonly payload: {\r\n\t\tid: number,\r\n\t\turl: string\r\n\t}\r\n}\r\n\r\nexport interface SAVE_FILE_LOADS {\r\n\treadonly type: 'SAVE_FILE_LOADS'\r\n\treadonly payload: {\r\n\t\tid: number,\r\n\t\tloads: number\r\n\t}\r\n}\r\n\r\nexport interface SET_SIDEBAR_VISIBILITY {\r\n\treadonly type: 'SET_SIDEBAR_VISIBILITY'\r\n\treadonly payload: {\r\n\t\tshowSideBar: boolean\r\n\t}\r\n}\r\n\r\ninterface INIT {\r\n\treadonly type: '@@INIT'\r\n}\r\n\r\nexport type ActionTypes =\r\n\tINIT |\r\n\tTDLIB_UPDATE |\r\n\tSELECT_CHAT |\r\n\tSAVE_CHAT_HISTORY |\r\n\tSAVE_FILE_URL |\r\n\tSAVE_FILE_LOADS |\r\n\tSET_SIDEBAR_VISIBILITY |\r\n\tTDLIB_MANUAL_UPDATE\r\n\r\n//function messageContentToPreview(tl: TL.TLMessageContent): {textPreview:string, systemPreview?:string} {\r\n//\tswitch (tl['@type']) {\r\n//\t\tcase \"messageText\":\r\n//\t\t\treturn {\r\n//\t\t\t\ttextPreview: TL.messageText(tl).text.text,\r\n//\t\t\t}\r\n//\t\t\tbreak;\r\n//\r\n//\t\tcase \"messagePhoto\":\r\n//\t\t\tconst caption = TL.messagePhoto(tl).caption.text\r\n//\t\t\treturn {textPreview:caption, systemPreview: caption == ''? \"Photo\" : \"Photo, \"}\r\n//\t\t\tbreak;\r\n//\r\n//\t\tdefault:\r\n//\t\t\treturn {textPreview:`Unsupported message type ${tl['@type']}`}\r\n//\t\t\tbreak;\r\n//\t}\r\n//}\r\n//\r\nconst reducer = (state: State = initialState, action: ActionTypes): State => {\r\n\tswitch (action.type) {\r\n\t\tcase \"TDLIB_MANUAL_UPDATE\": {\r\n\t\t\t// For nullable chatPhoto etc\r\n\t\t\tif (action.payload == null) return state\r\n\r\n\t\t\tconsole.log('Receive manual update', action.payload)\r\n\t\t\tconst update: TL.TLObject = action.payload\r\n\t\t\tswitch (update['@type']) {\r\n\r\n\t\t\t\t// Sent from main app\r\n\t\t\t\tcase \"chats\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst chats = TL.chats(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t//chatIds: chats.chat_ids\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"chatPhoto\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst chatPhoto = TL.chatPhoto(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tfiles: {\r\n\t\t\t\t\t\t\t\t...state.files,\r\n\t\t\t\t\t\t\t\t[chatPhoto.big.id]: chatPhoto.big,\r\n\t\t\t\t\t\t\t\t[chatPhoto.small.id]: chatPhoto.small\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"profilePhoto\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst profilePhoto = TL.profilePhoto(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tfiles: {\r\n\t\t\t\t\t\t\t\t...state.files,\r\n\t\t\t\t\t\t\t\t[profilePhoto.big.id]: profilePhoto.big,\r\n\t\t\t\t\t\t\t\t[profilePhoto.small.id]: profilePhoto.small\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('Unknown manual update', update)\r\n\t\t\t}\r\n\t\t}\r\n\t\tbreak;\r\n\r\n\t\tcase \"TDLIB_UPDATE\":\r\n//\t\t\t// For nullable chatPhoto etc\r\n//\t\t\tif (action.payload == null) return state\r\n\r\n\t\t\tconsole.log('Receive update', action.payload)\r\n\t\t\tconst update: TL.TLObject = action.payload\r\n\t\t\tswitch (update['@type']) {\r\n\t\t\t\tcase \"updateAuthorizationState\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateAuthorizationState = TL.updateAuthorizationState(update)\r\n\t\t\t\t\t\tswitch (updateAuthorizationState.authorization_state['@type']) {\r\n\t\t\t\t\t\t\tcase \"authorizationStateWaitPhoneNumber\":\r\n\t\t\t\t\t\t\t\treturn {...state, loginState: LoginState.WaitPhoneNumber}\r\n\t\t\t\t\t\t\tcase \"authorizationStateWaitCode\":\r\n\t\t\t\t\t\t\t\treturn {...state, loginState: LoginState.WaitCode}\r\n\t\t\t\t\t\t\tcase \"authorizationStateWaitRegistration\":\r\n\t\t\t\t\t\t\t\treturn {...state, loginState: LoginState.WaitRegistration}\r\n\t\t\t\t\t\t\tcase \"authorizationStateWaitPassword\":\r\n\t\t\t\t\t\t\t\treturn {...state, loginState: LoginState.WaitPassword}\r\n\t\t\t\t\t\t\tcase \"authorizationStateReady\":\r\n\t\t\t\t\t\t\t\treturn {...state, loginState: LoginState.Ready}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n//\t\t\t\t// Sent from main app\r\n//\t\t\t\tcase \"chats\":\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\tconst chats = TL.chats(update)\r\n//\t\t\t\t\t\treturn {\r\n//\t\t\t\t\t\t\t...state,\r\n//\t\t\t\t\t\t\t//chatIds: chats.chat_ids\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t\tbreak;\r\n//\r\n//\t\t\t\tcase \"chatPhoto\":\r\n//\t\t\t\t\t{\r\n//\t\t\t\t\t\tconst chatPhoto = TL.chatPhoto(update)\r\n//\t\t\t\t\t\treturn {\r\n//\t\t\t\t\t\t\t...state,\r\n//\t\t\t\t\t\t\tfiles: {\r\n//\t\t\t\t\t\t\t\t...state.files,\r\n//\t\t\t\t\t\t\t\t[chatPhoto.big.id]: chatPhoto.big,\r\n//\t\t\t\t\t\t\t\t[chatPhoto.small.id]: chatPhoto.small\r\n//\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateOption\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateOption = TL.updateOption(update)\r\n\t\t\t\t\t\tswitch (updateOption.name) {\r\n\t\t\t\t\t\t\tcase \"version\":\r\n\t\t\t\t\t\t\t\treturn {...state, loaded: true}\r\n\t\t\t\t\t\t\tcase \"my_id\":\r\n\t\t\t\t\t\t\t\treturn {...state, myId: TL.optionValueInteger(updateOption.value).value}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.warn('Unknown update option', update)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateNewChat\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateNewChat = TL.updateNewChat(update)\r\n\t\t\t\t\t\tconsole.warn('updateNewChat', updateNewChat.chat.title)\r\n\t\t\t\t\t\t//if (updateNewChat.chat == null) console.warn('WTF?', updateNewChat)\r\n\t\t\t\t\t\tif (state.chatIds.includes(updateNewChat.chat.id)) return state\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...reducer(state, {\r\n\t\t\t\t\t\t\t\ttype: 'TDLIB_MANUAL_UPDATE',\r\n\t\t\t\t\t\t\t\tpayload: updateNewChat.chat.photo\r\n\t\t\t\t\t\t\t} as TDLIB_MANUAL_UPDATE),\r\n\t\t\t\t\t\t\tchatIds: [...state.chatIds, updateNewChat.chat.id],\r\n\t\t\t\t\t\t\t//chats: [...state.chats, chatToState(updateNewChat.chat)]\r\n\t\t\t\t\t\t\tchats: {...state.chats, [updateNewChat.chat.id]: chatToState(updateNewChat.chat)}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateChatLastMessage\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateChatLastMessage = TL.updateChatLastMessage(update)\r\n\t\t\t\t\t\tif (updateChatLastMessage.last_message == null) {\r\n\t\t\t\t\t\t\tconsole.warn('updateChatLastMessage TODO handle empty last_message')\r\n\t\t\t\t\t\t\treturn state\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst message = messageToState(updateChatLastMessage.last_message)\r\n\t\t\t\t\t\tconst chat_id = updateChatLastMessage.chat_id\r\n\t\t\t\t\t\tlet chat = state.chats[chat_id]// ?? emptyChat(chat_id)\r\n\t\t\t\t\t\tif (chat == null) {\r\n\t\t\t\t\t\t\tconsole.warn('updateChatLastMessage for not yet loaded object')\r\n\t\t\t\t\t\t\treturn state\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if (state.chats[chat_id].lastMessage == message.id) return state\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t//messages: {...state.messages, [message.id]: message},\r\n\t\t\t\t\t\t\tmessages: {...state.messages, [chat_id]: {...state.messages[chat_id], [message.id]: message}},\r\n\t\t\t\t\t\t\tchats: {...state.chats, [chat_id]: {\r\n\t\t\t\t\t\t\t\t...chat,\r\n\t\t\t\t\t\t\t\torder: updateChatLastMessage.order,\r\n\t\t\t\t\t\t\t\tlastMessage: message.id\r\n\t\t\t\t\t\t\t}},\r\n\r\n\t\t\t\t\t\t\t//// Save message to history\r\n\t\t\t\t\t\t\t//history: {...state.history, [chat_id]:\r\n\t\t\t\t\t\t\t//\t[message.id, ...(state.history[chat_id] ?? [])]\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateChatOrder\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateChatOrder = TL.updateChatOrder(update)\r\n\t\t\t\t\t\tconst chat_id = updateChatOrder.chat_id\r\n\t\t\t\t\t\tlet chat = state.chats[chat_id]// ?? emptyChat(chat_id)\r\n\t\t\t\t\t\tif (chat == null) {\r\n\t\t\t\t\t\t\tconsole.warn('updateChatOrder for not yet loaded object')\r\n\t\t\t\t\t\t\treturn state\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tchats: {...state.chats, [chat_id]: {\r\n\t\t\t\t\t\t\t\t...chat,\r\n\t\t\t\t\t\t\t\torder: updateChatOrder.order,\r\n\t\t\t\t\t\t\t}},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateNewMessage\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateNewMessage = TL.updateNewMessage(update)\r\n\t\t\t\t\t\tconst message = messageToState(updateNewMessage.message)\r\n\t\t\t\t\t\tconst chat_id = updateNewMessage.message.chat_id\r\n\t\t\t\t\t\tlet chat = state.chats[chat_id]\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tmessages: {...state.messages, [chat_id]: {...state.messages[chat_id], [message.id]: message}},\r\n\t\t\t\t\t\t\tchats: {...state.chats, [chat_id]: {...chat, lastMessage: message.id}},\r\n\r\n\t\t\t\t\t\t\t// Save message to history\r\n\t\t\t\t\t\t\thistory: {...state.history, [chat_id]:\r\n\t\t\t\t\t\t\t\t[message.id, ...(state.history[chat_id] ?? [])]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateDeleteMessages\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateDeleteMessages = TL.updateDeleteMessages(update)\r\n\t\t\t\t\t\tif (updateDeleteMessages.is_permanent == false) return state\r\n\t\t\t\t\t\tif (updateDeleteMessages.from_cache == true) return state\r\n\r\n\t\t\t\t\t\tconst chat_id = updateDeleteMessages.chat_id\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\thistory: {...state.history, [chat_id]:\r\n\t\t\t\t\t\t\t\t(state.history[chat_id] ?? []).filter(id => updateDeleteMessages.message_ids.indexOf(id) == -1)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateChatReadInbox\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateChatReadInbox = TL.updateChatReadInbox(update)\r\n\t\t\t\t\t\tconst chat_id = updateChatReadInbox.chat_id\r\n\t\t\t\t\t\tconst chat = state.chats[chat_id]// ?? emptyChat(chat_id)\r\n\t\t\t\t\t\tif (chat == null) {\r\n\t\t\t\t\t\t\tconsole.warn('updateChatReadInbox for not yet loaded chat')\r\n\t\t\t\t\t\t\treturn state\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tchats: {...state.chats, [chat_id]: {...chat, unreadCount: updateChatReadInbox.unread_count}}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateChatDraftMessage\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// TODO consider `order`\r\n\t\t\t\t\t\tconst updateChatDraftMessage = TL.updateChatDraftMessage(update)\r\n\t\t\t\t\t\tconst chat_id = updateChatDraftMessage.chat_id\r\n\t\t\t\t\t\tconst chat = state.chats[chat_id]\r\n\t\t\t\t\t\tconst draft_message: TL.TLDraftMessage | null = updateChatDraftMessage.draft_message\r\n\r\n\t\t\t\t\t\tif (chat == null) {\r\n\t\t\t\t\t\t\tconsole.warn('updateChatDraftMessage for not yet loaded chat')\r\n\t\t\t\t\t\t\treturn state\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (draft_message == null) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t\tchats: {...state.chats, [chat_id]: {...chat, draft: null}}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tchats: {...state.chats, [chat_id]: {\r\n\t\t\t\t\t\t\t\t\t...chat,\r\n\t\t\t\t\t\t\t\t\tdraft: draft_message.input_message_text,\r\n\t\t\t\t\t\t\t\t\treplyToMessageIdDraft: draft_message.reply_to_message_id\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateChatOnlineMemberCount\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateChatOnlineMemberCount = TL.updateChatOnlineMemberCount(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tchats: {...state.chats, [updateChatOnlineMemberCount.chat_id]: {\r\n\t\t\t\t\t\t\t\t...state.chats[updateChatOnlineMemberCount.chat_id],\r\n\t\t\t\t\t\t\t\tonlineMemberCount: updateChatOnlineMemberCount.online_member_count\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateMessageContent\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateMessageContent = TL.updateMessageContent(update)\r\n\t\t\t\t\t\tconst message = state.messages[updateMessageContent.chat_id][updateMessageContent.message_id]\r\n\t\t\t\t\t\tif (message != null) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t\t//TODO messages: {...state.messages, [message.id]: {...message, content:updateMessageContent.new_content}},\r\n\t\t\t\t\t\t\t\tmessages: {...state.messages, [updateMessageContent.chat_id]: {...state.messages[updateMessageContent.chat_id], [message.id]: {...message, content:updateMessageContent.new_content}}},\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateSupergroup\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateSupergroup = TL.updateSupergroup(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tsupergroups: {...state.supergroups, [updateSupergroup.supergroup.id]: supergroupToState(updateSupergroup.supergroup)},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateFile\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateFile = TL.updateFile(update)\r\n\t\t\t\t\t\tconst file = state.files[updateFile.file.id]\r\n\t\t\t\t\t\tif (file != null) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tfile.local.is_downloading_completed == updateFile.file.local.is_downloading_completed\r\n\t\t\t\t\t\t\t\t&&\r\n\t\t\t\t\t\t\t\tfile.local.is_downloading_active == updateFile.file.local.is_downloading_active\r\n\t\t\t\t\t\t\t) return state\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tfiles: {...state.files, [updateFile.file.id]: updateFile.file}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateUser\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateUser = TL.updateUser(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...reducer(state, {\r\n\t\t\t\t\t\t\t\ttype: 'TDLIB_MANUAL_UPDATE',\r\n\t\t\t\t\t\t\t\tpayload: updateUser.user.profile_photo\r\n\t\t\t\t\t\t\t} as TDLIB_MANUAL_UPDATE),\r\n\t\t\t\t\t\t\tusers: {...state.users, [updateUser.user.id]: userToState(updateUser.user)}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"updateUserStatus\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst updateUserStatus = TL.updateUserStatus(update)\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tusers: {...state.users, [updateUserStatus.user_id]: {\r\n\t\t\t\t\t\t\t\t\t...state.users[updateUserStatus.user_id],\r\n\t\t\t\t\t\t\t\t\tstatus: updateUserStatus.status\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t// TODO updateUser updateUserFullInfo\r\n\t\t \t\t// TODO updateSupergroup\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('Unknown update', update)\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"SELECT_CHAT\":\r\n\t\t\t{\r\n\t\t\t\tconst selectChat = action as SELECT_CHAT\r\n\t\t\t\t// TODO ignore if chat not present or\r\n\t\t\t\t// we can write to people who aren't on chat list?\r\n\t\t\t\t// well, they are not selected anyway,\r\n\t\t\t\t// but viewed via history viewer\r\n\t\t\t\t// so it has to be different mechanism (like CurrentPeerType aggregate)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentChatId: selectChat.payload\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"SET_SIDEBAR_VISIBILITY\":\r\n\t\t\t{\r\n\t\t\t\tconst payload = (action as SET_SIDEBAR_VISIBILITY).payload\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tshowSideBar: payload.showSideBar\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"SAVE_FILE_URL\":\r\n\t\t\t{\r\n\t\t\t\tconst value = action as SAVE_FILE_URL\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tfileURL: {...state.fileURL, [value.payload.id]: value.payload.url}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"SAVE_FILE_LOADS\":\r\n\t\t\t{\r\n\t\t\t\tconst value = action as SAVE_FILE_LOADS\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tfileLoads: {...state.fileLoads, [value.payload.id]: value.payload.loads}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"SAVE_CHAT_HISTORY\":\r\n\t\t\t{\r\n\t\t\t\tconst value = action as SAVE_CHAT_HISTORY\r\n\r\n\t\t\t\tconst messagesHolder: { [message_id: number]: Message } = {}\r\n\r\n\t\t\t\tfor (const message of value.payload.messages) {\r\n\t\t\t\t\tconst messageState = messageToState(message)\r\n\t\t\t\t\tmessagesHolder[messageState.id] = messageState\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge messages\r\n\t\t\t\tlet result = state\r\n\r\n\t\t\t\tresult = {\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t...result.messages,\r\n\t\t\t\t\t\t[value.payload.chat_id]: {...(result.messages[value.payload.chat_id] ?? {}), ...messagesHolder}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n//\t\t\t\tresult = {\r\n//\t\t\t\t\t...result,\r\n//\t\t\t\t\tmessages: {\r\n//\t\t\t\t\t\t...result.messages,\r\n//\t\t\t\t\t\t[value.payload.chat_id]: messagesHolder\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n//\r\n//\t\t\t\t// TODO are message ids really unique between all chats?\r\n//\t\t\t\tfor (const message of value.payload.messages) {\r\n//\t\t\t\t\tconst messageState = messageToState(message)\r\n//\t\t\t\t\tif (result.messages[messageState.id]) alert( // TODO remove alert\r\n//\t\t\t\t\t\t'message already present\\n\\n'\r\n//\t\t\t\t\t\t+ JSON.stringify(result.messages[messageState.id])\r\n//\t\t\t\t\t\t+'\\n\\n'\r\n//\t\t\t\t\t\t+ JSON.stringify(messageState)\r\n//\t\t\t\t\t)\r\n//\t\t\t\t\tresult = {\r\n//\t\t\t\t\t\t...result,\r\n//\t\t\t\t\t\tmessages: {...result.messages, [messageState.id]: messageState}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t//history: {...result.history, [value.payload.chat_id]: value.payload.messages.map(message => message.id)}\r\n\t\t\t\t\thistory: {...result.history, [value.payload.chat_id]:\r\n\t\t\t\t\t\t[/*result.chats[value.payload.chat_id].lastMessage, */...value.payload.messages.map(message => message.id)]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"@@INIT\":\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn('Unknown action', action)\r\n\t}\r\n\t//return {...state}\r\n\treturn state\r\n}\r\n\r\nconst composeEnhancers: typeof compose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n//store.dispatch({\r\n//\ttype: 'DELETE_MESSAGE',\r\n//\tpayload: {\r\n//\t\tdemo: true\r\n//\t}\r\n//})\r\n\r\nexport default store\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport * as TL from '../tdlib/tdapi'\r\nimport { Chat, User, Message } from './types'\r\n\r\nexport function chatToState(tl: TL.TLChat): Chat {\r\n\treturn {\r\n\t\ttitle: tl.title,\r\n\t\tid: tl.id,\r\n\t\torder: tl.order,\r\n\t\tisPinned: tl.is_pinned,\r\n\t\tunreadCount: tl.unread_count,\r\n\t\tphoto: tl.photo,\r\n\t\tlastMessage: 0,\r\n\t\tonlineMemberCount: 0,\r\n\t\treplyToMessageIdDraft: tl.draft_message? tl.draft_message.reply_to_message_id : 0,\r\n\t\tdraft: tl.draft_message? tl.draft_message.input_message_text : null,\r\n\t\ttype: tl.type,\r\n\t\t//chatMemberStatus: tl.status,\r\n\t}\r\n}\r\n\r\nexport function userToState(tl: TL.TLUser): User {\r\n\treturn {\r\n\t\tid: tl.id,\r\n\t\tfirstName: tl.first_name, // TODO .trim()\r\n\t\t// TODO combinedName = +' '+\r\n\t\t// TODO Dell Acc name\r\n\t\tlastName: tl.last_name ?? '',\r\n\t\tusername: tl.username,\r\n\t\tphone: tl.phone_number ?? '',\r\n\t\ttype: tl.type,\r\n\t\tstatus: tl.status,\r\n\t\tverified: tl.is_verified,\r\n\t\tphoto: tl.profile_photo\r\n\t}\r\n}\r\n\r\nexport function supergroupToState(tl: TL.TLSupergroup) {\r\n\treturn {\r\n\t\tid: tl.id,\r\n\t\tchatMemberStatus: tl.status,\r\n\t\tisChannel: tl.is_channel,\r\n\t\tisVerified: tl.is_verified,\r\n\t\tmemberCount: tl.member_count,\r\n\t\tusername: tl.username,\r\n\t}\r\n}\r\n\r\n//function emptyChat(id: number): Chat {\r\n//\treturn {\r\n//\t\ttitle: '',\r\n//\t\tid,\r\n//\t\tisPinned: false,\r\n//\t\tunreadCount: 0,\r\n//\t\tphoto: null,\r\n//\t\tlastMessage: 0,\r\n//\t}\r\n//}\r\n\r\nexport function messageToState(tl: TL.TLMessage): Message {\r\n\treturn {\r\n\t\tid: tl.id,\r\n\t\tdate: tl.date,\r\n\t\tsenderUserId: tl.sender_user_id,\r\n\t\treplyToMessageId: tl.reply_to_message_id,\r\n\t\tcontent: tl.content,\r\n\t\t//...messageContentToPreview(tl.content)\r\n\t}\r\n}\r\n","// Hexagram\r\n// Copyright (C) 2020  Oleg Petrenko\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Lesser General Public License as published by\r\n// the Free Software Foundation, version 3 of the License.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Lesser General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Lesser General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from 'react'\r\nimport './LoginForm.scss'\r\nimport { State, LoginState } from '../../redux/store'\r\nimport * as TL from '../../tdlib/tdapi'\r\nimport { tg } from '../../tdlib/tdlib'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { downloadFile as $downloadFile } from '../../tdlib/loader'\r\nimport { nameToInitials } from '../../utils/UserInfo'\r\n\r\nfunction cleanPhoneNumber(text: string): string {\r\n\ttext = text.trim()\r\n\tif (text.startsWith('+')) text = text.substr(1).trim()\r\n\ttext = text.split('-').join('').split(' ').join('')\r\n\treturn text\r\n}\r\n\r\nfunction isCorrectPhoneNumber(text: string): boolean {\r\n\ttext = cleanPhoneNumber(text)\r\n\tfor (const char of text.split('')) {\r\n\t\tif (!'0123456789'.includes(char)) return false\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction LoginForm({state, setAuthenticationPhoneNumber, checkAuthenticationCode, checkAuthenticationPassword}: {\r\n\tstate: State,\r\n\tsetAuthenticationPhoneNumber: Function,\r\n\tcheckAuthenticationCode: Function,\r\n\tcheckAuthenticationPassword: Function\r\n}) {\r\n\tconst [phone, setPhone] = useState('')\r\n\tconst [code, setCode] = useState('')\r\n\tconst [secret, setSecret] = useState('')\r\n\r\n\tconst next = () => {\r\n\t\tlet password = secret.trim()\r\n\t\tsetSecret('')\r\n\r\n\t\tif (state.loginState == LoginState.WaitPhoneNumber && isCorrectPhoneNumber(phone)) {\r\n\t\t\tsetAuthenticationPhoneNumber(cleanPhoneNumber(phone))\r\n\t\t}\r\n\r\n\t\tif (state.loginState == LoginState.WaitCode && isCorrectPhoneNumber(code)) {\r\n\t\t\tcheckAuthenticationCode(cleanPhoneNumber(code))\r\n\t\t}\r\n\r\n\t\tif (state.loginState == LoginState.WaitPassword && password != '') {\r\n\t\t\tcheckAuthenticationPassword(password)\r\n\t\t}\r\n\r\n\t\tif (state.loginState == LoginState.WaitRegistration) {\r\n\t\t\t// TODO\r\n\t\t}\r\n\t}\r\n\r\n\tconst blur = (state.loginState != LoginState.WaitPhoneNumber) || (phone != '')\r\n\r\n\treturn <>\r\n\t<div className=\"centerBackgroundBefore\"></div>\r\n\t<div className=\"centerBackground\" style={blur? {filter: 'blur(30px)', transform: 'scale(1.1)'} : {filter: 'blur(10px)', transform: 'scale(1.0)'}}></div>\r\n\t<div className=\"loginForm\">\r\n\t\t<img src=\"logo.svg\"/>\r\n\t\t<div className=\"title\">Hexagram</div>\r\n\t\t<div className=\"sign\">Sign in to Telegram</div>\r\n\r\n\t\t{ state.loginState == LoginState.WaitPhoneNumber && <>\r\n\t\t\t<div className=\"hint\">Enter your phone number to log in</div>\r\n\t\t\t<div className=\"phone\"><input\r\n\t\t\t\tclassName={isCorrectPhoneNumber(phone)? '' : 'error'}\r\n\t\t\t\tvalue={phone} onChange={e => setPhone(e.target.value)}\r\n\t\t\t\ttype=\"tel\" name=\"phoneInput\" id=\"phoneInput\"\r\n\t\t\t\tplaceholder=\"Your phone number\"\r\n\t\t\t/></div>\r\n\t\t</> }\r\n\r\n\t\t{ state.loginState == LoginState.WaitCode && <>\r\n\t\t\t<div className=\"hint\">Enter authentication code to log in</div>\r\n\t\t\t<div className=\"code\"><input\r\n\t\t\t\tclassName={isCorrectPhoneNumber(code)? '' : 'error'}\r\n\t\t\t\tvalue={code} onChange={e => setCode(e.target.value)}\r\n\t\t\t\ttype=\"tel\" name=\"codeInput\" id=\"codeInput\"\r\n\t\t\t\tplaceholder=\"Code from SMS or message\"/></div>\r\n\t\t</> }\r\n\r\n\t\t{ state.loginState == LoginState.WaitRegistration /* TODO > show TOS */ && <>\r\n\t\t\t<div className=\"hint\">Registration is not yet implemented, sorry</div>\r\n\t\t</> }\r\n\r\n\t\t{ state.loginState == LoginState.WaitPassword /* TODO > password hint */ && <>\r\n\t\t\t<div className=\"hint\">Enter your phone 2FA password to log in</div>\r\n\t\t\t<div className=\"secret\"><input\r\n\t\t\t\tclassName={true? '' : 'error'}\r\n\t\t\t\tvalue={secret} onChange={e => setSecret(e.target.value)}\r\n\t\t\t\ttype=\"password\" name=\"secretInput\" id=\"secretInput\"\r\n\t\t\t\tplaceholder=\"Your password\"/></div>\r\n\t\t</> }\r\n\r\n\t\t<div className=\"next\" onClick={next}>NEXT</div>\r\n\r\n\t\t{ state.loginState == LoginState.WaitPhoneNumber && <div className=\"hint\">You will receive SMS</div> }\r\n\t\t{ state.loginState == LoginState.WaitCode && <div className=\"hint\">Check your SMS inbox or other devices</div> }\r\n\t\t{ state.loginState == LoginState.WaitRegistration && <div className=\"hint\">You accept Telegram terms of service</div> }\r\n\t\t{ state.loginState == LoginState.WaitPassword && <div className=\"hint\">You have set 2FA in your profile</div> }\r\n\r\n\t\t{ false && <div className=\"hint\">Wrong phone number</div> }\r\n\t\t{ false && <div className=\"hint\">Wrong secret code</div> }\r\n\t\t{ false && <div className=\"hint\">Wrong 2FA password</div> }\r\n\t</div>\r\n\t</>\r\n}\r\n\r\nconst mapStateToProps = (state: State, ownProps: any) => ({ state })\r\n\r\nfunction setAuthenticationPhoneNumber(value: string) {\r\n\treturn async (dispatch:Dispatch, getState: () => State) => {\r\n\t\tawait tg.setAuthenticationPhoneNumber(value, {\r\n\t\t\t\"@type\": \"phoneNumberAuthenticationSettings\",\r\n\t\t\tallow_flash_call: false,\r\n\t\t\tis_current_phone_number: false,\r\n\t\t\tallow_sms_retriever_api: false,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction checkAuthenticationCode(value: string) {\r\n\treturn async (dispatch:Dispatch, getState: () => State) => {\r\n\t\tawait tg.checkAuthenticationCode(value)\r\n\t}\r\n}\r\n\r\nfunction checkAuthenticationPassword(value: string) {\r\n\treturn async (dispatch:Dispatch, getState: () => State) => {\r\n\t\tawait tg.checkAuthenticationPassword(value)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n\treturn {\r\n\t\tsetAuthenticationPhoneNumber: (value: string) => {\r\n\t\t\treturn dispatch(setAuthenticationPhoneNumber(value) as any)\r\n\t\t},\r\n\t\tcheckAuthenticationCode: (value: string) => {\r\n\t\t\treturn dispatch(checkAuthenticationCode(value) as any)\r\n\t\t},\r\n\t\tcheckAuthenticationPassword: (value: string) => {\r\n\t\t\treturn dispatch(checkAuthenticationPassword(value) as any)\r\n\t\t},\r\n\t}\r\n}\r\n\r\nconst LoginFormConnected = connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n\r\nexport { LoginFormConnected as LoginForm }\r\n","// Hexagram\n// Copyright (C) 2020  Oleg Petrenko\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, version 3 of the License.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React, { useState } from 'react'\n//import logo from './logo.svg'\nimport './App.scss'\nimport { td, dispatchTelegramEventHandler, downloadFileHandler } from '../tdlib/tdlib'\nimport * as TD from '../tdlib/tdlib'\nimport { CurrentChatPanel } from '../components/history/CurrentChatPanel'\nimport { ChatsPanel } from '../components/chats/ChatsPanel'\nimport { SidePanel } from '../components/panels/SidePanel'\nimport { connect } from 'react-redux'\nimport { State, LoginState } from '../redux/store'\nimport * as TL from '../tdlib/tdapi'\nimport { downloadFile as downloadFile } from '../tdlib/loader'\nimport { LoginForm } from '../components/login/LoginForm'\nimport preview from './preview.svg'\n\nconst dispatchTelegramEventFunction = (update: TL.TLObject) => async (dispatch: any) => {\n\tdispatch({\n\t\ttype: 'TDLIB_UPDATE',\n\t\tpayload: update\n\t})\n}\n\n//{\n//\t(window as any).checkAuthenticationCode = async (code: string) => {\n//\t\tawait td.send({\n//\t\t\t'@type': 'checkAuthenticationCode',\n//\t\t\t'code': code,\n//\t\t})\n//\t}\n//}\n\nfunction App({dispatchTelegramEventFunction, downloadFile, state}: {dispatchTelegramEventFunction: any, downloadFile: any, state: State}) {\n\t//console.log('App got', props)\n\t//;(window as any).setTelegram = props.setTelegram\n\tdispatchTelegramEventHandler.handle = dispatchTelegramEventFunction\n\tdownloadFileHandler.handle = downloadFile\n\t//return <div className=\"App-header\" style={{ backgroundImage: 'url(' + preview + ')' }}><div>Updating Hexagram...</div></div>\n\n\tif (state.loaded == false) return <div className=\"App-header\" style={{ backgroundImage: 'url(' + preview + ')' }}><div>Updating Hexagram...</div></div>\n\tif (state.loginState == LoginState.WaitTDLib) return <div className=\"App-header\" style={{ backgroundImage: 'url(' + preview + ')' }}><div>Logging in...</div></div>\n\n\tif (state.loginState == LoginState.Ready) return (\n\t\t<div className=\"App\">\n\t\t\t<ChatsPanel state={state}/>\n\t\t\t<CurrentChatPanel state={state}/>\n\t\t\t{state.showSideBar && <SidePanel/>}\n\t\t</div>\n\t);\n\n\treturn <div className=\"App\"><LoginForm/></div>\n}\n\nconst mapStateToProps = (state: State, ownProps: any) => ({ state })\n\nconst mapDispatchToProps = { dispatchTelegramEventFunction, downloadFile }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Hexagram\n// Copyright (C) 2020  Oleg Petrenko\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, version 3 of the License.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}